Updatecheck<|||>3<|||>1
DoUsageStatistics<|||>3<|||>1
Theme<|||>1<|||>Material
SQL Attr Comment Foreground<|||>3<|||>8023636
SQL Attr ConditionalComment Foreground<|||>3<|||>12108397
SQL Attr DataType Foreground<|||>3<|||>15372999
SQL Attr DelimitedIdentifier Foreground<|||>3<|||>16757122
SQL Attr Function Foreground<|||>3<|||>14929603
SQL Attr Identifier Foreground<|||>3<|||>16757122
SQL Attr Key Foreground<|||>3<|||>14929603
SQL Attr Number Foreground<|||>3<|||>7361535
SQL Attr String Foreground<|||>3<|||>8906947
SQL Attr Symbol Foreground<|||>3<|||>12897152
SQL Attr TableName Foreground<|||>3<|||>6911735
SQL Attr Variable Foreground<|||>3<|||>7064575
FieldColor_Binary<|||>3<|||>13203071
FieldColor_Datetime<|||>3<|||>7566281
FieldColor_Numeric<|||>3<|||>16750469
FieldColor_Other<|||>3<|||>7586241
FieldColor_Real<|||>3<|||>13663613
FieldColor_Spatial<|||>3<|||>13553267
FieldColor_Text<|||>3<|||>7591283
UpdatecheckLastrun<|||>1<|||>2021-03-05 15:43:23
LastUsageStatisticCall<|||>1<|||>2021-02-20 10:35:39
LastSessions<|||>1<|||>aerodynamics.com.es
LastActiveSession<|||>1<|||>aerodynamics.com.es
ColWidths_connform.ListSessions<|||>1<|||>163,50,50,50,50,50,10
ColsVisible_connform.ListSessions<|||>1<|||>0,1,4,6
ColPositions_connform.ListSessions<|||>1<|||>0,1,2,3,4,5,6
ColSort_connform.ListSessions<|||>1<|||>0,0
ColWidths_frmTableEditor.listColumns<|||>1<|||>60,223,154,90,60,65,120,117,130,140,100,100
ColsVisible_frmTableEditor.listColumns<|||>1<|||>0,1,2,3,4,5,6,7,8,9,10,11
ColPositions_frmTableEditor.listColumns<|||>1<|||>0,1,2,3,4,5,6,7,8,9,10,11
ColSort_frmTableEditor.listColumns<|||>1<|||>-1,0
ColWidths_frmTableEditor.treeIndexes<|||>1<|||>434,100,80
ColsVisible_frmTableEditor.treeIndexes<|||>1<|||>0,1,2
ColPositions_frmTableEditor.treeIndexes<|||>1<|||>0,1,2
ColSort_frmTableEditor.treeIndexes<|||>1<|||>-1,0
ColWidths_frmTableEditor.listForeignKeys<|||>1<|||>200,80,100,80,80,80
ColsVisible_frmTableEditor.listForeignKeys<|||>1<|||>0,1,2,3,4,5
ColPositions_frmTableEditor.listForeignKeys<|||>1<|||>0,1,2,3,4,5
ColSort_frmTableEditor.listForeignKeys<|||>1<|||>-1,0
MainWinOnMonitor<|||>3<|||>0
ColWidths_MainForm.ListDatabases<|||>1<|||>170,80,50,50,50,50,50,50,50,50,120
ColsVisible_MainForm.ListDatabases<|||>1<|||>0,1,2,3,4,5,6,7,8,9,10
ColPositions_MainForm.ListDatabases<|||>1<|||>0,1,2,3,4,5,6,7,8,9,10
ColSort_MainForm.ListDatabases<|||>1<|||>0,0
ColWidths_MainForm.ListVariables<|||>1<|||>160,200,428
ColsVisible_MainForm.ListVariables<|||>1<|||>0,1,2
ColPositions_MainForm.ListVariables<|||>1<|||>0,1,2
ColSort_MainForm.ListVariables<|||>1<|||>0,0
ColWidths_MainForm.ListStatus<|||>1<|||>160,428,100,100
ColsVisible_MainForm.ListStatus<|||>1<|||>0,1,2,3
ColPositions_MainForm.ListStatus<|||>1<|||>0,1,2,3
ColSort_MainForm.ListStatus<|||>1<|||>0,0
ColWidths_MainForm.ListProcesses<|||>1<|||>70,80,80,80,80,50,50,718
ColsVisible_MainForm.ListProcesses<|||>1<|||>0,1,2,3,4,5,6,7
ColPositions_MainForm.ListProcesses<|||>1<|||>0,1,2,3,4,5,6,7
ColSort_MainForm.ListProcesses<|||>1<|||>0,1
ColWidths_MainForm.ListCommandStats<|||>1<|||>120,100,100,100,368
ColsVisible_MainForm.ListCommandStats<|||>1<|||>0,1,2,3,4
ColPositions_MainForm.ListCommandStats<|||>1<|||>0,1,2,3,4
ColSort_MainForm.ListCommandStats<|||>1<|||>1,1
ColWidths_MainForm.ListTables<|||>1<|||>349,70,70,120,120,70,100,50,70,70,70,70,70,90,120,70,70,70,50
ColsVisible_MainForm.ListTables<|||>1<|||>0,1,2,3,4,5,6,18
ColPositions_MainForm.ListTables<|||>1<|||>0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18
ColSort_MainForm.ListTables<|||>1<|||>0,0
SessionManager_WindowLeft<|||>3<|||>484
SessionManager_WindowTop<|||>3<|||>84
FavoriteObjectsOnly<|||>3<|||>1
MainWinMaximized<|||>3<|||>0
CopyTable_WindowWidth<|||>3<|||>381
ColumnSelectorWidth<|||>3<|||>201
PromptSaveFileOnTabClose<|||>3<|||>0
DateTimeEditor_CursorPos_Type4<|||>3<|||>10
dbtreewidth<|||>3<|||>40
MainWinTop<|||>3<|||>0
MemoEditorWidth<|||>3<|||>137
MemoEditorMaximized<|||>3<|||>1
querymemoheight<|||>3<|||>308
MainWinLeft<|||>3<|||>0
MainWinWidth<|||>3<|||>1280
MainWinHeight<|||>3<|||>680
CopyTable_Data<|||>3<|||>0
QueryWarningsMessage<|||>3<|||>0
ExportSQL_CreateDatabases<|||>3<|||>1
ExportSQL_CreateTables<|||>3<|||>1
ExportSQL_DataHow<|||>3<|||>2
ExportSQL_Filenames<|||>1<|||>C:\xampp\htdocs\www\aerodynamics\dist\copiasBBDD\copiaReservasYvuelosAntesMarzo2021.sql<{{{><}}}>C:\xampp\htdocs\casakiki\bbdd\casakikiDBlimpia.sql<{{{><}}}>C:\Users\dataleanmakers\Desktop\arbitraje.sql<{{{><}}}>C:\Users\dataleanmakers\Desktop\aerodynamicsHistorico.sql<{{{><}}}>C:\Users\dataleanmakers\Desktop\aerodynamics.sql<{{{><}}}>aerodynamics<{{{><}}}>
CopyTable_WindowHeight<|||>3<|||>341
sqloutheight<|||>3<|||>30
ExportSQL_DataInsertSize<|||>3<|||>0
TableTools_WindowWidth<|||>3<|||>1008
CreateDbCollation<|||>1<|||>utf8_general_ci
DataFontSize<|||>3<|||>8
queryhelperswidth<|||>3<|||>20
TableTools_TreeWidth<|||>3<|||>462
FileDialogEncoding_MainForm<|||>3<|||>0
CSVImportWindowHeight<|||>3<|||>531
ColWidths_frmTableEditor.listCheckConstraints<|||>1<|||>200,420
ColsVisible_frmTableEditor.listCheckConstraints<|||>1<|||>0,1
ColPositions_frmTableEditor.listCheckConstraints<|||>1<|||>0,1
ColSort_frmTableEditor.listCheckConstraints<|||>1<|||>-1,0
SQLFile0<|||>1<|||>C:\Users\dataleanmakers\AppData\Roaming\HeidiSQL\Backups\query-tab-2021-02-25_23-04-37-140.sql
SQLFile1<|||>1<|||>C:\Users\dataleanmakers\AppData\Roaming\HeidiSQL\Backups\query-tab-2021-02-25_15-30-36-593.sql
SQLFile2<|||>1<|||>C:\Users\dataleanmakers\AppData\Roaming\HeidiSQL\Backups\query-tab-2021-02-25_15-14-59-636.sql
SQLFile3<|||>1<|||>C:\Users\dataleanmakers\AppData\Roaming\HeidiSQL\Backups\query-tab-.sql
SQLFile4<|||>1<|||>C:\Users\dataleanmakers\Desktop\arbitraje.sql
SQLFile5<|||>1<|||>C:\Users\dataleanmakers\Desktop\aerodynamicsHistorico.sql
SQLFile6<|||>1<|||>C:\Users\dataleanmakers\Downloads\admin_drwatson.sql
SQLFile7<|||>1<|||>C:\Users\dataleanmakers\Downloads\konbert-export-63547ef7dffe4.sql
SQLFile8<|||>1<|||>C:\Users\dataleanmakers\AppData\Roaming\HeidiSQL\Backups\query-tab-2020-10-16_09-25-38-168.sql
SQLFile9<|||>1<|||>C:\Users\dataleanmakers\AppData\Roaming\HeidiSQL\Backups\query-tab-2020-07-23_09-15-31-740.sql
Servers\admin_casakiki\SessionCreated<|||>1<|||>2021-02-08 22:43:03
Servers\admin_casakiki\Host<|||>1<|||>dataleanmakers.com.es
Servers\admin_casakiki\WindowsAuth<|||>3<|||>0
Servers\admin_casakiki\CleartextPluginEnabled<|||>3<|||>0
Servers\admin_casakiki\User<|||>1<|||>admin_casakiki
Servers\admin_casakiki\Password<|||>1<|||>4A6D767277686C6A7C6A747274723B393B392D9
Servers\admin_casakiki\LoginPrompt<|||>3<|||>0
Servers\admin_casakiki\Port<|||>1<|||>3306
Servers\admin_casakiki\NetType<|||>3<|||>0
Servers\admin_casakiki\Compressed<|||>3<|||>0
Servers\admin_casakiki\LocalTimeZone<|||>3<|||>0
Servers\admin_casakiki\QueryTimeout<|||>3<|||>30
Servers\admin_casakiki\KeepAlive<|||>3<|||>20
Servers\admin_casakiki\FullTableStatus<|||>3<|||>1
Servers\admin_casakiki\Databases<|||>1<|||>
Servers\admin_casakiki\Library<|||>1<|||>libmariadb.dll
Servers\admin_casakiki\Comment<|||>1<|||>
Servers\admin_casakiki\StartupScriptFilename<|||>1<|||>
Servers\admin_casakiki\TreeBackground<|||>3<|||>536870911
Servers\admin_casakiki\SSHtunnelHost<|||>1<|||>
Servers\admin_casakiki\SSHtunnelHostPort<|||>3<|||>22
Servers\admin_casakiki\SSHtunnelUser<|||>1<|||>
Servers\admin_casakiki\SSHtunnelPassword<|||>1<|||>2
Servers\admin_casakiki\SSHtunnelTimeout<|||>3<|||>4
Servers\admin_casakiki\SSHtunnelPrivateKey<|||>1<|||>
Servers\admin_casakiki\SSHtunnelPort<|||>3<|||>3307
Servers\admin_casakiki\SSL_Active<|||>3<|||>0
Servers\admin_casakiki\SSL_Key<|||>1<|||>
Servers\admin_casakiki\SSL_Cert<|||>1<|||>
Servers\admin_casakiki\SSL_CA<|||>1<|||>
Servers\admin_casakiki\SSL_Cipher<|||>1<|||>
Servers\admin_casakiki\IgnoreDatabasePattern<|||>1<|||>
Servers\admin_casakiki\ServerVersionFull<|||>1<|||>10.3.27-MariaDB - MariaDB Server
Servers\admin_casakiki\ConnectCount<|||>3<|||>6
Servers\admin_casakiki\ServerVersion<|||>3<|||>100327
Servers\admin_casakiki\LastConnect<|||>1<|||>2021-02-10 22:36:38
Servers\admin_casakiki\lastUsedDB<|||>1<|||>admin_casakiki
Servers\admin_casakiki\QueryHistory\1<|||>1<|||>2021-02-08 22:44:51|admin_casakiki|62|CREATE TABLE `usuarios` (<{{{><}}}>	`idUsuario` INT(10) NOT NULL AUTO_INCREMENT,<{{{><}}}>	`nombre` VARCHAR(200) NULL DEFAULT NULL COLLATE 'utf8_general_ci',<{{{><}}}>	`mail` VARCHAR(200) NULL DEFAULT NULL COLLATE 'utf8_general_ci',<{{{><}}}>	`password` VARCHAR(25) NULL DEFAULT NULL COLLATE 'utf8_general_ci',<{{{><}}}>	`rol` INT(11) NULL DEFAULT NULL,<{{{><}}}>	PRIMARY KEY (`idUsuario`) USING BTREE<{{{><}}}>)<{{{><}}}>COLLATE='utf8_general_ci'<{{{><}}}>ENGINE=InnoDB<{{{><}}}>AUTO_INCREMENT=12<{{{><}}}>;
Servers\admin_casakiki\QueryHistory\2<|||>1<|||>2021-02-08 22:45:23|admin_casakiki|62|CREATE TABLE `roles` (<{{{><}}}>	`idRoles` INT(11) NOT NULL AUTO_INCREMENT,<{{{><}}}>	`nombre` VARCHAR(30) NOT NULL DEFAULT 'Agente' COLLATE 'utf8mb4_general_ci',<{{{><}}}>	`color` VARCHAR(10) NOT NULL DEFAULT '#007bff' COLLATE 'utf8mb4_general_ci',<{{{><}}}>	PRIMARY KEY (`idRoles`) USING BTREE<{{{><}}}>)<{{{><}}}>COLLATE='utf8mb4_general_ci'<{{{><}}}>ENGINE=InnoDB<{{{><}}}>AUTO_INCREMENT=5<{{{><}}}>;
Servers\aerodynamics\SessionCreated<|||>1<|||>2020-08-25 11:59:00
Servers\aerodynamics\Host<|||>1<|||>dataleanmakers.net
Servers\aerodynamics\WindowsAuth<|||>3<|||>0
Servers\aerodynamics\CleartextPluginEnabled<|||>3<|||>0
Servers\aerodynamics\User<|||>1<|||>admin_aerody
Servers\aerodynamics\Password<|||>1<|||>62667370657A6F626E6A647433313331251
Servers\aerodynamics\LoginPrompt<|||>3<|||>0
Servers\aerodynamics\Port<|||>1<|||>3306
Servers\aerodynamics\NetType<|||>3<|||>0
Servers\aerodynamics\Compressed<|||>3<|||>0
Servers\aerodynamics\LocalTimeZone<|||>3<|||>0
Servers\aerodynamics\QueryTimeout<|||>3<|||>30
Servers\aerodynamics\KeepAlive<|||>3<|||>20
Servers\aerodynamics\FullTableStatus<|||>3<|||>1
Servers\aerodynamics\Databases<|||>1<|||>
Servers\aerodynamics\Library<|||>1<|||>libmariadb.dll
Servers\aerodynamics\Comment<|||>1<|||>
Servers\aerodynamics\StartupScriptFilename<|||>1<|||>
Servers\aerodynamics\TreeBackground<|||>3<|||>536870911
Servers\aerodynamics\SSHtunnelHost<|||>1<|||>
Servers\aerodynamics\SSHtunnelHostPort<|||>3<|||>22
Servers\aerodynamics\SSHtunnelUser<|||>1<|||>
Servers\aerodynamics\SSHtunnelPassword<|||>1<|||>5
Servers\aerodynamics\SSHtunnelTimeout<|||>3<|||>4
Servers\aerodynamics\SSHtunnelPrivateKey<|||>1<|||>
Servers\aerodynamics\SSHtunnelPort<|||>3<|||>3307
Servers\aerodynamics\SSL_Active<|||>3<|||>0
Servers\aerodynamics\SSL_Key<|||>1<|||>
Servers\aerodynamics\SSL_Cert<|||>1<|||>
Servers\aerodynamics\SSL_CA<|||>1<|||>
Servers\aerodynamics\SSL_Cipher<|||>1<|||>
Servers\aerodynamics\ServerVersionFull<|||>1<|||>10.1.26-MariaDB-0+deb9u1 - Debian 9.1
Servers\aerodynamics\ConnectCount<|||>3<|||>51
Servers\aerodynamics\ServerVersion<|||>3<|||>100126
Servers\aerodynamics\LastConnect<|||>1<|||>2020-12-19 13:59:05
Servers\aerodynamics\lastUsedDB<|||>1<|||>admin_aerodynamics
Servers\aerodynamics\RefusedCount<|||>3<|||>12
Servers\aerodynamics\admin_aerodynamics|aviones_historico_posicionamiento\Sort<|||>1<|||>1_Fecha|
Servers\aerodynamics\admin_aerodynamics|aviones_historico_posicionamiento\Filter<|||>1<|||>`id` LIKE '%2020-12-13%' OR `Imei` LIKE '%2020-12-13%' OR `Matricula` LIKE '%2020-12-13%' OR CAST(`Fecha` AS CHAR) LIKE '%2020-12-13%'<{{{><}}}> OR `Loc` LIKE '%2020-12-13%' OR `Rumbo` LIKE '%2020-12-13%' OR `Veloc` LIKE '%2020-12-13%' OR `Ignic` LIKE '%2020-12-13%'<{{{><}}}> OR `Ibutton` LIKE '%2020-12-13%' OR `Alt` LIKE '%2020-12-13%' OR `latitud` LIKE '%2020-12-13%' OR `longitud` LIKE '%2020-12-13%'<{{{><}}}> OR `nudos` LIKE '%2020-12-13%' OR `pies` LIKE '%2020-12-13%'<{{{><}}}>
Servers\aerodynamics\admin_aerodynamics|aviones_historico_posicionamiento\RecentFilters\1<|||>1<|||>`id` LIKE '%2020-12-13%' OR `Imei` LIKE '%2020-12-13%' OR `Matricula` LIKE '%2020-12-13%' OR CAST(`Fecha` AS CHAR) LIKE '%2020-12-13%'<{{{><}}}> OR `Loc` LIKE '%2020-12-13%' OR `Rumbo` LIKE '%2020-12-13%' OR `Veloc` LIKE '%2020-12-13%' OR `Ignic` LIKE '%2020-12-13%'<{{{><}}}> OR `Ibutton` LIKE '%2020-12-13%' OR `Alt` LIKE '%2020-12-13%' OR `latitud` LIKE '%2020-12-13%' OR `longitud` LIKE '%2020-12-13%'<{{{><}}}> OR `nudos` LIKE '%2020-12-13%' OR `pies` LIKE '%2020-12-13%'
Servers\aerodynamics\admin_aerodynamics|aviones_historico_posicionamiento\RecentFilters\2<|||>1<|||>`id` LIKE '%EC-KTO%' OR `Imei` LIKE '%EC-KTO%' OR `Matricula` LIKE '%EC-KTO%' OR CAST(`Fecha` AS CHAR) LIKE '%EC-KTO%' OR `Loc` LIKE '%EC-KTO%'<{{{><}}}> OR `Rumbo` LIKE '%EC-KTO%' OR `Veloc` LIKE '%EC-KTO%' OR `Ignic` LIKE '%EC-KTO%' OR `Ibutton` LIKE '%EC-KTO%' OR `Alt` LIKE '%EC-KTO%'<{{{><}}}> OR `latitud` LIKE '%EC-KTO%' OR `longitud` LIKE '%EC-KTO%' OR `nudos` LIKE '%EC-KTO%' OR `pies` LIKE '%EC-KTO%'
Servers\aerodynamics\admin_aerodynamics|aviones_historico_posicionamiento\RecentFilters\3<|||>1<|||>`id` LIKE '% EC-KTO%' OR `Imei` LIKE '% EC-KTO%' OR `Matricula` LIKE '% EC-KTO%' OR CAST(`Fecha` AS CHAR) LIKE '% EC-KTO%'<{{{><}}}> OR `Loc` LIKE '% EC-KTO%' OR `Rumbo` LIKE '% EC-KTO%' OR `Veloc` LIKE '% EC-KTO%' OR `Ignic` LIKE '% EC-KTO%' OR `Ibutton` LIKE '% EC-KTO%'<{{{><}}}> OR `Alt` LIKE '% EC-KTO%' OR `latitud` LIKE '% EC-KTO%' OR `longitud` LIKE '% EC-KTO%' OR `nudos` LIKE '% EC-KTO%' OR `pies` LIKE '% EC-KTO%'
Servers\aerodynamics\admin_aerodynamics|aviones_historico_posicionamiento\RecentFilters\4<|||>1<|||>`id` LIKE '%2020-11-04 15:20%' OR `Imei` LIKE '%2020-11-04 15:20%' OR `Matricula` LIKE '%2020-11-04 15:20%' OR CAST(`Fecha` AS CHAR) LIKE '%2020-11-04 15:20%'<{{{><}}}> OR `Loc` LIKE '%2020-11-04 15:20%' OR `Rumbo` LIKE '%2020-11-04 15:20%' OR `Veloc` LIKE '%2020-11-04 15:20%' OR `Ignic` LIKE '%2020-11-04 15:20%'<{{{><}}}> OR `Ibutton` LIKE '%2020-11-04 15:20%' OR `Alt` LIKE '%2020-11-04 15:20%' OR `latitud` LIKE '%2020-11-04 15:20%' OR `longitud` LIKE '%2020-11-04 15:20%'<{{{><}}}> OR `nudos` LIKE '%2020-11-04 15:20%' OR `pies` LIKE '%2020-11-04 15:20%'
Servers\aerodynamics\admin_aerodynamics|aviones_historico_posicionamiento\RecentFilters\5<|||>1<|||>`id` LIKE '%2020-11-04 15:40%' OR `Imei` LIKE '%2020-11-04 15:40%' OR `Matricula` LIKE '%2020-11-04 15:40%' OR CAST(`Fecha` AS CHAR) LIKE '%2020-11-04 15:40%'<{{{><}}}> OR `Loc` LIKE '%2020-11-04 15:40%' OR `Rumbo` LIKE '%2020-11-04 15:40%' OR `Veloc` LIKE '%2020-11-04 15:40%' OR `Ignic` LIKE '%2020-11-04 15:40%'<{{{><}}}> OR `Ibutton` LIKE '%2020-11-04 15:40%' OR `Alt` LIKE '%2020-11-04 15:40%' OR `latitud` LIKE '%2020-11-04 15:40%' OR `longitud` LIKE '%2020-11-04 15:40%'<{{{><}}}> OR `nudos` LIKE '%2020-11-04 15:40%' OR `pies` LIKE '%2020-11-04 15:40%'
Servers\aerodynamics\admin_aerodynamics|aviones_historico_posicionamiento\RecentFilters\6<|||>1<|||>`id` LIKE '%2020-11-04 %' OR `Imei` LIKE '%2020-11-04 %' OR `Matricula` LIKE '%2020-11-04 %' OR CAST(`Fecha` AS CHAR) LIKE '%2020-11-04 %'<{{{><}}}> OR `Loc` LIKE '%2020-11-04 %' OR `Rumbo` LIKE '%2020-11-04 %' OR `Veloc` LIKE '%2020-11-04 %' OR `Ignic` LIKE '%2020-11-04 %'<{{{><}}}> OR `Ibutton` LIKE '%2020-11-04 %' OR `Alt` LIKE '%2020-11-04 %' OR `latitud` LIKE '%2020-11-04 %' OR `longitud` LIKE '%2020-11-04 %'<{{{><}}}> OR `nudos` LIKE '%2020-11-04 %' OR `pies` LIKE '%2020-11-04 %'
Servers\aerodynamics\admin_aerodynamics|aviones_instructor\Sort<|||>1<|||>1_idAvInstructor|
Servers\aerodynamics\admin_aerodynamics|cursos\RecentFilters\1<|||>1<|||>`idCurso` LIKE '%CO%' OR `refCurso` LIKE '%CO%' OR `nombre` LIKE '%CO%' OR CAST(`fechaCreacion` AS CHAR) LIKE '%CO%' OR `activo` LIKE '%CO%'<{{{><}}}> OR `duracion` LIKE '%CO%' OR `precio` LIKE '%CO%' OR `duracionTeoria` LIKE '%CO%' OR `duracionVuelo` LIKE '%CO%' OR `duracionSimulador` LIKE '%CO%'
Servers\aerodynamics\admin_aerodynamics|cursos\RecentFilters\2<|||>1<|||>`idCurso` LIKE '%CONV %' OR `refCurso` LIKE '%CONV %' OR `nombre` LIKE '%CONV %' OR CAST(`fechaCreacion` AS CHAR) LIKE '%CONV %'<{{{><}}}> OR `activo` LIKE '%CONV %' OR `duracion` LIKE '%CONV %' OR `precio` LIKE '%CONV %' OR `duracionTeoria` LIKE '%CONV %' OR `duracionVuelo` LIKE '%CONV %'<{{{><}}}> OR `duracionSimulador` LIKE '%CONV %'
Servers\aerodynamics\admin_aerodynamics|cursos\RecentFilters\3<|||>1<|||>`idCurso` LIKE '%CONV A%' OR `refCurso` LIKE '%CONV A%' OR `nombre` LIKE '%CONV A%' OR CAST(`fechaCreacion` AS CHAR) LIKE '%CONV A%'<{{{><}}}> OR `activo` LIKE '%CONV A%' OR `duracion` LIKE '%CONV A%' OR `precio` LIKE '%CONV A%' OR `duracionTeoria` LIKE '%CONV A%'<{{{><}}}> OR `duracionVuelo` LIKE '%CONV A%' OR `duracionSimulador` LIKE '%CONV A%'
Servers\aerodynamics\admin_aerodynamics|cursos\RecentFilters\4<|||>1<|||>`idCurso` LIKE '%CHECK%' OR `refCurso` LIKE '%CHECK%' OR `nombre` LIKE '%CHECK%' OR CAST(`fechaCreacion` AS CHAR) LIKE '%CHECK%'<{{{><}}}> OR `activo` LIKE '%CHECK%' OR `duracion` LIKE '%CHECK%' OR `precio` LIKE '%CHECK%' OR `duracionTeoria` LIKE '%CHECK%' OR `duracionVuelo` LIKE '%CHECK%'<{{{><}}}> OR `duracionSimulador` LIKE '%CHECK%'
Servers\aerodynamics\admin_aerodynamics|cursos\RecentFilters\5<|||>1<|||>`idCurso` LIKE '%PPL%' OR `refCurso` LIKE '%PPL%' OR `nombre` LIKE '%PPL%' OR CAST(`fechaCreacion` AS CHAR) LIKE '%PPL%'<{{{><}}}> OR `activo` LIKE '%PPL%' OR `duracion` LIKE '%PPL%' OR `precio` LIKE '%PPL%' OR `duracionTeoria` LIKE '%PPL%' OR `duracionVuelo` LIKE '%PPL%'<{{{><}}}> OR `duracionSimulador` LIKE '%PPL%'
Servers\aerodynamics\admin_aerodynamics|cursos\RecentFilters\6<|||>1<|||>`idCurso` LIKE '%MEPL%' OR `refCurso` LIKE '%MEPL%' OR `nombre` LIKE '%MEPL%' OR CAST(`fechaCreacion` AS CHAR) LIKE '%MEPL%'<{{{><}}}> OR `activo` LIKE '%MEPL%' OR `duracion` LIKE '%MEPL%' OR `precio` LIKE '%MEPL%' OR `duracionTeoria` LIKE '%MEPL%' OR `duracionVuelo` LIKE '%MEPL%'<{{{><}}}> OR `duracionSimulador` LIKE '%MEPL%'
Servers\aerodynamics\admin_aerodynamics|cursos\RecentFilters\7<|||>1<|||>`idCurso` LIKE '%CRI%' OR `refCurso` LIKE '%CRI%' OR `nombre` LIKE '%CRI%' OR CAST(`fechaCreacion` AS CHAR) LIKE '%CRI%'<{{{><}}}> OR `activo` LIKE '%CRI%' OR `duracion` LIKE '%CRI%' OR `precio` LIKE '%CRI%' OR `duracionTeoria` LIKE '%CRI%' OR `duracionVuelo` LIKE '%CRI%'<{{{><}}}> OR `duracionSimulador` LIKE '%CRI%'
Servers\aerodynamics\admin_aerodynamics|cursos\RecentFilters\8<|||>1<|||>`idCurso` LIKE '%CPL%' OR `refCurso` LIKE '%CPL%' OR `nombre` LIKE '%CPL%' OR CAST(`fechaCreacion` AS CHAR) LIKE '%CPL%'<{{{><}}}> OR `activo` LIKE '%CPL%' OR `duracion` LIKE '%CPL%' OR `precio` LIKE '%CPL%' OR `duracionTeoria` LIKE '%CPL%' OR `duracionVuelo` LIKE '%CPL%'<{{{><}}}> OR `duracionSimulador` LIKE '%CPL%'
Servers\aerodynamics\admin_aerodynamics|cursos\RecentFilters\9<|||>1<|||>`idCurso` LIKE '%55%' OR `refCurso` LIKE '%55%' OR `nombre` LIKE '%55%' OR CAST(`fechaCreacion` AS CHAR) LIKE '%55%' OR `activo` LIKE '%55%'<{{{><}}}> OR `duracion` LIKE '%55%' OR `precio` LIKE '%55%' OR `duracionTeoria` LIKE '%55%' OR `duracionVuelo` LIKE '%55%' OR `duracionSimulador` LIKE '%55%'
Servers\aerodynamics\admin_aerodynamics|cursos\RecentFilters\10<|||>1<|||>`idCurso` LIKE '%ME 55%' OR `refCurso` LIKE '%ME 55%' OR `nombre` LIKE '%ME 55%' OR CAST(`fechaCreacion` AS CHAR) LIKE '%ME 55%'<{{{><}}}> OR `activo` LIKE '%ME 55%' OR `duracion` LIKE '%ME 55%' OR `precio` LIKE '%ME 55%' OR `duracionTeoria` LIKE '%ME 55%' OR `duracionVuelo` LIKE '%ME 55%'<{{{><}}}> OR `duracionSimulador` LIKE '%ME 55%'
Servers\aerodynamics\admin_aerodynamics|cursos\RecentFilters\11<|||>1<|||>`idCurso` LIKE '%IR(SE)%' OR `refCurso` LIKE '%IR(SE)%' OR `nombre` LIKE '%IR(SE)%' OR CAST(`fechaCreacion` AS CHAR) LIKE '%IR(SE)%'<{{{><}}}> OR `activo` LIKE '%IR(SE)%' OR `duracion` LIKE '%IR(SE)%' OR `precio` LIKE '%IR(SE)%' OR `duracionTeoria` LIKE '%IR(SE)%'<{{{><}}}> OR `duracionVuelo` LIKE '%IR(SE)%' OR `duracionSimulador` LIKE '%IR(SE)%'
Servers\aerodynamics\admin_aerodynamics|cursos\RecentFilters\12<|||>1<|||>`idCurso` LIKE '%rating%' OR `refCurso` LIKE '%rating%' OR `nombre` LIKE '%rating%' OR CAST(`fechaCreacion` AS CHAR) LIKE '%rating%'<{{{><}}}> OR `activo` LIKE '%rating%' OR `duracion` LIKE '%rating%' OR `precio` LIKE '%rating%' OR `duracionTeoria` LIKE '%rating%'<{{{><}}}> OR `duracionVuelo` LIKE '%rating%' OR `duracionSimulador` LIKE '%rating%'
Servers\aerodynamics\admin_aerodynamics|cursos\RecentFilters\13<|||>1<|||>`idCurso` LIKE '%CONV%' OR `refCurso` LIKE '%CONV%' OR `nombre` LIKE '%CONV%' OR CAST(`fechaCreacion` AS CHAR) LIKE '%CONV%'<{{{><}}}> OR `activo` LIKE '%CONV%' OR `duracion` LIKE '%CONV%' OR `precio` LIKE '%CONV%' OR `duracionTeoria` LIKE '%CONV%' OR `duracionVuelo` LIKE '%CONV%'<{{{><}}}> OR `duracionSimulador` LIKE '%CONV%'
Servers\aerodynamics\admin_aerodynamics|cursos\RecentFilters\14<|||>1<|||>`idCurso` LIKE '%to%' OR `refCurso` LIKE '%to%' OR `nombre` LIKE '%to%' OR CAST(`fechaCreacion` AS CHAR) LIKE '%to%' OR `activo` LIKE '%to%'<{{{><}}}> OR `duracion` LIKE '%to%' OR `precio` LIKE '%to%' OR `duracionTeoria` LIKE '%to%' OR `duracionVuelo` LIKE '%to%' OR `duracionSimulador` LIKE '%to%'
Servers\aerodynamics\admin_aerodynamics|cursos\RecentFilters\15<|||>1<|||>`idCurso` LIKE '%seir%' OR `refCurso` LIKE '%seir%' OR `nombre` LIKE '%seir%' OR CAST(`fechaCreacion` AS CHAR) LIKE '%seir%'<{{{><}}}> OR `activo` LIKE '%seir%' OR `duracion` LIKE '%seir%' OR `precio` LIKE '%seir%' OR `duracionTeoria` LIKE '%seir%' OR `duracionVuelo` LIKE '%seir%'<{{{><}}}> OR `duracionSimulador` LIKE '%seir%'
Servers\aerodynamics\admin_aerodynamics|cursos\RecentFilters\16<|||>1<|||>`idCurso` LIKE '%MEIR%' OR `refCurso` LIKE '%MEIR%' OR `nombre` LIKE '%MEIR%' OR CAST(`fechaCreacion` AS CHAR) LIKE '%MEIR%'<{{{><}}}> OR `activo` LIKE '%MEIR%' OR `duracion` LIKE '%MEIR%' OR `precio` LIKE '%MEIR%' OR `duracionTeoria` LIKE '%MEIR%' OR `duracionVuelo` LIKE '%MEIR%'<{{{><}}}> OR `duracionSimulador` LIKE '%MEIR%'
Servers\aerodynamics\admin_aerodynamics|cursos_instructor\Sort<|||>1<|||>1_idLesInstructor|
Servers\aerodynamics\admin_aerodynamics|disponibilidad_pilotos\Sort<|||>1<|||>1_id|
Servers\aerodynamics\admin_aerodynamics|log\Sort<|||>1<|||>1_id|
Servers\aerodynamics\admin_aerodynamics|personas\Sort<|||>1<|||>1_idPersona|
Servers\aerodynamics\admin_aerodynamics|personas\RecentFilters\1<|||>1<|||>`idPersona` LIKE '%garrido%' OR `idPrivateRadar` LIKE '%garrido%' OR `idUsuario` LIKE '%garrido%'<{{{><}}}> OR `idtipo` LIKE '%garrido%' OR `idperfil` LIKE '%garrido%' OR `idpuesto` LIKE '%garrido%'<{{{><}}}> OR `titulo` LIKE '%garrido%' OR `nombre` LIKE '%garrido%' OR `segundoNombre` LIKE '%garrido%'<{{{><}}}> OR `apellido` LIKE '%garrido%' OR `suffix` LIKE '%garrido%' OR `codigo` LIKE '%garrido%'<{{{><}}}> OR `nacionalidad` LIKE '%garrido%' OR `email1` LIKE '%garrido%' OR `email2` LIKE '%garrido%'<{{{><}}}> OR `telefono` LIKE '%garrido%' OR `tipoTelefono` LIKE '%garrido%' OR `telefono2` LIKE '%garrido%'<{{{><}}}> OR CAST(`nacimiento` AS CHAR) LIKE '%garrido%' OR `identidad` LIKE '%garrido%' OR `licencia` LIKE '%garrido%'<{{{><}}}> OR `codigoCliente` LIKE '%garrido%' OR `instructorvuelo` LIKE '%garrido%' OR `instructorMCC` LIKE '%garrido%'<{{{><}}}> OR `instructorSuelo` LIKE '%garrido%' OR `examinador` LIKE '%garrido%' OR `AOC` LIKE '%garrido%'<{{{><}}}> OR `direccion` LIKE '%garrido%' OR `direccion2` LIKE '%garrido%' OR `codigoPostal` LIKE '%garrido%'<{{{><}}}> OR `provincia` LIKE '%garrido%' OR `poblacion` LIKE '%garrido%' OR `nombreEm` LIKE '%garrido%'<{{{><}}}> OR `apellidoEm` LIKE '%garrido%' OR `telefonoEm` LIKE '%garrido%' OR `emailEm` LIKE '%garrido%'<{{{><}}}> OR `relacion` LIKE '%garrido%' OR `comentarios` LIKE '%garrido%' OR `notas` LIKE '%garrido%'<{{{><}}}> OR `proffile` LIKE '%garrido%' OR `basePrincipal` LIKE '%garrido%' OR `baseSeg` LIKE '%garrido%'<{{{><}}}> OR CAST(`temFrom` AS CHAR) LIKE '%garrido%' OR CAST(`temTo` AS CHAR) LIKE '%garrido%'<{{{><}}}> OR `autoInvoice` LIKE '%garrido%' OR `imagen_name` LIKE '%garrido%' OR `active` LIKE '%garrido%'<{{{><}}}> OR `carrier` LIKE '%garrido%' OR `groups` LIKE '%garrido%' OR `status` LIKE '%garrido%'<{{{><}}}> OR `tipo` LIKE '%garrido%' OR `lang` LIKE '%garrido%' OR `flySolo` LIKE '%garrido%'<{{{><}}}> OR `flyPax` LIKE '%garrido%' OR `pais` LIKE '%garrido%'
Servers\aerodynamics\admin_aerodynamics|personas\RecentFilters\2<|||>1<|||>`idPersona` LIKE '%susana%' OR `idPrivateRadar` LIKE '%susana%' OR `idUsuario` LIKE '%susana%'<{{{><}}}> OR `idtipo` LIKE '%susana%' OR `idperfil` LIKE '%susana%' OR `idpuesto` LIKE '%susana%'<{{{><}}}> OR `titulo` LIKE '%susana%' OR `nombre` LIKE '%susana%' OR `segundoNombre` LIKE '%susana%'<{{{><}}}> OR `apellido` LIKE '%susana%' OR `suffix` LIKE '%susana%' OR `codigo` LIKE '%susana%'<{{{><}}}> OR `nacionalidad` LIKE '%susana%' OR `email1` LIKE '%susana%' OR `email2` LIKE '%susana%'<{{{><}}}> OR `telefono` LIKE '%susana%' OR `tipoTelefono` LIKE '%susana%' OR `telefono2` LIKE '%susana%'<{{{><}}}> OR CAST(`nacimiento` AS CHAR) LIKE '%susana%' OR `identidad` LIKE '%susana%' OR `licencia` LIKE '%susana%'<{{{><}}}> OR `codigoCliente` LIKE '%susana%' OR `instructorvuelo` LIKE '%susana%' OR `instructorMCC` LIKE '%susana%'<{{{><}}}> OR `instructorSuelo` LIKE '%susana%' OR `examinador` LIKE '%susana%' OR `AOC` LIKE '%susana%'<{{{><}}}> OR `direccion` LIKE '%susana%' OR `direccion2` LIKE '%susana%' OR `codigoPostal` LIKE '%susana%'<{{{><}}}> OR `provincia` LIKE '%susana%' OR `poblacion` LIKE '%susana%' OR `nombreEm` LIKE '%susana%'<{{{><}}}> OR `apellidoEm` LIKE '%susana%' OR `telefonoEm` LIKE '%susana%' OR `emailEm` LIKE '%susana%'<{{{><}}}> OR `relacion` LIKE '%susana%' OR `comentarios` LIKE '%susana%' OR `notas` LIKE '%susana%'<{{{><}}}> OR `proffile` LIKE '%susana%' OR `basePrincipal` LIKE '%susana%' OR `baseSeg` LIKE '%susana%'<{{{><}}}> OR CAST(`temFrom` AS CHAR) LIKE '%susana%' OR CAST(`temTo` AS CHAR) LIKE '%susana%'<{{{><}}}> OR `autoInvoice` LIKE '%susana%' OR `imagen_name` LIKE '%susana%' OR `active` LIKE '%susana%'<{{{><}}}> OR `carrier` LIKE '%susana%' OR `groups` LIKE '%susana%' OR `status` LIKE '%susana%'<{{{><}}}> OR `tipo` LIKE '%susana%' OR `lang` LIKE '%susana%' OR `flySolo` LIKE '%susana%' OR `flyPax` LIKE '%susana%'<{{{><}}}> OR `pais` LIKE '%susana%'
Servers\aerodynamics\admin_aerodynamics|personas\RecentFilters\3<|||>1<|||>`idPersona` LIKE '%3252%' OR `idPrivateRadar` LIKE '%3252%' OR `idUsuario` LIKE '%3252%'<{{{><}}}> OR `idtipo` LIKE '%3252%' OR `idperfil` LIKE '%3252%' OR `idpuesto` LIKE '%3252%'<{{{><}}}> OR `titulo` LIKE '%3252%' OR `nombre` LIKE '%3252%' OR `segundoNombre` LIKE '%3252%'<{{{><}}}> OR `apellido` LIKE '%3252%' OR `suffix` LIKE '%3252%' OR `codigo` LIKE '%3252%' OR `nacionalidad` LIKE '%3252%'<{{{><}}}> OR `email1` LIKE '%3252%' OR `email2` LIKE '%3252%' OR `telefono` LIKE '%3252%' OR `tipoTelefono` LIKE '%3252%'<{{{><}}}> OR `telefono2` LIKE '%3252%' OR CAST(`nacimiento` AS CHAR) LIKE '%3252%' OR `identidad` LIKE '%3252%'<{{{><}}}> OR `licencia` LIKE '%3252%' OR `codigoCliente` LIKE '%3252%' OR `instructorvuelo` LIKE '%3252%'<{{{><}}}> OR `instructorMCC` LIKE '%3252%' OR `instructorSuelo` LIKE '%3252%' OR `examinador` LIKE '%3252%'<{{{><}}}> OR `AOC` LIKE '%3252%' OR `direccion` LIKE '%3252%' OR `direccion2` LIKE '%3252%'<{{{><}}}> OR `codigoPostal` LIKE '%3252%' OR `provincia` LIKE '%3252%' OR `poblacion` LIKE '%3252%'<{{{><}}}> OR `nombreEm` LIKE '%3252%' OR `apellidoEm` LIKE '%3252%' OR `telefonoEm` LIKE '%3252%'<{{{><}}}> OR `emailEm` LIKE '%3252%' OR `relacion` LIKE '%3252%' OR `comentarios` LIKE '%3252%'<{{{><}}}> OR `notas` LIKE '%3252%' OR `proffile` LIKE '%3252%' OR `basePrincipal` LIKE '%3252%'<{{{><}}}> OR `baseSeg` LIKE '%3252%' OR CAST(`temFrom` AS CHAR) LIKE '%3252%' OR CAST(`temTo` AS CHAR) LIKE '%3252%'<{{{><}}}> OR `autoInvoice` LIKE '%3252%' OR `imagen_name` LIKE '%3252%' OR `active` LIKE '%3252%'<{{{><}}}> OR `carrier` LIKE '%3252%' OR `groups` LIKE '%3252%' OR `status` LIKE '%3252%' OR `tipo` LIKE '%3252%'<{{{><}}}> OR `lang` LIKE '%3252%' OR `flySolo` LIKE '%3252%' OR `flyPax` LIKE '%3252%' OR `pais` LIKE '%3252%'
Servers\aerodynamics\admin_aerodynamics|personas\RecentFilters\4<|||>1<|||>`idPersona` LIKE '%fernando%' OR `idPrivateRadar` LIKE '%fernando%' OR `idUsuario` LIKE '%fernando%'<{{{><}}}> OR `idtipo` LIKE '%fernando%' OR `idperfil` LIKE '%fernando%' OR `idpuesto` LIKE '%fernando%'<{{{><}}}> OR `titulo` LIKE '%fernando%' OR `nombre` LIKE '%fernando%' OR `segundoNombre` LIKE '%fernando%'<{{{><}}}> OR `apellido` LIKE '%fernando%' OR `suffix` LIKE '%fernando%' OR `codigo` LIKE '%fernando%'<{{{><}}}> OR `nacionalidad` LIKE '%fernando%' OR `email1` LIKE '%fernando%' OR `email2` LIKE '%fernando%'<{{{><}}}> OR `telefono` LIKE '%fernando%' OR `tipoTelefono` LIKE '%fernando%' OR `telefono2` LIKE '%fernando%'<{{{><}}}> OR CAST(`nacimiento` AS CHAR) LIKE '%fernando%' OR `identidad` LIKE '%fernando%' OR `licencia` LIKE '%fernando%'<{{{><}}}> OR `codigoCliente` LIKE '%fernando%' OR `instructorvuelo` LIKE '%fernando%' OR `instructorMCC` LIKE '%fernando%'<{{{><}}}> OR `instructorSuelo` LIKE '%fernando%' OR `examinador` LIKE '%fernando%' OR `AOC` LIKE '%fernando%'<{{{><}}}> OR `direccion` LIKE '%fernando%' OR `direccion2` LIKE '%fernando%' OR `codigoPostal` LIKE '%fernando%'<{{{><}}}> OR `provincia` LIKE '%fernando%' OR `poblacion` LIKE '%fernando%' OR `nombreEm` LIKE '%fernando%'<{{{><}}}> OR `apellidoEm` LIKE '%fernando%' OR `telefonoEm` LIKE '%fernando%' OR `emailEm` LIKE '%fernando%'<{{{><}}}> OR `relacion` LIKE '%fernando%' OR `comentarios` LIKE '%fernando%' OR `notas` LIKE '%fernando%'<{{{><}}}> OR `proffile` LIKE '%fernando%' OR `basePrincipal` LIKE '%fernando%' OR `baseSeg` LIKE '%fernando%'<{{{><}}}> OR CAST(`temFrom` AS CHAR) LIKE '%fernando%' OR CAST(`temTo` AS CHAR) LIKE '%fernando%'<{{{><}}}> OR `autoInvoice` LIKE '%fernando%' OR `imagen_name` LIKE '%fernando%' OR `active` LIKE '%fernando%'<{{{><}}}> OR `carrier` LIKE '%fernando%' OR `groups` LIKE '%fernando%' OR `status` LIKE '%fernando%'<{{{><}}}> OR `tipo` LIKE '%fernando%' OR `lang` LIKE '%fernando%' OR `flySolo` LIKE '%fernando%'<{{{><}}}> OR `flyPax` LIKE '%fernando%' OR `pais` LIKE '%fernando%'
Servers\aerodynamics\admin_aerodynamics|personas\RecentFilters\5<|||>1<|||>`idPersona` LIKE '%1106%' OR `idPrivateRadar` LIKE '%1106%' OR `idUsuario` LIKE '%1106%' OR `idtipo` LIKE '%1106%' OR `idperfil` LIKE '%1106%' OR `idpuesto` LIKE '%1106%' OR `titulo` LIKE '%1106%' OR `nombre` LIKE '%1106%'<{{{><}}}> OR `segundoNombre` LIKE '%1106%' OR `apellido` LIKE '%1106%' OR `suffix` LIKE '%1106%' OR `codigo` LIKE '%1106%' OR `nacionalidad` LIKE '%1106%' OR `email1` LIKE '%1106%' OR `email2` LIKE '%1106%' OR `telefono` LIKE '%1106%'<{{{><}}}> OR `tipoTelefono` LIKE '%1106%' OR `telefono2` LIKE '%1106%' OR CAST(`nacimiento` AS CHAR) LIKE '%1106%' OR `identidad` LIKE '%1106%' OR `licencia` LIKE '%1106%' OR `codigoCliente` LIKE '%1106%' OR `instructorvuelo` LIKE '%1106%'<{{{><}}}> OR `instructorMCC` LIKE '%1106%' OR `instructorSuelo` LIKE '%1106%' OR `examinador` LIKE '%1106%' OR `AOC` LIKE '%1106%' OR `direccion` LIKE '%1106%' OR `direccion2` LIKE '%1106%' OR `codigoPostal` LIKE '%1106%'<{{{><}}}> OR `provincia` LIKE '%1106%' OR `poblacion` LIKE '%1106%' OR `nombreEm` LIKE '%1106%' OR `apellidoEm` LIKE '%1106%' OR `telefonoEm` LIKE '%1106%' OR `emailEm` LIKE '%1106%' OR `relacion` LIKE '%1106%'<{{{><}}}> OR `comentarios` LIKE '%1106%' OR `notas` LIKE '%1106%' OR `proffile` LIKE '%1106%' OR `basePrincipal` LIKE '%1106%' OR `baseSeg` LIKE '%1106%' OR CAST(`temFrom` AS CHAR) LIKE '%1106%' OR CAST(`temTo` AS CHAR) LIKE '%1106%'<{{{><}}}> OR `autoInvoice` LIKE '%1106%' OR `imagen_name` LIKE '%1106%' OR `active` LIKE '%1106%' OR `carrier` LIKE '%1106%' OR `groups` LIKE '%1106%' OR `status` LIKE '%1106%' OR `tipo` LIKE '%1106%' OR `lang` LIKE '%1106%'<{{{><}}}> OR `flySolo` LIKE '%1106%' OR `flyPax` LIKE '%1106%' OR `pais` LIKE '%1106%'
Servers\aerodynamics\admin_aerodynamics|personas\RecentFilters\6<|||>1<|||>`idPersona` LIKE '%F. Fernandez Rivas%' OR `idPrivateRadar` LIKE '%F. Fernandez Rivas%' OR `idtipo` LIKE '%F. Fernandez Rivas%'<{{{><}}}> OR `idperfil` LIKE '%F. Fernandez Rivas%' OR `idpuesto` LIKE '%F. Fernandez Rivas%' OR `titulo` LIKE '%F. Fernandez Rivas%'<{{{><}}}> OR `nombre` LIKE '%F. Fernandez Rivas%' OR `segundoNombre` LIKE '%F. Fernandez Rivas%' OR `apellido` LIKE '%F. Fernandez Rivas%'<{{{><}}}> OR `suffix` LIKE '%F. Fernandez Rivas%' OR `codigo` LIKE '%F. Fernandez Rivas%' OR `nacionalidad` LIKE '%F. Fernandez Rivas%'<{{{><}}}> OR `email1` LIKE '%F. Fernandez Rivas%' OR `email2` LIKE '%F. Fernandez Rivas%' OR `telefono` LIKE '%F. Fernandez Rivas%'<{{{><}}}> OR `tipoTelefono` LIKE '%F. Fernandez Rivas%' OR `telefono2` LIKE '%F. Fernandez Rivas%' OR CAST(`nacimiento` AS CHAR) LIKE '%F. Fernandez Rivas%'<{{{><}}}> OR `identidad` LIKE '%F. Fernandez Rivas%' OR `licencia` LIKE '%F. Fernandez Rivas%' OR `codigoCliente` LIKE '%F. Fernandez Rivas%'<{{{><}}}> OR `instructorvuelo` LIKE '%F. Fernandez Rivas%' OR `instructorMCC` LIKE '%F. Fernandez Rivas%' OR `instructorSuelo` LIKE '%F. Fernandez Rivas%'<{{{><}}}> OR `examinador` LIKE '%F. Fernandez Rivas%' OR `AOC` LIKE '%F. Fernandez Rivas%' OR `direccion` LIKE '%F. Fernandez Rivas%'<{{{><}}}> OR `direccion2` LIKE '%F. Fernandez Rivas%' OR `codigoPostal` LIKE '%F. Fernandez Rivas%' OR `provincia` LIKE '%F. Fernandez Rivas%'<{{{><}}}> OR `poblacion` LIKE '%F. Fernandez Rivas%' OR `nombreEm` LIKE '%F. Fernandez Rivas%' OR `apellidoEm` LIKE '%F. Fernandez Rivas%'<{{{><}}}> OR `telefonoEm` LIKE '%F. Fernandez Rivas%' OR `emailEm` LIKE '%F. Fernandez Rivas%' OR `relacion` LIKE '%F. Fernandez Rivas%'<{{{><}}}> OR `comentarios` LIKE '%F. Fernandez Rivas%' OR `notas` LIKE '%F. Fernandez Rivas%' OR `proffile` LIKE '%F. Fernandez Rivas%'<{{{><}}}> OR `basePrincipal` LIKE '%F. Fernandez Rivas%' OR `baseSeg` LIKE '%F. Fernandez Rivas%' OR CAST(`temFrom` AS CHAR) LIKE '%F. Fernandez Rivas%'<{{{><}}}> OR CAST(`temTo` AS CHAR) LIKE '%F. Fernandez Rivas%' OR `autoInvoice` LIKE '%F. Fernandez Rivas%' OR `imagen_name` LIKE '%F. Fernandez Rivas%'<{{{><}}}> OR `active` LIKE '%F. Fernandez Rivas%' OR `carrier` LIKE '%F. Fernandez Rivas%' OR `groups` LIKE '%F. Fernandez Rivas%' OR `status` LIKE '%F. Fernandez Rivas%'<{{{><}}}> OR `tipo` LIKE '%F. Fernandez Rivas%' OR `lang` LIKE '%F. Fernandez Rivas%' OR `flySolo` LIKE '%F. Fernandez Rivas%' OR `flyPax` LIKE '%F. Fernandez Rivas%'<{{{><}}}> OR `pais` LIKE '%F. Fernandez Rivas%'
Servers\aerodynamics\admin_aerodynamics|personas_cobros\Sort<|||>1<|||>1_usuario|0_totalCobro|0_fecha|0_titulo|
Servers\aerodynamics\admin_aerodynamics|personas_curso\Sort<|||>1<|||>0_idCurso|
Servers\aerodynamics\admin_aerodynamics|personas_tipo\Sort<|||>1<|||>0_tipo|
Servers\aerodynamics\admin_aerodynamics|personas_vuelos_automatizacion\Sort<|||>1<|||>1_fecha|0_id|
Servers\aerodynamics\admin_aerodynamics|pilotos\RecentFilters\1<|||>1<|||>`idPiloto` LIKE '%20498%' OR `titulo` LIKE '%20498%' OR `nombre` LIKE '%20498%' OR `segundoNombre` LIKE '%20498%' OR `apellido` LIKE '%20498%'<{{{><}}}> OR `suffix` LIKE '%20498%' OR `codigo` LIKE '%20498%' OR `nacionalidad` LIKE '%20498%' OR `emailuno` LIKE '%20498%' OR `emailDos` LIKE '%20498%'<{{{><}}}> OR `telefono` LIKE '%20498%' OR `tipoTelefono` LIKE '%20498%' OR `telefonoDos` LIKE '%20498%' OR CAST(`nacimiento` AS CHAR) LIKE '%20498%'<{{{><}}}> OR `numeroId` LIKE '%20498%' OR `licencia` LIKE '%20498%' OR `codigoCliente` LIKE '%20498%' OR `instructorvuelo` LIKE '%20498%'<{{{><}}}> OR `instructorMCC` LIKE '%20498%' OR `instructorSuelo` LIKE '%20498%' OR `examinador` LIKE '%20498%' OR `AOC` LIKE '%20498%'<{{{><}}}> OR `direccion` LIKE '%20498%' OR `direccionDos` LIKE '%20498%' OR `codigoPostal` LIKE '%20498%' OR `provincia` LIKE '%20498%'<{{{><}}}> OR `poblacion` LIKE '%20498%' OR `nombreEm` LIKE '%20498%' OR `apellidoEm` LIKE '%20498%' OR `telefonoEm` LIKE '%20498%'<{{{><}}}> OR `emailEm` LIKE '%20498%' OR `relacion` LIKE '%20498%' OR `comentarios` LIKE '%20498%' OR `notas` LIKE '%20498%' OR `proffile` LIKE '%20498%'<{{{><}}}> OR `basePrincipal` LIKE '%20498%' OR `baseSeg` LIKE '%20498%' OR CAST(`temFrom` AS CHAR) LIKE '%20498%' OR CAST(`temTo` AS CHAR) LIKE '%20498%'<{{{><}}}> OR `autoInvoice` LIKE '%20498%' OR `imagen_name` LIKE '%20498%' OR `active` LIKE '%20498%' OR `carrier` LIKE '%20498%' OR `groups` LIKE '%20498%'<{{{><}}}> OR `status` LIKE '%20498%' OR `tipo` LIKE '%20498%' OR `lang` LIKE '%20498%' OR `flySolo` LIKE '%20498%' OR `flyPax` LIKE '%20498%'
Servers\aerodynamics\admin_aerodynamics|pilotos\RecentFilters\2<|||>1<|||>`idPiloto` LIKE '%6724%' OR `titulo` LIKE '%6724%' OR `nombre` LIKE '%6724%' OR `segundoNombre` LIKE '%6724%' OR `apellido` LIKE '%6724%'<{{{><}}}> OR `suffix` LIKE '%6724%' OR `codigo` LIKE '%6724%' OR `nacionalidad` LIKE '%6724%' OR `emailuno` LIKE '%6724%' OR `emailDos` LIKE '%6724%'<{{{><}}}> OR `telefono` LIKE '%6724%' OR `tipoTelefono` LIKE '%6724%' OR `telefonoDos` LIKE '%6724%' OR CAST(`nacimiento` AS CHAR) LIKE '%6724%'<{{{><}}}> OR `numeroId` LIKE '%6724%' OR `licencia` LIKE '%6724%' OR `codigoCliente` LIKE '%6724%' OR `instructorvuelo` LIKE '%6724%'<{{{><}}}> OR `instructorMCC` LIKE '%6724%' OR `instructorSuelo` LIKE '%6724%' OR `examinador` LIKE '%6724%' OR `AOC` LIKE '%6724%'<{{{><}}}> OR `direccion` LIKE '%6724%' OR `direccionDos` LIKE '%6724%' OR `codigoPostal` LIKE '%6724%' OR `provincia` LIKE '%6724%'<{{{><}}}> OR `poblacion` LIKE '%6724%' OR `nombreEm` LIKE '%6724%' OR `apellidoEm` LIKE '%6724%' OR `telefonoEm` LIKE '%6724%' OR `emailEm` LIKE '%6724%'<{{{><}}}> OR `relacion` LIKE '%6724%' OR `comentarios` LIKE '%6724%' OR `notas` LIKE '%6724%' OR `proffile` LIKE '%6724%' OR `basePrincipal` LIKE '%6724%'<{{{><}}}> OR `baseSeg` LIKE '%6724%' OR CAST(`temFrom` AS CHAR) LIKE '%6724%' OR CAST(`temTo` AS CHAR) LIKE '%6724%' OR `autoInvoice` LIKE '%6724%'<{{{><}}}> OR `imagen_name` LIKE '%6724%' OR `active` LIKE '%6724%' OR `carrier` LIKE '%6724%' OR `groups` LIKE '%6724%' OR `status` LIKE '%6724%'<{{{><}}}> OR `tipo` LIKE '%6724%' OR `lang` LIKE '%6724%' OR `flySolo` LIKE '%6724%' OR `flyPax` LIKE '%6724%'
Servers\aerodynamics\admin_aerodynamics|reserva_vuelos\Sort<|||>1<|||>1_idReserva|
Servers\aerodynamics\admin_aerodynamics|reserva_vuelos\RecentFilters\1<|||>1<|||>`idReserva` LIKE '%2020-11-04 15:20%' OR CAST(`diaReserva` AS CHAR) LIKE '%2020-11-04 15:20%' OR CAST(`horaInicio` AS CHAR) LIKE '%2020-11-04 15:20%'<{{{><}}}> OR CAST(`horaFin` AS CHAR) LIKE '%2020-11-04 15:20%' OR `idPiloto` LIKE '%2020-11-04 15:20%' OR `idCopiloto` LIKE '%2020-11-04 15:20%'<{{{><}}}> OR `idInstructor` LIKE '%2020-11-04 15:20%' OR `idAvion` LIKE '%2020-11-04 15:20%' OR `idLeccion` LIKE '%2020-11-04 15:20%'<{{{><}}}> OR `tipoVuelo` LIKE '%2020-11-04 15:20%' OR `tipoVista` LIKE '%2020-11-04 15:20%' OR `tipoSalida` LIKE '%2020-11-04 15:20%'<{{{><}}}> OR `tipoPiloto` LIKE '%2020-11-04 15:20%' OR `tipoCopiloto` LIKE '%2020-11-04 15:20%' OR `tipoInstructor` LIKE '%2020-11-04 15:20%'<{{{><}}}> OR `preBriefing` LIKE '%2020-11-04 15:20%' OR `postBriefing` LIKE '%2020-11-04 15:20%' OR `observaciones` LIKE '%2020-11-04 15:20%'<{{{><}}}> OR `repetir` LIKE '%2020-11-04 15:20%' OR `confirmado` LIKE '%2020-11-04 15:20%' OR CAST(`despegue` AS CHAR) LIKE '%2020-11-04 15:20%'<{{{><}}}> OR CAST(`aterrizaje` AS CHAR) LIKE '%2020-11-04 15:20%' OR `idCancelacion` LIKE '%2020-11-04 15:20%' OR `simulador` LIKE '%2020-11-04 15:20%'<{{{><}}}> OR `superado` LIKE '%2020-11-04 15:20%'
Servers\aerodynamics\admin_aerodynamics|vista_reservas_historico_posicionamiento\Sort<|||>1<|||>1_LESSONS|
Servers\aerodynamics\admin_aerodynamics|vista_reservas_lecciones\Sort<|||>1<|||>1_idReserva|
Servers\aerodynamics\QueryHistory\56<|||>1<|||>2020-11-17 09:52:00|admin_aerodynamics|3250|SELECT <{{{><}}}>id as LESSONS,<{{{><}}}>DATE_FORMAT(ahp.Fecha, "%d-%m-%Y") as "DATE",<{{{><}}}>ahp.Matricula as AIRCRAFT,<{{{><}}}>TIMEDIFF(Apagado,Arranque) as TOTAL,<{{{><}}}>TIMEDIFF(Apagado,Arranque) as "BLOCK",<{{{><}}}>TIMEDIFF(Aterrizaje,Despegue) as AIRBORNE,<{{{><}}}>"t" as HOBBS,<{{{><}}}>"t" as TACH ,<{{{><}}}>Despegue,<{{{><}}}>Aterrizaje,<{{{><}}}>Arranque,<{{{><}}}>Apagado<{{{><}}}>FROM aviones_historico_posicionamiento ahp<{{{><}}}>LEFT JOIN (SELECT Matricula,Fecha AS Despegue FROM aviones_historico_posicionamiento<{{{><}}}> WHERE Matricula="G-OOFT" and <{{{><}}}> Fecha BETWEEN "2020-11-04 14:35" AND "2020-11-05 16:13" and<{{{><}}}> Alt>=40 AND Veloc>=90 ORDER BY Fecha ASC LIMIT 1) despegue ON ahp.Matricula=despegue.matricula<{{{><}}}>LEFT JOIN ( SELECT Matricula,Fecha AS Aterrizaje FROM aviones_historico_posicionamiento<{{{><}}}> WHERE Matricula="G-OOFT" and <{{{><}}}> (Fecha BETWEEN "2020-11-04 14:35" AND "2020-11-05 16:13") and<{{{><}}}> (Alt BETWEEN 35 AND 40) AND (Veloc BETWEEN 80 AND 100) ORDER BY Fecha DESC LIMIT 1) aterrizaje ON ahp.Matricula=aterrizaje.matricula<{{{><}}}>LEFT JOIN (SELECT Matricula,Fecha as Arranque FROM aviones_historico_posicionamiento<{{{><}}}> WHERE Matricula="G-OOFT" and <{{{><}}}> (Fecha BETWEEN "2020-11-04 14:35" AND "2020-11-05 16:13") AND Ignic=1 ORDER BY Fecha ASC LIMIT 1) arranque ON ahp.Matricula=arranque.matricula<{{{><}}}>LEFT JOIN ( SELECT Matricula,Fecha AS Apagado FROM aviones_historico_posicionamiento<{{{><}}}> WHERE Matricula="G-OOFT" and <{{{><}}}> (Fecha BETWEEN "2020-11-04 14:35" AND "2020-11-05 16:13") <{{{><}}}> AND Ignic=1 ORDER BY Fecha DESC LIMIT 1) parada ON ahp.Matricula=parada.matricula<{{{><}}}>WHERE <{{{><}}}>ahp.Matricula="G-OOFT" AND <{{{><}}}>ahp.Fecha BETWEEN "2020-11-04 14:35" AND "2020-11-05 16:13" GROUP BY ahp.<{{{><}}}>Matricula;
Servers\aerodynamics\QueryHistory\76<|||>1<|||>2020-11-17 09:52:54|admin_aerodynamics|3343|SELECT <{{{><}}}>id as LESSONS,<{{{><}}}>DATE_FORMAT(ahp.Fecha, "%d-%m-%Y") as "DATE",<{{{><}}}>ahp.Matricula as AIRCRAFT,<{{{><}}}>TIMEDIFF(Apagado,Arranque) as TOTAL,<{{{><}}}>TIMEDIFF(Apagado,Arranque) as "BLOCK",<{{{><}}}>TIMEDIFF(Aterrizaje,Despegue) as AIRBORNE,<{{{><}}}>"" as HOBBS,<{{{><}}}>"" as TACH ,<{{{><}}}>Despegue,<{{{><}}}>Aterrizaje,<{{{><}}}>Arranque,<{{{><}}}>Apagado<{{{><}}}>FROM aviones_historico_posicionamiento ahp<{{{><}}}>LEFT JOIN (SELECT Matricula,Fecha AS Despegue FROM aviones_historico_posicionamiento<{{{><}}}> WHERE Matricula="G-OOFT" and <{{{><}}}> Fecha BETWEEN "2020-11-04 14:35" AND "2020-11-05 16:13" and<{{{><}}}> Alt>=40 AND Veloc>=90 ORDER BY Fecha ASC LIMIT 1) despegue ON ahp.Matricula=despegue.matricula<{{{><}}}>LEFT JOIN ( SELECT Matricula,Fecha AS Aterrizaje FROM aviones_historico_posicionamiento<{{{><}}}> WHERE Matricula="G-OOFT" and <{{{><}}}> (Fecha BETWEEN "2020-11-04 14:35" AND "2020-11-05 16:13") and<{{{><}}}> (Alt BETWEEN 35 AND 40) AND (Veloc BETWEEN 80 AND 100) ORDER BY Fecha DESC LIMIT 1) aterrizaje ON ahp.Matricula=aterrizaje.matricula<{{{><}}}>LEFT JOIN (SELECT Matricula,Fecha as Arranque FROM aviones_historico_posicionamiento<{{{><}}}> WHERE Matricula="G-OOFT" and <{{{><}}}> (Fecha BETWEEN "2020-11-04 14:35" AND "2020-11-05 16:13") AND Ignic=1 ORDER BY Fecha ASC LIMIT 1) arranque ON ahp.Matricula=arranque.matricula<{{{><}}}>LEFT JOIN ( SELECT Matricula,Fecha AS Apagado FROM aviones_historico_posicionamiento<{{{><}}}> WHERE Matricula="G-OOFT" and <{{{><}}}> (Fecha BETWEEN "2020-11-04 14:35" AND "2020-11-05 16:13") <{{{><}}}> AND Ignic=1 ORDER BY Fecha DESC LIMIT 1) parada ON ahp.Matricula=parada.matricula<{{{><}}}>WHERE <{{{><}}}>ahp.Matricula="G-OOFT" AND <{{{><}}}>ahp.Fecha BETWEEN "2020-11-04 14:35" AND "2020-11-05 16:13" GROUP BY ahp.<{{{><}}}>Matricula;
Servers\aerodynamics\QueryHistory\77<|||>1<|||>2020-11-17 10:03:29|admin_aerodynamics|62|SELECT * FROM reserva_vuelos<{{{><}}}>
Servers\aerodynamics\QueryHistory\78<|||>1<|||>2020-11-17 10:10:54|admin_aerodynamics|15|SELECT idReserva,CONCAT(diaReserva," ",horaInicio) AS inicioReserva,CONCAT(diaReserva," ",horaFin) AS finReserva,idPiloto,tipoPiloto,idInstructor,tipoInstructor,idAvion,idLeccion,tipoVuelo,tipoVista,tipoSalida,preBriefing,postBriefing FROM reserva_vuelos<{{{><}}}>
Servers\aerodynamics\QueryHistory\80<|||>1<|||>2020-11-17 11:00:39|admin_aerodynamics|47|SELECT <{{{><}}}>idReserva,<{{{><}}}>CONCAT(diaReserva," ",horaInicio) AS inicioReserva,<{{{><}}}>CONCAT(diaReserva," ",horaFin) AS finReserva,<{{{><}}}>idPiloto,<{{{><}}}>tipoPiloto,<{{{><}}}>idInstructor,<{{{><}}}>tipoInstructor,<{{{><}}}>idAvion,<{{{><}}}>idLeccion,<{{{><}}}>tipoVuelo,<{{{><}}}>tipoVista,<{{{><}}}>tipoSalida,<{{{><}}}>preBriefing,<{{{><}}}>postBriefing,<{{{><}}}>misiones.* <{{{><}}}>FROM reserva_vuelos<{{{><}}}>LEFT JOIN misiones ON misiones.idMision=reserva_vuelos.idLeccion<{{{><}}}>
Servers\aerodynamics\QueryHistory\79<|||>1<|||>2020-11-17 11:01:10|admin_aerodynamics|47|SELECT <{{{><}}}>idReserva,<{{{><}}}>diaReserva,<{{{><}}}>CONCAT(diaReserva," ",horaInicio) AS inicioReserva,<{{{><}}}>CONCAT(diaReserva," ",horaFin) AS finReserva,<{{{><}}}>idPiloto,<{{{><}}}>tipoPiloto,<{{{><}}}>idInstructor,<{{{><}}}>tipoInstructor,<{{{><}}}>idAvion,<{{{><}}}>idLeccion,<{{{><}}}>tipoVuelo,<{{{><}}}>tipoVista,<{{{><}}}>tipoSalida,<{{{><}}}>preBriefing,<{{{><}}}>postBriefing,<{{{><}}}>misiones.* <{{{><}}}>FROM reserva_vuelos<{{{><}}}>LEFT JOIN misiones ON misiones.idMision=reserva_vuelos.idLeccion<{{{><}}}>
Servers\aerodynamics\QueryHistory\81<|||>1<|||>2020-11-17 11:04:38|admin_aerodynamics|62|CREATE VIEW vista_reservas_lecciones AS<{{{><}}}>(SELECT <{{{><}}}>idReserva,<{{{><}}}>diaReserva,<{{{><}}}>CONCAT(diaReserva," ",horaInicio) AS inicioReserva,<{{{><}}}>CONCAT(diaReserva," ",horaFin) AS finReserva,<{{{><}}}>idPiloto,<{{{><}}}>tipoPiloto,<{{{><}}}>idInstructor,<{{{><}}}>tipoInstructor,<{{{><}}}>reserva_vuelos.idAvion AS idAvion,<{{{><}}}>aviones.registracion AS matricula,<{{{><}}}>idLeccion,<{{{><}}}>tipoVuelo,<{{{><}}}>tipoVista,<{{{><}}}>tipoSalida,<{{{><}}}>preBriefing,<{{{><}}}>postBriefing,<{{{><}}}>misiones.* <{{{><}}}>FROM reserva_vuelos<{{{><}}}>LEFT JOIN misiones ON misiones.idMision=reserva_vuelos.idLeccion<{{{><}}}>LEFT JOIN aviones ON aviones.idAvion=reserva_vuelos.idAvion)<{{{><}}}>
Servers\aerodynamics\QueryHistory\82<|||>1<|||>2020-11-17 11:44:00|admin_aerodynamics|63219|SELECT <{{{><}}}>idReserva as LESSONS,<{{{><}}}>DATE_FORMAT(vrl.diaReserva, "%d-%m-%Y") as "DATE",<{{{><}}}>matricula as AIRCRAFT,<{{{><}}}>(SELECT Fecha FROM aviones_historico_posicionamiento WHERE Matricula=vrl.matricula and  Fecha BETWEEN vrl.inicioReserva AND vrl.finReserva and  Alt>=40 AND Veloc>=90 ORDER BY Fecha ASC LIMIT 1) as Despegue,<{{{><}}}>(SELECT Fecha FROM aviones_historico_posicionamiento WHERE Matricula=vrl.matricula and (Fecha BETWEEN vrl.inicioReserva AND vrl.finReserva) and (Alt BETWEEN 35 AND 40) AND (Veloc BETWEEN 80 AND 100) ORDER BY Fecha DESC LIMIT 1) as Aterrizaje,<{{{><}}}>(SELECT Fecha FROM aviones_historico_posicionamiento WHERE Matricula=vrl.matricula and (Fecha BETWEEN vrl.inicioReserva AND vrl.finReserva) AND Ignic=1 ORDER BY Fecha ASC LIMIT 1) as Arranque,<{{{><}}}>(SELECT Fecha FROM aviones_historico_posicionamiento WHERE Matricula=vrl.matricula and  (Fecha BETWEEN vrl.inicioReserva AND vrl.finReserva)  AND Ignic=1 ORDER BY Fecha DESC LIMIT 1) as Apagado<{{{><}}}>FROM vista_reservas_lecciones vrl<{{{><}}}>GROUP BY idReserva;
Servers\aerodynamics\QueryHistory\83<|||>1<|||>2020-11-17 13:36:39|admin_aerodynamics|63406|SELECT <{{{><}}}>idReserva as LESSONS,<{{{><}}}>DATE_FORMAT(vrl.diaReserva, "%d-%m-%Y") as "DATE",<{{{><}}}>matricula as AIRCRAFT,<{{{><}}}>(SELECT Fecha FROM aviones_historico_posicionamiento WHERE Matricula=vrl.matricula and  Fecha BETWEEN vrl.inicioReserva AND vrl.finReserva and  Alt>=40 AND Veloc>=90 ORDER BY Fecha ASC LIMIT 1) as Despegue,<{{{><}}}>(SELECT Fecha FROM aviones_historico_posicionamiento WHERE Matricula=vrl.matricula and (Fecha BETWEEN vrl.inicioReserva AND vrl.finReserva) and (Alt BETWEEN 35 AND 40) AND (Veloc BETWEEN 80 AND 100) ORDER BY Fecha DESC LIMIT 1) as Aterrizaje,<{{{><}}}>(SELECT Fecha FROM aviones_historico_posicionamiento WHERE Matricula=vrl.matricula and (Fecha BETWEEN vrl.inicioReserva AND vrl.finReserva) AND Ignic=1 ORDER BY Fecha ASC LIMIT 1) as Arranque,<{{{><}}}>(SELECT Fecha FROM aviones_historico_posicionamiento WHERE Matricula=vrl.matricula and  (Fecha BETWEEN vrl.inicioReserva AND vrl.finReserva)  AND Ignic=1 ORDER BY Fecha DESC LIMIT 1) as Apagado<{{{><}}}>FROM vista_reservas_lecciones vrl<{{{><}}}>WHERE matricula IS NOT null<{{{><}}}>GROUP BY idReserva;
Servers\aerodynamics\QueryHistory\84<|||>1<|||>2020-11-17 13:39:36|admin_aerodynamics|31|CREATE VIEW vista_reservas_historico_posicionamiento AS<{{{><}}}>(SELECT <{{{><}}}>idReserva as LESSONS,<{{{><}}}>DATE_FORMAT(vrl.diaReserva, "%d-%m-%Y") as "DATE",<{{{><}}}>matricula as AIRCRAFT,<{{{><}}}>(SELECT Fecha FROM aviones_historico_posicionamiento WHERE Matricula=vrl.matricula and  Fecha BETWEEN vrl.inicioReserva AND vrl.finReserva and  Alt>=40 AND Veloc>=90 ORDER BY Fecha ASC LIMIT 1) as Despegue,<{{{><}}}>(SELECT Fecha FROM aviones_historico_posicionamiento WHERE Matricula=vrl.matricula and (Fecha BETWEEN vrl.inicioReserva AND vrl.finReserva) and (Alt BETWEEN 35 AND 40) AND (Veloc BETWEEN 80 AND 100) ORDER BY Fecha DESC LIMIT 1) as Aterrizaje,<{{{><}}}>(SELECT Fecha FROM aviones_historico_posicionamiento WHERE Matricula=vrl.matricula and (Fecha BETWEEN vrl.inicioReserva AND vrl.finReserva) AND Ignic=1 ORDER BY Fecha ASC LIMIT 1) as Arranque,<{{{><}}}>(SELECT Fecha FROM aviones_historico_posicionamiento WHERE Matricula=vrl.matricula and  (Fecha BETWEEN vrl.inicioReserva AND vrl.finReserva)  AND Ignic=1 ORDER BY Fecha DESC LIMIT 1) as Apagado<{{{><}}}>FROM vista_reservas_lecciones vrl<{{{><}}}>WHERE matricula IS NOT null<{{{><}}}>GROUP BY idReserva)
Servers\aerodynamics\QueryHistory\85<|||>1<|||>2020-11-17 13:46:08|admin_aerodynamics|65937|SELECT * FROM vista_reservas_historico_posicionamiento WHERE DATE="04-11-2020"<{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}>
Servers\aerodynamics\QueryHistory\86<|||>1<|||>2020-11-18 13:03:14|admin_aerodynamics|31|SELECT <{{{><}}}>		id,<{{{><}}}>      pva.idreserva as Reserva,<{{{><}}}>		misiones.descripcion as LESSONS,<{{{><}}}>		DATE_FORMAT(pva.fecha, "%d-%m-%Y") as "DATE",<{{{><}}}>		pva.matricula as AIRCRAFT,<{{{><}}}>		pva.block as TOTAL,<{{{><}}}>		pva.block as "BLOCK",<{{{><}}}>		pva.airborne as AIRBORNE,<{{{><}}}>		concat(piloto.nombre,'/',instructor.nombre) as CREW ,<{{{><}}}>		pva.despegue as Despegue,<{{{><}}}>		pva.aterrizaje as Aterrizaje,<{{{><}}}>		pva.arranque as Arranque,<{{{><}}}>		pva.parada as Parada<{{{><}}}>        FROM personas_vuelos_automatizacion pva<{{{><}}}>        LEFT JOIN reserva_vuelos rv on rv.idReserva=pva.idreserva<{{{><}}}>        LEFT JOIN personas piloto on piloto.idPersona=rv.idPiloto<{{{><}}}>        LEFT JOIN personas instructor on instructor.idPersona=rv.idInstructor<{{{><}}}>        LEFT JOIN misiones on misiones.idMision=rv.idLeccion
Servers\aerodynamics\QueryHistory\87<|||>1<|||>2020-11-18 16:09:01|admin_aerodynamics|16|SELECT <{{{><}}}>		pva.id as id,<{{{><}}}>      pva.idreserva as Reserva,<{{{><}}}>		misiones.descripcion as LESSONS,<{{{><}}}>		DATE_FORMAT(pva.fecha, "%d-%m-%Y") as "DATE",<{{{><}}}>		pva.matricula as AIRCRAFT,<{{{><}}}>		pva.block as TOTAL,<{{{><}}}>		pva.block as "BLOCK",<{{{><}}}>		pva.airborne as AIRBORNE,<{{{><}}}>		concat(piloto.nombre,"/",instructor.nombre) as CREW ,<{{{><}}}>		pva.despegue as Despegue,<{{{><}}}>		pva.aterrizaje as Aterrizaje,<{{{><}}}>		pva.arranque as Arranque,<{{{><}}}>		pva.parada as Apagado<{{{><}}}>     FROM personas_vuelos_automatizacion pva<{{{><}}}>     LEFT JOIN reserva_vuelos rv on rv.idReserva=pva.idreserva<{{{><}}}>     LEFT JOIN personas piloto on piloto.idPersona=rv.idPiloto<{{{><}}}>     LEFT JOIN personas instructor on instructor.idPersona=rv.idInstructor<{{{><}}}>     LEFT JOIN misiones on misiones.idMision=rv.idLeccion<{{{><}}}>     where pva.id=22<{{{><}}}>     ORDER BY pva.fecha DESC ,id DESC
Servers\aerodynamics\QueryHistory\90<|||>1<|||>2020-11-18 22:08:57|admin_aerodynamics|47|UPDATE reserva_vuelos SET tipoVuelo="Instruction",tipoVista="VFR",tipoSalida="Local",tipoMomento="Dayy" where idReserva=23
Servers\aerodynamics\QueryHistory\91<|||>1<|||>2020-11-18 22:09:08|admin_aerodynamics|32|UPDATE reserva_vuelos SET tipoVuelo="Instruction",tipoVista="VFR",tipoSalida="Local",tipoMomento="Day" where idReserva=23
Servers\aerodynamics\QueryHistory\89<|||>1<|||>2020-11-18 22:36:40|admin_aerodynamics|47|UPDATE personas_vuelos_automatizacion SET fecha="2020-11-04",arranque="13:36",rodaje="13:36",despegue="13:41",aterrizaje="13:46",parada="16:44",pax="0",tiempototal="04:07",block="04:07",airborne="00:00",hobbsout="0",hobbsin="0",tachout="0",tachin="0",lugarsalida="LEAX",lugarllegada="LEAX",tipopiloto="DUAL",tipoinstructor="PIC",totalaterrizajes="",aterrizajevisual="0",aterrizajeprecis="0",aterrizajenonprecis="0",aterrizajecircl="0",aterrizajegoaround="0",repostajeantesvuelo="50",repostajedespuesvuelo="20",comentarios="" where id=22
Servers\aerodynamics\QueryHistory\92<|||>1<|||>2020-11-18 22:47:08|admin_aerodynamics|31|UPDATE personas_vuelos_automatizacion SET fecha="2020-11-04",arranque="13:36",rodaje="13:36",despegue="13:41",aterrizaje="13:46",parada="16:44",pax="0",tiempototal="04:07",block="04:07",airborne="00:00",hobbsout="20000",hobbsin="0",tachout="0",tachin="0",lugarsalida="LEAX",lugarllegada="LEAX",tipopiloto="DUAL",tipoinstructor="PIC",totalaterrizajes="",aterrizajevisual="0",aterrizajeprecis="0",aterrizajenonprecis="0",aterrizajecircl="0",aterrizajegoaround="0",repostajeantesvuelo="",repostajedespuesvuelo="0",comentarios="" where id=22
Servers\aerodynamics\QueryHistory\94<|||>1<|||>2020-11-18 22:48:35|admin_aerodynamics|31|UPDATE personas_vuelos_automatizacion SET fecha="2020-11-04",arranque="13:36",rodaje="13:36",despegue="13:41",aterrizaje="13:46",parada="16:44",pax="0",tiempototal="04:07",block="04:07",airborne="00:00",hobbsout="20000",hobbsin="0",tachout="0",tachin="0",lugarsalida="LEAX",lugarllegada="LEAX",tipopiloto="DUAL",tipoinstructor="PIC",totalaterrizajes="",aterrizajevisual="0",aterrizajeprecis="0",aterrizajenonprecis="0",aterrizajecircl="0",aterrizajegoaround="0",repostajeantesvuelo="",repostajedespuesvuelo="0",comentarios="j" where id=22
Servers\aerodynamics\QueryHistory\93<|||>1<|||>2020-11-18 23:23:52|admin_aerodynamics|375|SELECT *,concat(nombre,if(segundoNombre is null," ",concat(" ",segundoNombre," ")),apellido) as nombreCompleto FROM personas
Servers\aerodynamics\QueryHistory\95<|||>1<|||>2020-11-23 08:33:13|admin_aerodynamics|64375|SELECT * FROM vista_reservas_historico_posicionamiento WHERE DATE>='4-11-2020'
Servers\aerodynamics\QueryHistory\88<|||>1<|||>2020-11-23 08:40:09|admin_aerodynamics|69312|SELECT * FROM vista_reservas_historico_posicionamiento WHERE (DATE BETWEEN '4-11-2020' AND CURDATE()) AND Apagado<=CURRENT_TIMESTAMP();
Servers\aerodynamics\QueryHistory\96<|||>1<|||>2020-11-23 08:47:42|admin_aerodynamics|63749|SELECT Distinct(idreserva) FROM personas_vuelos_automatizacion where fecha>=(SELECT MAX(fecha) as idreserva FROM personas_vuelos_automatizacion LIMIT 1);<{{{><}}}><{{{><}}}><{{{><}}}>SELECT * FROM vista_reservas_historico_posicionamiento WHERE (DATE BETWEEN '4-11-2020' AND CURDATE()) AND Apagado<=CURRENT_TIMESTAMP();
Servers\aerodynamics\QueryHistory\97<|||>1<|||>2020-11-23 08:49:58|admin_aerodynamics|63687|SELECT Distinct(idreserva) FROM personas_vuelos_automatizacion where fecha>=(SELECT MAX(fecha) as idreserva FROM personas_vuelos_automatizacion LIMIT 1);<{{{><}}}><{{{><}}}><{{{><}}}>SELECT * FROM vista_reservas_historico_posicionamiento WHERE DATE >='4-11-2020' AND Apagado<=CURRENT_TIMESTAMP() ;
Servers\aerodynamics\QueryHistory\99<|||>1<|||>2020-11-23 09:02:37|admin_aerodynamics|64672|SELECT Distinct(idreserva) FROM personas_vuelos_automatizacion where fecha>=(SELECT MAX(fecha) as idreserva FROM personas_vuelos_automatizacion LIMIT 1);<{{{><}}}><{{{><}}}><{{{><}}}>SELECT * FROM vista_reservas_historico_posicionamiento WHERE DATE >='4-11-2020' ;
Servers\aerodynamics\QueryHistory\98<|||>1<|||>2020-11-23 09:10:24|admin_aerodynamics|74188|SELECT Distinct(idreserva) FROM personas_vuelos_automatizacion where fecha>=(SELECT MAX(fecha) as idreserva FROM personas_vuelos_automatizacion LIMIT 1);<{{{><}}}><{{{><}}}><{{{><}}}>SELECT * FROM vista_reservas_historico_posicionamiento WHERE DATE >='2020-11-04' ;
Servers\aerodynamics\QueryHistory\100<|||>1<|||>2020-11-23 09:13:09|admin_aerodynamics|65296|SELECT Distinct(idreserva) FROM personas_vuelos_automatizacion where fecha>=(SELECT MAX(fecha) as idreserva FROM personas_vuelos_automatizacion LIMIT 1);<{{{><}}}><{{{><}}}><{{{><}}}>SELECT * FROM vista_reservas_historico_posicionamiento WHERE date_format(DATE,"%Y-%m-%d") >='2020-11-04' ;<{{{><}}}><{{{><}}}>select CURRENT_TIMESTAMP(); 
Servers\aerodynamics\QueryHistory\101<|||>1<|||>2020-11-23 09:32:28|admin_aerodynamics|64514|SELECT Distinct(idreserva) FROM personas_vuelos_automatizacion where fecha>=(SELECT MAX(fecha) as idreserva FROM personas_vuelos_automatizacion LIMIT 1);<{{{><}}}><{{{><}}}><{{{><}}}>SELECT * FROM vista_reservas_historico_posicionamiento WHERE date_format(DATE,"%Y-%m-%d") <='2020-11-04' ;<{{{><}}}><{{{><}}}>select CURRENT_TIMESTAMP(); 
Servers\aerodynamics\QueryHistory\102<|||>1<|||>2020-11-23 09:36:28|admin_aerodynamics|65093|SELECT Distinct(idreserva) FROM personas_vuelos_automatizacion where fecha>=(SELECT MAX(fecha) as idreserva FROM personas_vuelos_automatizacion LIMIT 1);<{{{><}}}><{{{><}}}><{{{><}}}>SELECT * FROM vista_reservas_historico_posicionamiento  ;<{{{><}}}><{{{><}}}>select CURRENT_TIMESTAMP(); 
Servers\aerodynamics\QueryHistory\103<|||>1<|||>2020-11-23 09:55:16|admin_aerodynamics|66514|SELECT Distinct(idreserva) FROM personas_vuelos_automatizacion where fecha>=(SELECT MAX(fecha) as idreserva FROM personas_vuelos_automatizacion LIMIT 1);<{{{><}}}><{{{><}}}><{{{><}}}>SELECT * FROM vista_reservas_historico_posicionamiento;<{{{><}}}><{{{><}}}>select CURRENT_TIMESTAMP(); 
Servers\aerodynamics\QueryHistory\104<|||>1<|||>2020-11-30 23:33:25|admin_aerodynamics|32|INSERT INTO reserva_vuelos(diaReserva, horaInicio, horaFin, idPiloto, idInstructor, idAvion, idLeccion, tipoVuelo, tipoVista, tipoSalida, tipoPiloto, tipoInstructor, preBriefing, postBriefing, observaciones, repetir,confirmado) VALUES ('1970-01-01','01:00:00','01:00:00',37807,3244,14,1,'Instruction','VFR','Local','DUAL','PIC','45','15','',0,0)
Servers\aerodynamics\QueryHistory\1<|||>1<|||>2020-11-30 23:42:01|admin_aerodynamics|47|INSERT INTO reserva_vuelos(diaReserva, horaInicio, horaFin, idPiloto, idInstructor, idAvion, idLeccion, tipoVuelo, tipoVista, tipoSalida, tipoPiloto, tipoInstructor, preBriefing, postBriefing, observaciones, repetir,confirmado) VALUES ('2020-11-30','10:09:00','11:09:00',37807,3244,14,1,'Instruction','VFR','Local','DUAL','PIC','45','15','',0,0)
Servers\aerodynamics\QueryHistory\2<|||>1<|||>2020-11-30 23:50:13|admin_aerodynamics|16|DELETE FROM reserva_vuelos WHERE idReserva=34
Servers\aerodynamics\QueryHistory\3<|||>1<|||>2020-11-30 23:52:22|admin_aerodynamics|31|INSERT INTO reserva_vuelos(diaReserva, horaInicio, horaFin, idPiloto, idInstructor, idAvion, idLeccion, tipoVuelo, tipoVista, tipoSalida, tipoPiloto, tipoInstructor, preBriefing, postBriefing, observaciones, repetir,confirmado) VALUES ('2020-11-30','09:37:00','11:37:00',37807,3244,14,1,'Instruction','VFR','Local','DUAL','PIC','45','15','',0,0)
Servers\aerodynamics\QueryHistory\4<|||>1<|||>2020-12-01 10:29:52|admin_aerodynamics|31|SELECT personas.idPersona AS idPersona, personas.nombre AS nombre, personas.apellido AS apellido, personas.email1 AS email1, personas.telefono AS telefono, personas.nacimiento AS nacimiento, personas.identidad AS identidad, personas.licencia AS licencia, personas.imagen_name AS imagen_name, max(reserva_vuelos.diaReserva) AS reserva,if(personas.active=1,"","Inactive") as estado FROM personas LEFT JOIN reserva_vuelos ON reserva_vuelos.idPiloto = personas.idPersona left join disponibilidad_pilotos dp on dp.idPiloto=personas.idPersona left join personas_curso pc on pc.idPersona=personas.idPersona where personas.idtipo=2 and lower(concat(nombre, " ", segundoNombre, " ", apellido, " ", telefono, " ", email1)) like "%torre%" and personas.active=1 group by personas.idPersona ORDER BY reserva asc limit 0,21
Servers\aerodynamics\QueryHistory\5<|||>1<|||>2020-12-01 10:30:02|admin_aerodynamics|15|SELECT personas.idPersona AS idPersona, personas.nombre AS nombre, personas.apellido AS apellido, personas.email1 AS email1, personas.telefono AS telefono, personas.nacimiento AS nacimiento, personas.identidad AS identidad, personas.licencia AS licencia, personas.imagen_name AS imagen_name, max(reserva_vuelos.diaReserva) AS reserva,if(personas.active=1,"","Inactive") as estado FROM personas LEFT JOIN reserva_vuelos ON reserva_vuelos.idPiloto = personas.idPersona left join disponibilidad_pilotos dp on dp.idPiloto=personas.idPersona left join personas_curso pc on pc.idPersona=personas.idPersona where personas.idtipo=2 and lower(concat(nombre, " ", segundoNombre, " ", apellido, " ", telefono, " ", email1)) like "%torres%" and personas.active=1 group by personas.idPersona ORDER BY reserva asc limit 0,21
Servers\aerodynamics\QueryHistory\6<|||>1<|||>2020-12-01 10:30:11|admin_aerodynamics|31|SELECT personas.idPersona AS idPersona, personas.nombre AS nombre, personas.apellido AS apellido, personas.email1 AS email1, personas.telefono AS telefono, personas.nacimiento AS nacimiento, personas.identidad AS identidad, personas.licencia AS licencia, personas.imagen_name AS imagen_name, max(reserva_vuelos.diaReserva) AS reserva,if(personas.active=1,"","Inactive") as estado FROM personas LEFT JOIN reserva_vuelos ON reserva_vuelos.idPiloto = personas.idPersona left join disponibilidad_pilotos dp on dp.idPiloto=personas.idPersona left join personas_curso pc on pc.idPersona=personas.idPersona where personas.idtipo=2 and lower(concat(nombre, " ", segundoNombre, " ", apellido, " ", telefono, " ", email1)) like "%Torres%" and personas.active=1 group by personas.idPersona ORDER BY reserva asc limit 0,21
Servers\aerodynamics\QueryHistory\8<|||>1<|||>2020-12-01 10:31:07|admin_aerodynamics|16|SELECT personas.idPersona AS idPersona, personas.nombre AS nombre, personas.apellido AS apellido, personas.email1 AS email1, personas.telefono AS telefono, personas.nacimiento AS nacimiento, personas.identidad AS identidad, personas.licencia AS licencia, personas.imagen_name AS imagen_name, max(reserva_vuelos.diaReserva) AS reserva,if(personas.active=1,"","Inactive") as estado FROM personas LEFT JOIN reserva_vuelos ON reserva_vuelos.idPiloto = personas.idPersona left join disponibilidad_pilotos dp on dp.idPiloto=personas.idPersona left join personas_curso pc on pc.idPersona=personas.idPersona where personas.idtipo=2 and lower(concat(nombre, " ", segundoNombre, " ", apellido, " ", telefono, " ", email1)) like "%Torres%" and personas.active=1 group by personas.idPersona ORDER BY idPersona asc 
Servers\aerodynamics\QueryHistory\9<|||>1<|||>2020-12-01 10:31:13|admin_aerodynamics|15|SELECT personas.idPersona AS idPersona, personas.nombre AS nombre, personas.apellido AS apellido, personas.email1 AS email1, personas.telefono AS telefono, personas.nacimiento AS nacimiento, personas.identidad AS identidad, personas.licencia AS licencia, personas.imagen_name AS imagen_name, max(reserva_vuelos.diaReserva) AS reserva,if(personas.active=1,"","Inactive") as estado FROM personas LEFT JOIN reserva_vuelos ON reserva_vuelos.idPiloto = personas.idPersona left join disponibilidad_pilotos dp on dp.idPiloto=personas.idPersona left join personas_curso pc on pc.idPersona=personas.idPersona where personas.idtipo=2 and lower(concat(nombre, " ", segundoNombre, " ", apellido, " ", telefono, " ", email1)) like "%Torres%" and personas.active=1 group by personas.idPersona ORDER BY idPersona asc limit 0,21
Servers\aerodynamics\QueryHistory\7<|||>1<|||>2020-12-01 10:31:20|admin_aerodynamics|16|SELECT personas.idPersona AS idPersona, personas.nombre AS nombre, personas.apellido AS apellido, personas.email1 AS email1, personas.telefono AS telefono, personas.nacimiento AS nacimiento, personas.identidad AS identidad, personas.licencia AS licencia, personas.imagen_name AS imagen_name, max(reserva_vuelos.diaReserva) AS reserva,if(personas.active=1,"","Inactive") as estado FROM personas LEFT JOIN reserva_vuelos ON reserva_vuelos.idPiloto = personas.idPersona left join disponibilidad_pilotos dp on dp.idPiloto=personas.idPersona left join personas_curso pc on pc.idPersona=personas.idPersona where personas.idtipo=2 and lower(concat(nombre, " ", segundoNombre, " ", apellido, " ", telefono, " ", email1)) like "%torres%" and personas.active=1 group by personas.idPersona ORDER BY idPersona asc limit 0,21
Servers\aerodynamics\QueryHistory\10<|||>1<|||>2020-12-01 10:33:23|admin_aerodynamics|31|SELECT <{{{><}}}>personas.idPersona AS idPersona, <{{{><}}}>personas.nombre AS nombre, <{{{><}}}>personas.apellido AS apellido, <{{{><}}}>personas.email1 AS email1, <{{{><}}}>personas.telefono AS telefono, <{{{><}}}>personas.nacimiento AS nacimiento, <{{{><}}}>personas.identidad AS identidad, <{{{><}}}>personas.licencia AS licencia, <{{{><}}}>personas.imagen_name AS imagen_name, <{{{><}}}>max(reserva_vuelos.diaReserva) AS reserva,<{{{><}}}>if(personas.active=1,"","Inactive") as estado <{{{><}}}>FROM personas <{{{><}}}>LEFT JOIN reserva_vuelos ON reserva_vuelos.idPiloto = personas.idPersona <{{{><}}}>left join disponibilidad_pilotos dp on dp.idPiloto=personas.idPersona <{{{><}}}>left join personas_curso pc on pc.idPersona=personas.idPersona <{{{><}}}>WHERE <{{{><}}}>personas.idtipo=2 <{{{><}}}>AND <{{{><}}}>lower(concat(personas.nombre, " ", personas.segundoNombre, " ", personas.apellido, " ", personas.telefono, " ", personas.email1)) like "%torres%" and personas.active=1 group by personas.idPersona ORDER BY idPersona asc limit 0,21
Servers\aerodynamics\QueryHistory\11<|||>1<|||>2020-12-01 10:33:41|admin_aerodynamics|94|SELECT <{{{><}}}>personas.idPersona AS idPersona, <{{{><}}}>personas.nombre AS nombre, <{{{><}}}>personas.apellido AS apellido, <{{{><}}}>personas.email1 AS email1, <{{{><}}}>personas.telefono AS telefono, <{{{><}}}>personas.nacimiento AS nacimiento, <{{{><}}}>personas.identidad AS identidad, <{{{><}}}>personas.licencia AS licencia, <{{{><}}}>personas.imagen_name AS imagen_name, <{{{><}}}>max(reserva_vuelos.diaReserva) AS reserva,<{{{><}}}>if(personas.active=1,"","Inactive") as estado <{{{><}}}>FROM personas <{{{><}}}>LEFT JOIN reserva_vuelos ON reserva_vuelos.idPiloto = personas.idPersona <{{{><}}}>left join disponibilidad_pilotos dp on dp.idPiloto=personas.idPersona <{{{><}}}>left join personas_curso pc on pc.idPersona=personas.idPersona <{{{><}}}>WHERE <{{{><}}}>personas.idtipo=2 <{{{><}}}>and personas.active=1 group by personas.idPersona ORDER BY idPersona asc limit 0,21
Servers\aerodynamics\QueryHistory\12<|||>1<|||>2020-12-01 10:34:04|admin_aerodynamics|109|SELECT <{{{><}}}>personas.idPersona AS idPersona, <{{{><}}}>personas.nombre AS nombre, <{{{><}}}>personas.apellido AS apellido, <{{{><}}}>personas.email1 AS email1, <{{{><}}}>personas.telefono AS telefono, <{{{><}}}>personas.nacimiento AS nacimiento, <{{{><}}}>personas.identidad AS identidad, <{{{><}}}>personas.licencia AS licencia, <{{{><}}}>personas.imagen_name AS imagen_name, <{{{><}}}>max(reserva_vuelos.diaReserva) AS reserva,<{{{><}}}>if(personas.active=1,"","Inactive") as estado <{{{><}}}>FROM personas <{{{><}}}>LEFT JOIN reserva_vuelos ON reserva_vuelos.idPiloto = personas.idPersona <{{{><}}}>left join disponibilidad_pilotos dp on dp.idPiloto=personas.idPersona <{{{><}}}>left join personas_curso pc on pc.idPersona=personas.idPersona <{{{><}}}>WHERE <{{{><}}}>personas.idtipo=2  group by personas.idPersona ORDER BY idPersona asc limit 0,21
Servers\aerodynamics\QueryHistory\13<|||>1<|||>2020-12-01 10:35:32|admin_aerodynamics|157|SELECT <{{{><}}}>personas.idPersona AS idersona, <{{{><}}}>personas.idtipo,<{{{><}}}>personas.nombre AS nombre, <{{{><}}}>personas.apellido AS apellido, <{{{><}}}>personas.email1 AS email1, <{{{><}}}>personas.telefono AS telefono, <{{{><}}}>personas.nacimiento AS nacimiento, <{{{><}}}>personas.identidad AS identidad, <{{{><}}}>personas.licencia AS licencia, <{{{><}}}>personas.imagen_name AS imagen_name, <{{{><}}}>max(reserva_vuelos.diaReserva) AS reserva,<{{{><}}}>if(personas.active=1,"","Inactive") as estado <{{{><}}}>FROM personas <{{{><}}}>LEFT JOIN reserva_vuelos ON reserva_vuelos.idPiloto = personas.idPersona <{{{><}}}>left join disponibilidad_pilotos dp on dp.idPiloto=personas.idPersona <{{{><}}}>left join personas_curso pc on pc.idPersona=personas.idPersona <{{{><}}}>  group by personas.idPersona ORDER BY personas.idPersona asc limit 0,21
Servers\aerodynamics\QueryHistory\14<|||>1<|||>2020-12-01 10:36:06|admin_aerodynamics|141|SELECT <{{{><}}}>personas.idPersona AS idersona, <{{{><}}}>personas.idtipo,<{{{><}}}>personas.nombre AS nombre, <{{{><}}}>personas.apellido AS apellido, <{{{><}}}>personas.email1 AS email1, <{{{><}}}>personas.telefono AS telefono, <{{{><}}}>personas.nacimiento AS nacimiento, <{{{><}}}>personas.identidad AS identidad, <{{{><}}}>personas.licencia AS licencia, <{{{><}}}>personas.imagen_name AS imagen_name, <{{{><}}}>max(reserva_vuelos.diaReserva) AS reserva,<{{{><}}}>if(personas.active=1,"","Inactive") as estado <{{{><}}}>FROM personas <{{{><}}}>LEFT JOIN reserva_vuelos ON reserva_vuelos.idPiloto = personas.idPersona <{{{><}}}>left join disponibilidad_pilotos dp on dp.idPiloto=personas.idPersona <{{{><}}}>left join personas_curso pc on pc.idPersona=personas.idPersona <{{{><}}}>WHERE personas.idtipo=2<{{{><}}}>  group by personas.idPersona ORDER BY personas.idPersona asc
Servers\aerodynamics\QueryHistory\15<|||>1<|||>2020-12-01 10:38:03|admin_aerodynamics|16|SELECT <{{{><}}}>personas.idPersona AS idersona, <{{{><}}}>personas.idtipo,<{{{><}}}>personas.nombre AS nombre, <{{{><}}}>personas.apellido AS apellido, <{{{><}}}>personas.email1 AS email1, <{{{><}}}>personas.telefono AS telefono, <{{{><}}}>personas.nacimiento AS nacimiento, <{{{><}}}>personas.identidad AS identidad, <{{{><}}}>personas.licencia AS licencia, <{{{><}}}>personas.imagen_name AS imagen_name, <{{{><}}}>max(reserva_vuelos.diaReserva) AS reserva,<{{{><}}}>if(personas.active=1,"","Inactive") as estado <{{{><}}}>FROM personas <{{{><}}}>LEFT JOIN reserva_vuelos ON reserva_vuelos.idPiloto = personas.idPersona <{{{><}}}>left join disponibilidad_pilotos dp on dp.idPiloto=personas.idPersona <{{{><}}}>left join personas_curso pc on pc.idPersona=personas.idPersona <{{{><}}}>WHERE personas.idtipo=2 AND LOWER(apellido) LIKE '%torres%' <{{{><}}}>  group by personas.idPersona ORDER BY personas.idPersona asc
Servers\aerodynamics\QueryHistory\16<|||>1<|||>2020-12-01 10:39:29|admin_aerodynamics|31|SELECT <{{{><}}}>personas.idPersona AS idersona, <{{{><}}}>personas.idtipo,<{{{><}}}>personas.nombre AS nombre, <{{{><}}}>personas.apellido AS apellido, <{{{><}}}>personas.email1 AS email1, <{{{><}}}>personas.telefono AS telefono, <{{{><}}}>personas.nacimiento AS nacimiento, <{{{><}}}>personas.identidad AS identidad, <{{{><}}}>personas.licencia AS licencia, <{{{><}}}>personas.imagen_name AS imagen_name, <{{{><}}}>max(reserva_vuelos.diaReserva) AS reserva,<{{{><}}}>if(personas.active=1,"","Inactive") as estado <{{{><}}}>FROM personas <{{{><}}}>LEFT JOIN reserva_vuelos ON reserva_vuelos.idPiloto = personas.idPersona <{{{><}}}>left join disponibilidad_pilotos dp on dp.idPiloto=personas.idPersona <{{{><}}}>left join personas_curso pc on pc.idPersona=personas.idPersona <{{{><}}}>WHERE personas.idtipo=2 AND CONCAT(LOWER(apellido),' ',LOWER(nombre),' ',LOWER(email1),' ',LOWER(telefono),' ',LOWER(identidad)) LIKE '%torres%' <{{{><}}}>  group by personas.idPersona ORDER BY personas.idPersona asc
Servers\aerodynamics\QueryHistory\17<|||>1<|||>2020-12-01 11:14:57|admin_aerodynamics|97375|SELECT * FROM vista_reservas_historico_posicionamiento
Servers\aerodynamics\QueryHistory\18<|||>1<|||>2020-12-01 11:18:23|admin_aerodynamics|16|SELECT MAX(idreserva) as idreserva FROM personas_vuelos_automatizacion limit 1<{{{><}}}>
Servers\aerodynamics\QueryHistory\19<|||>1<|||>2020-12-01 11:18:51|admin_aerodynamics|15|SELECT * FROM personas_vuelos_automatizacion <{{{><}}}>
Servers\aerodynamics\QueryHistory\20<|||>1<|||>2020-12-01 11:24:16|admin_aerodynamics|94703|SELECT * FROM vista_reservas_historico_posicionamiento WHERE Arranque IS NOT NULL AND apagado IS NOT null
Servers\aerodynamics\QueryHistory\21<|||>1<|||>2020-12-01 11:30:59|admin_aerodynamics|92297|SELECT LESSONS FROM vista_reservas_historico_posicionamiento WHERE LESSONS in (SELECT idreserva FROM personas_vuelos_automatizacion)
Servers\aerodynamics\QueryHistory\23<|||>1<|||>2020-12-01 11:36:26|admin_aerodynamics|97328|SELECT * FROM vista_reservas_historico_posicionamiento WHERE LESSONS not in (SELECT idreserva FROM personas_vuelos_automatizacion)
Servers\aerodynamics\QueryHistory\22<|||>1<|||>2020-12-01 11:38:41|admin_aerodynamics|97687|SELECT * FROM vista_reservas_historico_posicionamiento WHERE LESSONS not in (SELECT idreserva FROM personas_vuelos_automatizacion) AND  Arranque IS NOT NULL AND apagado IS NOT null
Servers\aerodynamics\QueryHistory\24<|||>1<|||>2020-12-04 10:14:36|admin_aerodynamics|16|SELECT * FROM personas WHERE personas.idtipo not in(2) and CONCAT(LOWER(apellido)," ",LOWER(nombre)," ",LOWER(email1)," ",LOWER(telefono)," ",LOWER(identidad)) like "%susana%"
Servers\aerodynamics\QueryHistory\25<|||>1<|||>2020-12-04 10:19:46|admin_aerodynamics|31|SELECT * FROM personas WHERE personas.idperfil not in(2,4,6) and CONCAT(LOWER(apellido)," ",LOWER(nombre)," ",LOWER(email1)," ",LOWER(telefono)," ",LOWER(identidad)) like "%susana%"
Servers\aerodynamics\QueryHistory\26<|||>1<|||>2020-12-04 10:19:58|admin_aerodynamics|15|SELECT * FROM personas WHERE CONCAT(LOWER(apellido)," ",LOWER(nombre)," ",LOWER(email1)," ",LOWER(telefono)," ",LOWER(identidad)) like "%susana%"
Servers\aerodynamics\QueryHistory\27<|||>1<|||>2020-12-07 10:16:56|admin_aerodynamics|15|SELECT * FROM aviones
Servers\aerodynamics\QueryHistory\28<|||>1<|||>2020-12-07 10:21:07|admin_aerodynamics|16|SELECT registracion,nomInstructor,modelo,idInstructor FROM aviones<{{{><}}}>LEFT JOIN aviones_instructor ON aviones_instructor.idAvion= aviones.idAvion<{{{><}}}>WHERE idInstructor=3244
Servers\aerodynamics\QueryHistory\29<|||>1<|||>2020-12-07 10:23:44|admin_aerodynamics|15|SELECT registracion,nomInstructor,modelo,(SELECT idInstructor FROM aviones_instructor WHERE idAvion=a.idAvion AND idInstructor=3244) FROM aviones a
Servers\aerodynamics\QueryHistory\30<|||>1<|||>2020-12-07 10:24:09|admin_aerodynamics|16|SELECT registracion,nomInstructor,modelo,(SELECT idInstructor FROM aviones_instructor WHERE idAvion=a.idAvion AND idInstructor=3244) AS seleccionado FROM aviones a
Servers\aerodynamics\QueryHistory\31<|||>1<|||>2020-12-07 10:25:01|admin_aerodynamics|16|SELECT registracion,nomInstructor,modelo,(SELECT if(idInstructor IS NOT NULL,'selected','') FROM aviones_instructor WHERE idAvion=a.idAvion AND idInstructor=3244) AS seleccionado FROM aviones a
Servers\aerodynamics\QueryHistory\32<|||>1<|||>2020-12-07 10:52:19|admin_aerodynamics|31|SELECT idCurso,refCurso,nombre,(SELECT if(idInstructor IS NOT NULL,'selected','') FROM cursos_instructor WHERE idCurso=c.idCUrso AND idInstructor=3244) AS seleccionado FROM cursos c
Servers\aerodynamics\QueryHistory\33<|||>1<|||>2020-12-07 18:00:15|admin_aerodynamics|31|INSERT INTO reserva_vuelos(diaReserva, horaInicio, horaFin, idPiloto, idInstructor, idAvion, idLeccion, tipoVuelo, tipoVista, tipoSalida, tipoPiloto, tipoInstructor, preBriefing, postBriefing, observaciones, repetir,confirmado) VALUES ('2020-07-12','08:25:00','09:25:00',3510,3244,16,25,'Instruction','VFR','Local','DUAL','PIC','45','15','',0,0)
Servers\aerodynamics\QueryHistory\34<|||>1<|||>2020-12-07 18:03:43|admin_aerodynamics|15|SELECT concat(tipoVuelo," ",observaciones) as name,idAvion as location,DATE_FORMAT(concat(diaReserva," ",horaInicio), "%m-%d-%Y %H:%i:%s") as start,DATE_FORMAT(concat(diaReserva," ",horaFin), "%m-%d-%Y %H:%i:%s") as end,if(reserva_vuelos.confirmado=0,"reservaNo",if(reserva_vuelos.confirmado=1,"reservaConf",if(reserva_vuelos.confirmado=2,"reservaPrevision",""))) as className,reserva_vuelos.idReserva as idR FROM reserva_vuelos where simulador=0 and idCancelacion is null and diaReserva="2020-12-07" group by idReserva UNION SELECT concat(observacionMan) as name,idAvion as location,DATE_FORMAT(horaInicioMan, "%m-%d-%Y %H:%i:%s") as start,DATE_FORMAT(horaFinMan, "%m-%d-%Y %H:%i:%s") as end,if(reserva_mantenimiento.confirmacionMan=0,"MantenimientoPrevision","MantenimientoConf") as className,reserva_mantenimiento.idReservaMantenimiento as idR FROM reserva_mantenimiento where diaMan="2020-12-07" group by idReservamantenimiento
Servers\aerodynamics\QueryHistory\35<|||>1<|||>2020-12-07 18:05:08|admin_aerodynamics|16|SELECT <{{{><}}}>concat(tipoVuelo," ",observaciones) as NAME,<{{{><}}}>idAvion as location,DATE_FORMAT(concat(diaReserva," ",horaInicio), "%m-%d-%Y %H:%i:%s") as START,<{{{><}}}>DATE_FORMAT(concat(diaReserva," ",horaFin), "%m-%d-%Y %H:%i:%s") as END,<{{{><}}}>if(reserva_vuelos.confirmado=0,"reservaNo",if(reserva_vuelos.confirmado=1,"reservaConf",if(reserva_vuelos.confirmado=2,"reservaPrevision",""))) as className,<{{{><}}}>reserva_vuelos.idReserva as idR <{{{><}}}>FROM reserva_vuelos <{{{><}}}>where simulador=0 and idCancelacion is null and diaReserva="2020-12-07" group by idReserva <{{{><}}}>
Servers\aerodynamics\QueryHistory\36<|||>1<|||>2020-12-07 18:05:21|admin_aerodynamics|15|SELECT <{{{><}}}>concat(tipoVuelo," ",observaciones) as NAME,<{{{><}}}>idAvion as location,DATE_FORMAT(concat(diaReserva," ",horaInicio), "%m-%d-%Y %H:%i:%s") as START,<{{{><}}}>DATE_FORMAT(concat(diaReserva," ",horaFin), "%m-%d-%Y %H:%i:%s") as END,<{{{><}}}>if(reserva_vuelos.confirmado=0,"reservaNo",if(reserva_vuelos.confirmado=1,"reservaConf",if(reserva_vuelos.confirmado=2,"reservaPrevision",""))) as className,<{{{><}}}>reserva_vuelos.idReserva as idR <{{{><}}}>FROM reserva_vuelos <{{{><}}}>where simulador=0 and idCancelacion is null and diaReserva="2020-12-07" group by idReserva <{{{><}}}>UNION <{{{><}}}>SELECT concat(observacionMan) as name,idAvion as location,DATE_FORMAT(horaInicioMan, "%m-%d-%Y %H:%i:%s") as start,DATE_FORMAT(horaFinMan, "%m-%d-%Y %H:%i:%s") as end,if(reserva_mantenimiento.confirmacionMan=0,"MantenimientoPrevision","MantenimientoConf") as className,reserva_mantenimiento.idReservaMantenimiento as idR FROM reserva_mantenimiento where diaMan="2020-12-07" group by idReservamantenimiento
Servers\aerodynamics\QueryHistory\37<|||>1<|||>2020-12-11 13:48:06|admin_aerodynamics|110|CREATE TABLE IF NOT EXISTS `documentos` (<{{{><}}}>            `id` INT AUTO_INCREMENT,<{{{><}}}>            `tabla` VARCHAR(100) ,<{{{><}}}>            `pkTabla` VARCHAR(100) ,<{{{><}}}>            `idperfil` INT ,<{{{><}}}>            `nombre` VARCHAR(100),<{{{><}}}>            `caducidad` DATE,<{{{><}}}>            `href` VARCHAR(500) ,<{{{><}}}>            `tipo` VARCHAR(100),<{{{><}}}>				<{{{><}}}>	PRIMARY KEY (`id`) <{{{><}}}>        );
Servers\aerodynamics\QueryHistory\38<|||>1<|||>2020-12-12 09:51:10|admin_aerodynamics|214984|SELECT * <{{{><}}}>FROM vista_reservas_historico_posicionamiento <{{{><}}}>WHERE LESSONS not in (SELECT idreserva FROM personas_vuelos_automatizacion) <{{{><}}}>AND  Arranque IS NOT NULL <{{{><}}}>AND apagado IS NOT null
Servers\aerodynamics\QueryHistory\40<|||>1<|||>2020-12-13 12:15:35|admin_aerodynamics|232531|(select <{{{><}}}>`vrl`.`idReserva` AS `LESSONS`,<{{{><}}}>date_format(`vrl`.`diaReserva`,'%d-%m-%Y') AS `DATE`,<{{{><}}}>`vrl`.`inicioReserva` AS `inicioReserva`,<{{{><}}}>`vrl`.`finReserva` AS `finReserva`,<{{{><}}}>`vrl`.`matricula` AS `AIRCRAFT`,<{{{><}}}>(select `aviones_historico_posicionamiento`.`Fecha` from `aviones_historico_posicionamiento` <{{{><}}}>		where ((`aviones_historico_posicionamiento`.`Matricula` = convert(`vrl`.`matricula` using utf8mb4)) <{{{><}}}>		and (`aviones_historico_posicionamiento`.`Fecha` between `vrl`.`inicioReserva` and `vrl`.`finReserva`) <{{{><}}}>		and (`aviones_historico_posicionamiento`.`Alt` >= 40) and (`aviones_historico_posicionamiento`.`Veloc` >= 90)) <{{{><}}}>order by `aviones_historico_posicionamiento`.`Fecha` limit 1) AS `Despegue`,<{{{><}}}>(select `aviones_historico_posicionamiento`.`Fecha` from `aviones_historico_posicionamiento` <{{{><}}}>	where ((`aviones_historico_posicionamiento`.`Matricula` = convert(`vrl`.`matricula` using utf8mb4)) <{{{><}}}>	and (`aviones_historico_posicionamiento`.`Fecha` between `vrl`.`inicioReserva` and `vrl`.`finReserva`) <{{{><}}}>	and (`aviones_historico_posicionamiento`.`Alt`<=40) and (`aviones_historico_posicionamiento`.`Veloc` <130)) <{{{><}}}>	order by `aviones_historico_posicionamiento`.`Fecha` desc limit 1) AS `Aterrizaje`,<{{{><}}}>(select `aviones_historico_posicionamiento`.`Fecha` from `aviones_historico_posicionamiento` <{{{><}}}>	where ((`aviones_historico_posicionamiento`.`Matricula` = convert(`vrl`.`matricula` using utf8mb4)) <{{{><}}}>	and (`aviones_historico_posicionamiento`.`Fecha` between `vrl`.`inicioReserva` and `vrl`.`finReserva`) <{{{><}}}>	and (`aviones_historico_posicionamiento`.`Ignic` = 1)) order by `aviones_historico_posicionamiento`.`Fecha` limit 1) AS `Arranque`,<{{{><}}}>(select `aviones_historico_posicionamiento`.`Fecha` from `aviones_historico_posicionamiento` <{{{><}}}>	where ((`aviones_historico_posicionamiento`.`Matricula` = convert(`vrl`.`matricula` using utf8mb4)) <{{{><}}}>	and (`aviones_historico_posicionamiento`.`Fecha` between `vrl`.`inicioReserva` and `vrl`.`finReserva`) <{{{><}}}>	and (`aviones_historico_posicionamiento`.`Ignic` = 1)) order by `aviones_historico_posicionamiento`.`Fecha` desc limit 1) AS `Apagado` <{{{><}}}>from <{{{><}}}>`vista_reservas_lecciones` `vrl` <{{{><}}}>where (`vrl`.`matricula` is not null) <{{{><}}}>group by `vrl`.`idReserva`)
Servers\aerodynamics\QueryHistory\41<|||>1<|||>2020-12-13 12:24:36|admin_aerodynamics|236953|(select <{{{><}}}>`vrl`.`idReserva` AS `LESSONS`,<{{{><}}}>date_format(`vrl`.`diaReserva`,'%d-%m-%Y') AS `DATE`,<{{{><}}}>`vrl`.`inicioReserva` AS `inicioReserva`,<{{{><}}}>`vrl`.`finReserva` AS `finReserva`,<{{{><}}}>`vrl`.`matricula` AS `AIRCRAFT`,<{{{><}}}>(select `aviones_historico_posicionamiento`.`Fecha` from `aviones_historico_posicionamiento` <{{{><}}}>		where ((`aviones_historico_posicionamiento`.`Matricula` = convert(`vrl`.`matricula` using utf8mb4)) <{{{><}}}>		and (`aviones_historico_posicionamiento`.`Fecha` between `vrl`.`inicioReserva` and `vrl`.`finReserva`) <{{{><}}}>		and (`aviones_historico_posicionamiento`.`Alt` >= 40) and (`aviones_historico_posicionamiento`.`Veloc` >= 90)) <{{{><}}}>		and (`aviones_historico_posicionamiento`.`Ignic` = 1)<{{{><}}}>order by `aviones_historico_posicionamiento`.`Fecha` limit 1) AS `Despegue`,<{{{><}}}>(select `aviones_historico_posicionamiento`.`Fecha` from `aviones_historico_posicionamiento` <{{{><}}}>	where ((`aviones_historico_posicionamiento`.`Matricula` = convert(`vrl`.`matricula` using utf8mb4)) <{{{><}}}>	and (`aviones_historico_posicionamiento`.`Fecha` between `vrl`.`inicioReserva` and `vrl`.`finReserva`) <{{{><}}}>	and (`aviones_historico_posicionamiento`.`Alt`<=40) and (`aviones_historico_posicionamiento`.`Veloc` <130)) <{{{><}}}>	and (`aviones_historico_posicionamiento`.`Ignic` = 1)<{{{><}}}>	order by `aviones_historico_posicionamiento`.`Fecha` desc limit 1) AS `Aterrizaje`,<{{{><}}}>(select `aviones_historico_posicionamiento`.`Fecha` from `aviones_historico_posicionamiento` <{{{><}}}>	where ((`aviones_historico_posicionamiento`.`Matricula` = convert(`vrl`.`matricula` using utf8mb4)) <{{{><}}}>	and (`aviones_historico_posicionamiento`.`Fecha` between `vrl`.`inicioReserva` and `vrl`.`finReserva`) <{{{><}}}>	and (`aviones_historico_posicionamiento`.`Ignic` = 1)) order by `aviones_historico_posicionamiento`.`Fecha` limit 1) AS `Arranque`,<{{{><}}}>(select `aviones_historico_posicionamiento`.`Fecha` from `aviones_historico_posicionamiento` <{{{><}}}>	where ((`aviones_historico_posicionamiento`.`Matricula` = convert(`vrl`.`matricula` using utf8mb4)) <{{{><}}}>	and (`aviones_historico_posicionamiento`.`Fecha` between `vrl`.`inicioReserva` and `vrl`.`finReserva`) <{{{><}}}>	and (`aviones_historico_posicionamiento`.`Ignic` = 1)) order by `aviones_historico_posicionamiento`.`Fecha` desc limit 1) AS `Apagado` <{{{><}}}>from <{{{><}}}>`vista_reservas_lecciones` `vrl` <{{{><}}}>where (`vrl`.`matricula` is not null) <{{{><}}}>group by `vrl`.`idReserva`)
Servers\aerodynamics\QueryHistory\42<|||>1<|||>2020-12-13 12:31:04|admin_aerodynamics|234266|(select <{{{><}}}>`vrl`.`idReserva` AS `LESSONS`,<{{{><}}}>date_format(`vrl`.`diaReserva`,'%d-%m-%Y') AS `DATE`,<{{{><}}}>`vrl`.`inicioReserva` AS `inicioReserva`,<{{{><}}}>`vrl`.`finReserva` AS `finReserva`,<{{{><}}}>`vrl`.`matricula` AS `AIRCRAFT`,<{{{><}}}>(select `aviones_historico_posicionamiento`.`Fecha` from `aviones_historico_posicionamiento` <{{{><}}}>		where ((`aviones_historico_posicionamiento`.`Matricula` = convert(`vrl`.`matricula` using utf8mb4)) <{{{><}}}>		and (`aviones_historico_posicionamiento`.`Fecha` between `vrl`.`inicioReserva` and `vrl`.`finReserva`) <{{{><}}}>		and (`aviones_historico_posicionamiento`.`Alt` >= 32) and (`aviones_historico_posicionamiento`.`Veloc` >= 90)) <{{{><}}}>		and (`aviones_historico_posicionamiento`.`Ignic` = 1)<{{{><}}}>order by `aviones_historico_posicionamiento`.`Fecha` limit 1) AS `Despegue`,<{{{><}}}>(select `aviones_historico_posicionamiento`.`Fecha` from `aviones_historico_posicionamiento` <{{{><}}}>	where ((`aviones_historico_posicionamiento`.`Matricula` = convert(`vrl`.`matricula` using utf8mb4)) <{{{><}}}>	and (`aviones_historico_posicionamiento`.`Fecha` between `vrl`.`inicioReserva` and `vrl`.`finReserva`) <{{{><}}}>	and (`aviones_historico_posicionamiento`.`Alt`<=42) and (`aviones_historico_posicionamiento`.`Veloc` <130)) <{{{><}}}>	and (`aviones_historico_posicionamiento`.`Ignic` = 1)<{{{><}}}>	order by `aviones_historico_posicionamiento`.`Fecha` desc limit 1) AS `Aterrizaje`,<{{{><}}}>(select `aviones_historico_posicionamiento`.`Fecha` from `aviones_historico_posicionamiento` <{{{><}}}>	where ((`aviones_historico_posicionamiento`.`Matricula` = convert(`vrl`.`matricula` using utf8mb4)) <{{{><}}}>	and (`aviones_historico_posicionamiento`.`Fecha` between `vrl`.`inicioReserva` and `vrl`.`finReserva`) <{{{><}}}>	and (`aviones_historico_posicionamiento`.`Ignic` = 1)) order by `aviones_historico_posicionamiento`.`Fecha` limit 1) AS `Arranque`,<{{{><}}}>(select `aviones_historico_posicionamiento`.`Fecha` from `aviones_historico_posicionamiento` <{{{><}}}>	where ((`aviones_historico_posicionamiento`.`Matricula` = convert(`vrl`.`matricula` using utf8mb4)) <{{{><}}}>	and (`aviones_historico_posicionamiento`.`Fecha` between `vrl`.`inicioReserva` and `vrl`.`finReserva`) <{{{><}}}>	and (`aviones_historico_posicionamiento`.`Ignic` = 1)) order by `aviones_historico_posicionamiento`.`Fecha` desc limit 1) AS `Apagado` <{{{><}}}>from <{{{><}}}>`vista_reservas_lecciones` `vrl` <{{{><}}}>where (`vrl`.`matricula` is not null) <{{{><}}}>group by `vrl`.`idReserva`)
Servers\aerodynamics\QueryHistory\44<|||>1<|||>2020-12-13 14:05:27|admin_aerodynamics|244688|(select <{{{><}}}>`vrl`.`idReserva` AS `LESSONS`,<{{{><}}}>date_format(`vrl`.`diaReserva`,'%d-%m-%Y') AS `DATE`,<{{{><}}}>`vrl`.`inicioReserva` AS `inicioReserva`,<{{{><}}}>`vrl`.`finReserva` AS `finReserva`,<{{{><}}}>`vrl`.`matricula` AS `AIRCRAFT`,<{{{><}}}>(select `aviones_historico_posicionamiento`.`Fecha` from `aviones_historico_posicionamiento` <{{{><}}}>		where ((`aviones_historico_posicionamiento`.`Matricula` = convert(`vrl`.`matricula` using utf8mb4)) <{{{><}}}>		and (`aviones_historico_posicionamiento`.`Fecha` between `vrl`.`inicioReserva` and `vrl`.`finReserva`) <{{{><}}}>		and (`aviones_historico_posicionamiento`.`Alt` >= 32) and (`aviones_historico_posicionamiento`.`Veloc` >= 90)) <{{{><}}}>		and (`aviones_historico_posicionamiento`.`Ignic` = 1)<{{{><}}}>order by `aviones_historico_posicionamiento`.`Fecha` asc limit 1) AS `Despegue`,<{{{><}}}>(select `aviones_historico_posicionamiento`.`Fecha` from `aviones_historico_posicionamiento` <{{{><}}}>	where ((`aviones_historico_posicionamiento`.`Matricula` = convert(`vrl`.`matricula` using utf8mb4)) <{{{><}}}>	and (`aviones_historico_posicionamiento`.`Fecha` between `vrl`.`inicioReserva` and `vrl`.`finReserva`) <{{{><}}}>	and (`aviones_historico_posicionamiento`.`Alt`<=42) and (`aviones_historico_posicionamiento`.`Veloc` <130)) <{{{><}}}>	and (`aviones_historico_posicionamiento`.`Ignic` = 1)<{{{><}}}>	order by `aviones_historico_posicionamiento`.`Fecha` desc limit 1) AS `Aterrizaje`,<{{{><}}}>(select `aviones_historico_posicionamiento`.`Fecha` from `aviones_historico_posicionamiento` <{{{><}}}>	where ((`aviones_historico_posicionamiento`.`Matricula` = convert(`vrl`.`matricula` using utf8mb4)) <{{{><}}}>	and (`aviones_historico_posicionamiento`.`Fecha` between `vrl`.`inicioReserva` and `vrl`.`finReserva`) <{{{><}}}>	and (`aviones_historico_posicionamiento`.`Ignic` = 1)) order by `aviones_historico_posicionamiento`.`Fecha` limit 1) AS `Arranque`,<{{{><}}}>(select `aviones_historico_posicionamiento`.`Fecha` from `aviones_historico_posicionamiento` <{{{><}}}>	where ((`aviones_historico_posicionamiento`.`Matricula` = convert(`vrl`.`matricula` using utf8mb4)) <{{{><}}}>	and (`aviones_historico_posicionamiento`.`Fecha` between `vrl`.`inicioReserva` and `vrl`.`finReserva`) <{{{><}}}>	and (`aviones_historico_posicionamiento`.`Ignic` = 1)) order by `aviones_historico_posicionamiento`.`Fecha` desc limit 1) AS `Apagado` <{{{><}}}>from <{{{><}}}>`vista_reservas_lecciones` `vrl` <{{{><}}}>where (`vrl`.`matricula` is not null) <{{{><}}}>group by `vrl`.`idReserva`)
Servers\aerodynamics\QueryHistory\43<|||>1<|||>2020-12-13 21:46:21|admin_aerodynamics|242391|(select <{{{><}}}>`vrl`.`idReserva` AS `LESSONS`,<{{{><}}}>date_format(`vrl`.`diaReserva`,'%d-%m-%Y') AS `DATE`,<{{{><}}}>`vrl`.`inicioReserva` AS `inicioReserva`,<{{{><}}}>`vrl`.`finReserva` AS `finReserva`,<{{{><}}}>`vrl`.`matricula` AS `AIRCRAFT`,<{{{><}}}>(select `aviones_historico_posicionamiento`.`Fecha` from `aviones_historico_posicionamiento` <{{{><}}}>		where ((`aviones_historico_posicionamiento`.`Matricula` = convert(`vrl`.`matricula` using utf8mb4)) <{{{><}}}>		and (`aviones_historico_posicionamiento`.`Fecha` between `vrl`.`inicioReserva` and `vrl`.`finReserva`) <{{{><}}}>		and (`aviones_historico_posicionamiento`.`Alt` >= 40) and (`aviones_historico_posicionamiento`.`Veloc` >= 90)) <{{{><}}}>order by `aviones_historico_posicionamiento`.`Fecha` limit 1) AS `Despegue`,<{{{><}}}>(select `aviones_historico_posicionamiento`.`Fecha` from `aviones_historico_posicionamiento` <{{{><}}}>	where ((`aviones_historico_posicionamiento`.`Matricula` = convert(`vrl`.`matricula` using utf8mb4)) <{{{><}}}>	and (`aviones_historico_posicionamiento`.`Fecha` between `vrl`.`inicioReserva` and `vrl`.`finReserva`) <{{{><}}}>	and (`aviones_historico_posicionamiento`.`Alt`<=40) and (`aviones_historico_posicionamiento`.`Veloc` <100)) <{{{><}}}>	order by `aviones_historico_posicionamiento`.`Fecha` desc limit 1) AS `Aterrizaje`,<{{{><}}}>(select `aviones_historico_posicionamiento`.`Fecha` from `aviones_historico_posicionamiento` <{{{><}}}>	where ((`aviones_historico_posicionamiento`.`Matricula` = convert(`vrl`.`matricula` using utf8mb4)) <{{{><}}}>	and (`aviones_historico_posicionamiento`.`Fecha` between `vrl`.`inicioReserva` and `vrl`.`finReserva`) <{{{><}}}>	and (`aviones_historico_posicionamiento`.`Ignic` = 1)) order by `aviones_historico_posicionamiento`.`Fecha` limit 1) AS `Arranque`,<{{{><}}}>(select `aviones_historico_posicionamiento`.`Fecha` from `aviones_historico_posicionamiento` <{{{><}}}>	where ((`aviones_historico_posicionamiento`.`Matricula` = convert(`vrl`.`matricula` using utf8mb4)) <{{{><}}}>	and (`aviones_historico_posicionamiento`.`Fecha` between `vrl`.`inicioReserva` and `vrl`.`finReserva`) <{{{><}}}>	and (`aviones_historico_posicionamiento`.`Ignic` = 1)) order by `aviones_historico_posicionamiento`.`Fecha` desc limit 1) AS `Apagado` <{{{><}}}>from <{{{><}}}>`vista_reservas_lecciones` `vrl` <{{{><}}}>where (`vrl`.`matricula` is not null) <{{{><}}}>group by `vrl`.`idReserva`)
Servers\aerodynamics\QueryHistory\39<|||>1<|||>2020-12-13 21:52:24|admin_aerodynamics|240328|(select <{{{><}}}>`vrl`.`idReserva` AS `LESSONS`,<{{{><}}}>date_format(`vrl`.`diaReserva`,'%d-%m-%Y') AS `DATE`,<{{{><}}}>`vrl`.`inicioReserva` AS `inicioReserva`,<{{{><}}}>`vrl`.`finReserva` AS `finReserva`,<{{{><}}}>`vrl`.`matricula` AS `AIRCRAFT`,<{{{><}}}>(select `aviones_historico_posicionamiento`.`Fecha` from `aviones_historico_posicionamiento` <{{{><}}}>		where ((`aviones_historico_posicionamiento`.`Matricula` = convert(`vrl`.`matricula` using utf8mb4)) <{{{><}}}>		and (`aviones_historico_posicionamiento`.`Fecha` between `vrl`.`inicioReserva` and `vrl`.`finReserva`) <{{{><}}}>		and (`aviones_historico_posicionamiento`.`Alt` >= 40) and (`aviones_historico_posicionamiento`.`Veloc` >= 90)) <{{{><}}}>order by `aviones_historico_posicionamiento`.`Fecha` asc limit 1) AS `Despegue`,<{{{><}}}>(select `aviones_historico_posicionamiento`.`Fecha` from `aviones_historico_posicionamiento` <{{{><}}}>	where ((`aviones_historico_posicionamiento`.`Matricula` = convert(`vrl`.`matricula` using utf8mb4)) <{{{><}}}>	and (`aviones_historico_posicionamiento`.`Fecha` between `vrl`.`inicioReserva` and `vrl`.`finReserva`) <{{{><}}}>	and (`aviones_historico_posicionamiento`.`Alt`<=40) and (`aviones_historico_posicionamiento`.`Veloc` <100)) <{{{><}}}>	order by `aviones_historico_posicionamiento`.`Fecha` desc limit 1) AS `Aterrizaje`,<{{{><}}}>(select `aviones_historico_posicionamiento`.`Fecha` from `aviones_historico_posicionamiento` <{{{><}}}>	where ((`aviones_historico_posicionamiento`.`Matricula` = convert(`vrl`.`matricula` using utf8mb4)) <{{{><}}}>	and (`aviones_historico_posicionamiento`.`Fecha` between `vrl`.`inicioReserva` and `vrl`.`finReserva`) <{{{><}}}>	and (`aviones_historico_posicionamiento`.`Ignic` = 1)) order by `aviones_historico_posicionamiento`.`Fecha` limit 1) AS `Arranque`,<{{{><}}}>(select `aviones_historico_posicionamiento`.`Fecha` from `aviones_historico_posicionamiento` <{{{><}}}>	where ((`aviones_historico_posicionamiento`.`Matricula` = convert(`vrl`.`matricula` using utf8mb4)) <{{{><}}}>	and (`aviones_historico_posicionamiento`.`Fecha` between `vrl`.`inicioReserva` and `vrl`.`finReserva`) <{{{><}}}>	and (`aviones_historico_posicionamiento`.`Ignic` = 1)) order by `aviones_historico_posicionamiento`.`Fecha` desc limit 1) AS `Apagado` <{{{><}}}>from <{{{><}}}>`vista_reservas_lecciones` `vrl` <{{{><}}}>where (`vrl`.`matricula` is not null) <{{{><}}}>group by `vrl`.`idReserva`)
Servers\aerodynamics\QueryHistory\45<|||>1<|||>2020-12-13 22:04:27|admin_aerodynamics|239844|(select <{{{><}}}>`vrl`.`idReserva` AS `LESSONS`,<{{{><}}}>date_format(`vrl`.`diaReserva`,'%d-%m-%Y') AS `DATE`,<{{{><}}}>`vrl`.`inicioReserva` AS `inicioReserva`,<{{{><}}}>`vrl`.`finReserva` AS `finReserva`,<{{{><}}}>`vrl`.`matricula` AS `AIRCRAFT`,<{{{><}}}>(select `aviones_historico_posicionamiento`.`Fecha` from `aviones_historico_posicionamiento` <{{{><}}}>		where ((`aviones_historico_posicionamiento`.`Matricula` = convert(`vrl`.`matricula` using utf8mb4)) <{{{><}}}>		and (`aviones_historico_posicionamiento`.`Fecha` between `vrl`.`inicioReserva` and `vrl`.`finReserva`) <{{{><}}}>		and (`aviones_historico_posicionamiento`.`Alt` >= 40) and (`aviones_historico_posicionamiento`.`Veloc` >= 90)) <{{{><}}}>order by `aviones_historico_posicionamiento`.`Fecha` asc limit 1) AS `Despegue`,<{{{><}}}>(select `aviones_historico_posicionamiento`.`Fecha` from `aviones_historico_posicionamiento` <{{{><}}}>	where ((`aviones_historico_posicionamiento`.`Matricula` = convert(`vrl`.`matricula` using utf8mb4)) <{{{><}}}>	and (`aviones_historico_posicionamiento`.`Fecha` between `vrl`.`inicioReserva` and `vrl`.`finReserva`) <{{{><}}}>	and (`aviones_historico_posicionamiento`.`Alt`<=40) and (`aviones_historico_posicionamiento`.`Veloc` <150)) <{{{><}}}>	order by `aviones_historico_posicionamiento`.`Fecha` desc limit 1) AS `Aterrizaje`,<{{{><}}}>(select `aviones_historico_posicionamiento`.`Fecha` from `aviones_historico_posicionamiento` <{{{><}}}>	where ((`aviones_historico_posicionamiento`.`Matricula` = convert(`vrl`.`matricula` using utf8mb4)) <{{{><}}}>	and (`aviones_historico_posicionamiento`.`Fecha` between `vrl`.`inicioReserva` and `vrl`.`finReserva`) <{{{><}}}>	and (`aviones_historico_posicionamiento`.`Ignic` = 1)) order by `aviones_historico_posicionamiento`.`Fecha` limit 1) AS `Arranque`,<{{{><}}}>(select `aviones_historico_posicionamiento`.`Fecha` from `aviones_historico_posicionamiento` <{{{><}}}>	where ((`aviones_historico_posicionamiento`.`Matricula` = convert(`vrl`.`matricula` using utf8mb4)) <{{{><}}}>	and (`aviones_historico_posicionamiento`.`Fecha` between `vrl`.`inicioReserva` and `vrl`.`finReserva`) <{{{><}}}>	and (`aviones_historico_posicionamiento`.`Ignic` = 1)) order by `aviones_historico_posicionamiento`.`Fecha` desc limit 1) AS `Apagado` <{{{><}}}>from <{{{><}}}>`vista_reservas_lecciones` `vrl` <{{{><}}}>where (`vrl`.`matricula` is not null) <{{{><}}}>group by `vrl`.`idReserva`)
Servers\aerodynamics\QueryHistory\47<|||>1<|||>2020-12-13 22:21:27|admin_aerodynamics|78|SELECT * FROM aviones_historico_posicionamiento WHERE date_format(Fecha,'%d-%m-%Y') ='12-12-2020' AND Matricula='EC-GZF'
Servers\aerodynamics\QueryHistory\46<|||>1<|||>2020-12-13 22:21:40|admin_aerodynamics|1859|SELECT * FROM aviones_historico_posicionamiento WHERE date_format(Fecha,'%d-%m-%Y') ='13-12-2020' AND Matricula='EC-GZF'
Servers\aerodynamics\QueryHistory\48<|||>1<|||>2020-12-13 22:23:01|admin_aerodynamics|1672|SELECT * FROM aviones_historico_posicionamiento WHERE date_format(Fecha,'%d-%m-%Y') ='13-12-2020' AND Matricula='EC-GZF' AND Ignic=1
Servers\aerodynamics\QueryHistory\49<|||>1<|||>2020-12-13 23:09:40|admin_aerodynamics|239250|SELECT *,if(Apagado is not null and Arranque is not null,TIMEDIFF(Apagado, Arranque),null) as block,if(Aterrizaje is not null and Despegue is not null,TIMEDIFF(Aterrizaje, Despegue),null) as airborne FROM vista_reservas_historico_posicionamiento WHERE LESSONS not in (SELECT idreserva FROM personas_vuelos_automatizacion) AND ((1607896766- time_to_sec(DATE_FORMAT(finReserva, "%H:%i:%s")))<=0 or "13-12-2020">date_format(DATE,"%d-%m-%Y")) and Despegue is not null and Aterrizaje is not null
Servers\aerodynamics\QueryHistory\50<|||>1<|||>2020-12-13 23:15:53|admin_aerodynamics|237859|SELECT *,<{{{><}}}>if(Apagado is not null and Arranque is not NULL,<{{{><}}}>TIMEDIFF(Apagado, Arranque),null) as BLOCK,<{{{><}}}>if(Aterrizaje is not null and Despegue is not null,TIMEDIFF(Aterrizaje, Despegue),null) as airborne <{{{><}}}>FROM vista_reservas_historico_posicionamiento <{{{><}}}>WHERE <{{{><}}}>LESSONS not in (SELECT idreserva FROM personas_vuelos_automatizacion) <{{{><}}}>AND (((1607896766)- time_to_sec(DATE_FORMAT(finReserva, "%H:%i:%s")))<=0 or DATE<"13-12-2020") <{{{><}}}>and Despegue is not NULL <{{{><}}}>and Aterrizaje is not null
Servers\aerodynamics\QueryHistory\51<|||>1<|||>2020-12-14 15:50:35|admin_aerodynamics|2016|SELECT * FROM aviones_historico_posicionamiento WHERE date_format(Fecha,'%d-%m-%Y') ='14-12-2020' AND Matricula='EC_KTO'
Servers\aerodynamics\QueryHistory\52<|||>1<|||>2020-12-14 15:51:16|admin_aerodynamics|8015|SELECT * FROM aviones_historico_posicionamiento WHERE date_format(Fecha,'%d-%m-%Y') ='14-12-2020' AND Matricula='EC-KTO'
Servers\aerodynamics\QueryHistory\53<|||>1<|||>2020-12-14 16:00:38|admin_aerodynamics|8485|SELECT rv.idReserva as reserva,a.registracion AS Matricula FROM reserva_vuelos rv<{{{><}}}>LEFT JOIN aviones a ON rv.idAvion=a.idAvion<{{{><}}}>GROUP BY rv.idReserva;<{{{><}}}><{{{><}}}>SELECT * FROM aviones_historico_posicionamiento WHERE date_format(Fecha,'%d-%m-%Y') ='14-12-2020' AND Matricula='EC-KTO';
Servers\aerodynamics\QueryHistory\54<|||>1<|||>2020-12-14 16:02:34|admin_aerodynamics|11767|SELECT <{{{><}}}>rv.idReserva as reserva,<{{{><}}}>rv.diaReserva as dia,<{{{><}}}>rv.horaInicio as inicio,<{{{><}}}>rv.horaFin as fin,<{{{><}}}>a.registracion AS Matricula <{{{><}}}>FROM reserva_vuelos rv<{{{><}}}>LEFT JOIN aviones a ON rv.idAvion=a.idAvion<{{{><}}}>GROUP BY rv.idReserva;<{{{><}}}><{{{><}}}>SELECT * FROM aviones_historico_posicionamiento WHERE date_format(Fecha,'%d-%m-%Y') ='14-12-2020' AND Matricula='EC-KTO';
Servers\aerodynamics\QueryHistory\55<|||>1<|||>2020-12-14 16:11:47|admin_aerodynamics|40750|SELECT <{{{><}}}>rv.idReserva as reserva,<{{{><}}}>rv.diaReserva as dia,<{{{><}}}>rv.horaInicio as inicio,<{{{><}}}>rv.horaFin as fin,<{{{><}}}>a.registracion AS Matricula <{{{><}}}>FROM reserva_vuelos rv<{{{><}}}>LEFT JOIN aviones a ON rv.idAvion=a.idAvion<{{{><}}}>LEFT JOIN aviones_historico_posicionamiento ahp ON <{{{><}}}>(ahp.Matricula=a.registracion AND ahp.Fecha BETWEEN DATE_FORMAT(CONCAT(rv.diaReserva," ",rv.horaFin),"%Y-%m-%d %H:%i:s") AND DATE_FORMAT(CONCAT(rv.diaReserva," ",rv.horaInicio),"%Y-%m-%d %H:%i:s"))<{{{><}}}>GROUP BY rv.idReserva;<{{{><}}}><{{{><}}}>SELECT * FROM aviones_historico_posicionamiento WHERE date_format(Fecha,'%d-%m-%Y') ='14-12-2020' AND Matricula='EC-KTO';
Servers\aerodynamics\QueryHistory\57<|||>1<|||>2020-12-14 16:13:47|admin_aerodynamics|51219|SELECT <{{{><}}}>rv.idReserva as reserva,<{{{><}}}>rv.diaReserva as dia,<{{{><}}}>rv.horaInicio as inicio,<{{{><}}}>rv.horaFin as fin,<{{{><}}}>a.registracion AS Matricula,<{{{><}}}>ahp.*<{{{><}}}>FROM reserva_vuelos rv<{{{><}}}>LEFT JOIN aviones a ON rv.idAvion=a.idAvion<{{{><}}}>LEFT JOIN aviones_historico_posicionamiento ahp ON <{{{><}}}>(ahp.Matricula=a.registracion AND ahp.Fecha BETWEEN DATE_FORMAT(CONCAT(rv.diaReserva," ",rv.horaFin),"%Y-%m-%d %H:%i:s") AND DATE_FORMAT(CONCAT(rv.diaReserva," ",rv.horaInicio),"%Y-%m-%d %H:%i:s"))<{{{><}}}>GROUP BY rv.idReserva;<{{{><}}}><{{{><}}}>SELECT * FROM aviones_historico_posicionamiento WHERE date_format(Fecha,'%d-%m-%Y') ='14-12-2020' AND Matricula='EC-KTO';
Servers\aerodynamics\QueryHistory\58<|||>1<|||>2020-12-14 16:15:34|admin_aerodynamics|36186|SELECT <{{{><}}}>rv.idReserva as reserva,<{{{><}}}>rv.diaReserva as dia,<{{{><}}}>rv.horaInicio as inicio,<{{{><}}}>rv.horaFin as fin,<{{{><}}}>a.registracion AS Matricula,<{{{><}}}>ahp.*<{{{><}}}>FROM reserva_vuelos rv<{{{><}}}>LEFT JOIN aviones a ON rv.idAvion=a.idAvion<{{{><}}}>LEFT JOIN aviones_historico_posicionamiento ahp ON <{{{><}}}>(ahp.Matricula=a.registracion)<{{{><}}}>GROUP BY rv.idReserva;<{{{><}}}><{{{><}}}>SELECT * FROM aviones_historico_posicionamiento WHERE date_format(Fecha,'%d-%m-%Y') ='14-12-2020' AND Matricula='EC-KTO';
Servers\aerodynamics\QueryHistory\59<|||>1<|||>2020-12-14 16:18:35|admin_aerodynamics|148563|SELECT <{{{><}}}>rv.idReserva as reserva,<{{{><}}}>rv.diaReserva as dia,<{{{><}}}>rv.horaInicio as inicio,<{{{><}}}>rv.horaFin as fin,<{{{><}}}>a.registracion AS Matricula,<{{{><}}}>ahp.*<{{{><}}}>FROM reserva_vuelos rv<{{{><}}}>LEFT JOIN aviones a ON rv.idAvion=a.idAvion<{{{><}}}>LEFT JOIN aviones_historico_posicionamiento ahp ON (ahp.Matricula=a.registracion)<{{{><}}}>WHERE ahp.Fecha BETWEEN DATE_FORMAT(CONCAT(rv.diaReserva," ",rv.horaFin),"%Y-%m-%d %H:%i:s") AND DATE_FORMAT(CONCAT(rv.diaReserva," ",rv.horaInicio),"%Y-%m-%d %H:%i:s");<{{{><}}}><{{{><}}}>SELECT * FROM aviones_historico_posicionamiento WHERE date_format(Fecha,'%d-%m-%Y') ='14-12-2020' AND Matricula='EC-KTO';
Servers\aerodynamics\QueryHistory\60<|||>1<|||>2020-12-14 16:25:54|admin_aerodynamics|81125|/*SELECT <{{{><}}}>rv.idReserva as reserva,<{{{><}}}>rv.diaReserva as dia,<{{{><}}}>rv.horaInicio as inicio,<{{{><}}}>rv.horaFin as fin,<{{{><}}}>a.registracion AS Matricula,<{{{><}}}>ahp.*<{{{><}}}>FROM reserva_vuelos rv<{{{><}}}>LEFT JOIN aviones a ON rv.idAvion=a.idAvion<{{{><}}}>LEFT JOIN aviones_historico_posicionamiento ahp ON (ahp.Matricula=a.registracion)<{{{><}}}>WHERE ahp.Fecha BETWEEN DATE_FORMAT(CONCAT(rv.diaReserva," ",rv.horaFin),"%Y-%m-%d %H:%i:s") AND DATE_FORMAT(CONCAT(rv.diaReserva," ",rv.horaInicio),"%Y-%m-%d %H:%i:s");<{{{><}}}>*/<{{{><}}}><{{{><}}}>SELECT rv.idReserva as reserva,<{{{><}}}>rv.diaReserva as dia,<{{{><}}}>rv.horaInicio as inicio,<{{{><}}}>rv.horaFin as fin,<{{{><}}}>a.registracion AS Matricula,<{{{><}}}>ahp.*<{{{><}}}>FROM aviones_historico_posicionamiento ahp<{{{><}}}>LEFT JOIN aviones a ON ahp.Matricula=a.registracion<{{{><}}}>LEFT JOIN reserva_vuelos rv ON rv.idAvion=a.idAvion<{{{><}}}>ORDER BY ahp.id DESC LIMIT 3000;<{{{><}}}><{{{><}}}><{{{><}}}>SELECT * FROM aviones_historico_posicionamiento WHERE date_format(Fecha,'%d-%m-%Y') ='14-12-2020' AND Matricula='EC-KTO';
Servers\aerodynamics\QueryHistory\61<|||>1<|||>2020-12-14 16:30:37|admin_aerodynamics|42156|/*SELECT <{{{><}}}>rv.idReserva as reserva,<{{{><}}}>rv.diaReserva as dia,<{{{><}}}>rv.horaInicio as inicio,<{{{><}}}>rv.horaFin as fin,<{{{><}}}>a.registracion AS Matricula,<{{{><}}}>ahp.*<{{{><}}}>FROM reserva_vuelos rv<{{{><}}}>LEFT JOIN aviones a ON rv.idAvion=a.idAvion<{{{><}}}>LEFT JOIN aviones_historico_posicionamiento ahp ON (ahp.Matricula=a.registracion)<{{{><}}}>WHERE ahp.Fecha BETWEEN DATE_FORMAT(CONCAT(rv.diaReserva," ",rv.horaFin),"%Y-%m-%d %H:%i:s") AND DATE_FORMAT(CONCAT(rv.diaReserva," ",rv.horaInicio),"%Y-%m-%d %H:%i:s");<{{{><}}}>*/<{{{><}}}><{{{><}}}>SELECT rv.idReserva as reserva,<{{{><}}}>rv.diaReserva as dia,<{{{><}}}>rv.horaInicio as inicio,<{{{><}}}>rv.horaFin as fin,<{{{><}}}>a.registracion AS Matricula,<{{{><}}}>ahp.*<{{{><}}}>FROM aviones_historico_posicionamiento ahp<{{{><}}}>LEFT JOIN aviones a ON ahp.Matricula=a.registracion<{{{><}}}>LEFT JOIN reserva_vuelos rv ON (rv.idAvion=a.idAvion AND TIME_TO_SEC(ahp.Fecha)<=TIME_TO_SEC(CONCAT(rv.diaReserva,'',rv.horaFin)) AND TIME_TO_SEC(ahp.Fecha)>=TIME_TO_SEC(CONCAT(rv.diaReserva,'',rv.horaInicio))) <{{{><}}}>ORDER BY ahp.id DESC LIMIT 3000;<{{{><}}}><{{{><}}}><{{{><}}}>SELECT * FROM aviones_historico_posicionamiento WHERE date_format(Fecha,'%d-%m-%Y') ='14-12-2020' AND Matricula='EC-KTO';
Servers\aerodynamics\QueryHistory\62<|||>1<|||>2020-12-14 16:39:05|admin_aerodynamics|30125|/*SELECT <{{{><}}}>rv.idReserva as reserva,<{{{><}}}>rv.diaReserva as dia,<{{{><}}}>rv.horaInicio as inicio,<{{{><}}}>rv.horaFin as fin,<{{{><}}}>a.registracion AS Matricula,<{{{><}}}>ahp.*<{{{><}}}>FROM reserva_vuelos rv<{{{><}}}>LEFT JOIN aviones a ON rv.idAvion=a.idAvion<{{{><}}}>LEFT JOIN aviones_historico_posicionamiento ahp ON (ahp.Matricula=a.registracion)<{{{><}}}>WHERE ahp.Fecha BETWEEN DATE_FORMAT(CONCAT(rv.diaReserva," ",rv.horaFin),"%Y-%m-%d %H:%i:s") AND DATE_FORMAT(CONCAT(rv.diaReserva," ",rv.horaInicio),"%Y-%m-%d %H:%i:s");<{{{><}}}>*/<{{{><}}}><{{{><}}}>SELECT <{{{><}}}>a.idAvion AS idAvion,<{{{><}}}>a.registracion AS Matricula,<{{{><}}}><{{{><}}}>ahp.*<{{{><}}}>FROM aviones_historico_posicionamiento ahp<{{{><}}}>LEFT JOIN aviones a ON ahp.Matricula=a.registracion<{{{><}}}>ORDER BY ahp.id DESC LIMIT 3000;<{{{><}}}><{{{><}}}><{{{><}}}>SELECT * FROM aviones_historico_posicionamiento WHERE date_format(Fecha,'%d-%m-%Y') ='14-12-2020' AND Matricula='EC-KTO';
Servers\aerodynamics\QueryHistory\63<|||>1<|||>2020-12-14 16:42:36|admin_aerodynamics|66234|/*SELECT <{{{><}}}>rv.idReserva as reserva,<{{{><}}}>rv.diaReserva as dia,<{{{><}}}>rv.horaInicio as inicio,<{{{><}}}>rv.horaFin as fin,<{{{><}}}>a.registracion AS Matricula,<{{{><}}}>ahp.*<{{{><}}}>FROM reserva_vuelos rv<{{{><}}}>LEFT JOIN aviones a ON rv.idAvion=a.idAvion<{{{><}}}>LEFT JOIN aviones_historico_posicionamiento ahp ON (ahp.Matricula=a.registracion)<{{{><}}}>WHERE ahp.Fecha BETWEEN DATE_FORMAT(CONCAT(rv.diaReserva," ",rv.horaFin),"%Y-%m-%d %H:%i:s") AND DATE_FORMAT(CONCAT(rv.diaReserva," ",rv.horaInicio),"%Y-%m-%d %H:%i:s");<{{{><}}}>*/<{{{><}}}><{{{><}}}>SELECT <{{{><}}}>a.idAvion AS idAvion,<{{{><}}}>a.registracion AS Matricula,<{{{><}}}>IFNULL((SELECT idReserva FROM reserva_vuelos rv WHERE rv.idAvion=a.idAvion AND TIME_TO_SEC(ahp.Fecha)<=TIME_TO_SEC(CONCAT(rv.diaReserva,'',rv.horaFin)) AND TIME_TO_SEC(ahp.Fecha)>=TIME_TO_SEC(CONCAT(rv.diaReserva,'',rv.horaInicio))),''),<{{{><}}}>ahp.*<{{{><}}}>FROM aviones_historico_posicionamiento ahp<{{{><}}}>LEFT JOIN aviones a ON ahp.Matricula=a.registracion<{{{><}}}>ORDER BY ahp.id DESC LIMIT 3000;<{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}>SELECT * FROM aviones_historico_posicionamiento WHERE date_format(Fecha,'%d-%m-%Y') ='14-12-2020' AND Matricula='EC-KTO';
Servers\aerodynamics\QueryHistory\64<|||>1<|||>2020-12-14 16:45:42|admin_aerodynamics|66844|/*SELECT <{{{><}}}>rv.idReserva as reserva,<{{{><}}}>rv.diaReserva as dia,<{{{><}}}>rv.horaInicio as inicio,<{{{><}}}>rv.horaFin as fin,<{{{><}}}>a.registracion AS Matricula,<{{{><}}}>ahp.*<{{{><}}}>FROM reserva_vuelos rv<{{{><}}}>LEFT JOIN aviones a ON rv.idAvion=a.idAvion<{{{><}}}>LEFT JOIN aviones_historico_posicionamiento ahp ON (ahp.Matricula=a.registracion)<{{{><}}}>WHERE ahp.Fecha BETWEEN DATE_FORMAT(CONCAT(rv.diaReserva," ",rv.horaFin),"%Y-%m-%d %H:%i:s") AND DATE_FORMAT(CONCAT(rv.diaReserva," ",rv.horaInicio),"%Y-%m-%d %H:%i:s");<{{{><}}}>*/<{{{><}}}><{{{><}}}>SELECT <{{{><}}}>a.idAvion AS idAvion,<{{{><}}}>a.registracion AS Matricula,<{{{><}}}>IFNULL((SELECT idReserva FROM reserva_vuelos rv WHERE rv.idAvion=a.idAvion AND TIME_TO_SEC(ahp.Fecha)<=TIME_TO_SEC(date_format(CONCAT(rv.diaReserva,'',rv.horaFin),'%Y-%m-$d %H:%i:%s')) AND TIME_TO_SEC(ahp.Fecha)>=TIME_TO_SEC(date_format(CONCAT(rv.diaReserva,'',rv.horaInicio),'%Y-%m-$d %H:%i:%s'))),'') AS reserva,<{{{><}}}>ahp.*<{{{><}}}>FROM aviones_historico_posicionamiento ahp<{{{><}}}>LEFT JOIN aviones a ON ahp.Matricula=a.registracion<{{{><}}}>ORDER BY ahp.id DESC LIMIT 3000;<{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}>SELECT * FROM aviones_historico_posicionamiento WHERE date_format(Fecha,'%d-%m-%Y') ='14-12-2020' AND Matricula='EC-KTO';
Servers\aerodynamics\QueryHistory\65<|||>1<|||>2020-12-14 16:48:30|admin_aerodynamics|73281|/*SELECT <{{{><}}}>rv.idReserva as reserva,<{{{><}}}>rv.diaReserva as dia,<{{{><}}}>rv.horaInicio as inicio,<{{{><}}}>rv.horaFin as fin,<{{{><}}}>a.registracion AS Matricula,<{{{><}}}>ahp.*<{{{><}}}>FROM reserva_vuelos rv<{{{><}}}>LEFT JOIN aviones a ON rv.idAvion=a.idAvion<{{{><}}}>LEFT JOIN aviones_historico_posicionamiento ahp ON (ahp.Matricula=a.registracion)<{{{><}}}>WHERE ahp.Fecha BETWEEN DATE_FORMAT(CONCAT(rv.diaReserva," ",rv.horaFin),"%Y-%m-%d %H:%i:s") AND DATE_FORMAT(CONCAT(rv.diaReserva," ",rv.horaInicio),"%Y-%m-%d %H:%i:s");<{{{><}}}>*/<{{{><}}}><{{{><}}}>SELECT <{{{><}}}>a.idAvion AS idAvion,<{{{><}}}>a.registracion AS Matricula,<{{{><}}}>IFNULL((SELECT idReserva FROM reserva_vuelos rv WHERE rv.idAvion=a.idAvion AND ahp.Fecha<=date_format(CONCAT(rv.diaReserva,'',rv.horaFin),'%Y-%m-$d %H:%i:%s') AND ahp.Fecha>=date_format(CONCAT(rv.diaReserva,'',rv.horaInicio),'%Y-%m-$d %H:%i:%s')),'') AS reserva,<{{{><}}}>ahp.*<{{{><}}}>FROM aviones_historico_posicionamiento ahp<{{{><}}}>LEFT JOIN aviones a ON ahp.Matricula=a.registracion<{{{><}}}>ORDER BY ahp.id DESC LIMIT 3000;<{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}>SELECT * FROM aviones_historico_posicionamiento WHERE date_format(Fecha,'%d-%m-%Y') ='14-12-2020' AND Matricula='EC-KTO';
Servers\aerodynamics\QueryHistory\66<|||>1<|||>2020-12-14 16:55:46|admin_aerodynamics|70250|/*SELECT <{{{><}}}>rv.idReserva as reserva,<{{{><}}}>rv.diaReserva as dia,<{{{><}}}>rv.horaInicio as inicio,<{{{><}}}>rv.horaFin as fin,<{{{><}}}>a.registracion AS Matricula,<{{{><}}}>ahp.*<{{{><}}}>FROM reserva_vuelos rv<{{{><}}}>LEFT JOIN aviones a ON rv.idAvion=a.idAvion<{{{><}}}>LEFT JOIN aviones_historico_posicionamiento ahp ON (ahp.Matricula=a.registracion)<{{{><}}}>WHERE ahp.Fecha BETWEEN DATE_FORMAT(CONCAT(rv.diaReserva," ",rv.horaFin),"%Y-%m-%d %H:%i:s") AND DATE_FORMAT(CONCAT(rv.diaReserva," ",rv.horaInicio),"%Y-%m-%d %H:%i:s");<{{{><}}}>*/<{{{><}}}><{{{><}}}>SELECT <{{{><}}}>a.idAvion AS idAvion,<{{{><}}}>a.registracion AS Matricula,<{{{><}}}>IFNULL((SELECT idReserva FROM reserva_vuelos rv WHERE rv.idAvion=a.idAvion AND ahp.Fecha<=CONCAT(rv.diaReserva,'',rv.horaFin) AND ahp.Fecha>=CONCAT(rv.diaReserva,'',rv.horaInicio)),'') AS reserva,<{{{><}}}>ahp.*<{{{><}}}>FROM aviones_historico_posicionamiento ahp<{{{><}}}>LEFT JOIN aviones a ON ahp.Matricula=a.registracion<{{{><}}}>ORDER BY ahp.id DESC LIMIT 3000;<{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}>SELECT * FROM aviones_historico_posicionamiento WHERE date_format(Fecha,'%d-%m-%Y') ='14-12-2020' AND Matricula='EC-KTO';
Servers\aerodynamics\QueryHistory\67<|||>1<|||>2020-12-14 16:57:23|admin_aerodynamics|61828|/*SELECT <{{{><}}}>rv.idReserva as reserva,<{{{><}}}>rv.diaReserva as dia,<{{{><}}}>rv.horaInicio as inicio,<{{{><}}}>rv.horaFin as fin,<{{{><}}}>a.registracion AS Matricula,<{{{><}}}>ahp.*<{{{><}}}>FROM reserva_vuelos rv<{{{><}}}>LEFT JOIN aviones a ON rv.idAvion=a.idAvion<{{{><}}}>LEFT JOIN aviones_historico_posicionamiento ahp ON (ahp.Matricula=a.registracion)<{{{><}}}>WHERE ahp.Fecha BETWEEN DATE_FORMAT(CONCAT(rv.diaReserva," ",rv.horaFin),"%Y-%m-%d %H:%i:s") AND DATE_FORMAT(CONCAT(rv.diaReserva," ",rv.horaInicio),"%Y-%m-%d %H:%i:s");<{{{><}}}>*/<{{{><}}}><{{{><}}}>SELECT <{{{><}}}>a.idAvion AS idAvion,<{{{><}}}>a.registracion AS Matricula,<{{{><}}}>IFNULL((SELECT idReserva FROM reserva_vuelos rv WHERE rv.idAvion=a.idAvion AND (ahp.Fecha BETWEEN CONCAT(rv.diaReserva,'',rv.horaFin) AND CONCAT(rv.diaReserva,'',rv.horaInicio))),'') AS reserva,<{{{><}}}>ahp.*<{{{><}}}>FROM aviones_historico_posicionamiento ahp<{{{><}}}>LEFT JOIN aviones a ON ahp.Matricula=a.registracion<{{{><}}}>ORDER BY ahp.id DESC LIMIT 3000;<{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}>SELECT * FROM aviones_historico_posicionamiento WHERE date_format(Fecha,'%d-%m-%Y') ='14-12-2020' AND Matricula='EC-KTO';
Servers\aerodynamics\QueryHistory\68<|||>1<|||>2020-12-14 16:59:10|admin_aerodynamics|62218|/*SELECT <{{{><}}}>rv.idReserva as reserva,<{{{><}}}>rv.diaReserva as dia,<{{{><}}}>rv.horaInicio as inicio,<{{{><}}}>rv.horaFin as fin,<{{{><}}}>a.registracion AS Matricula,<{{{><}}}>ahp.*<{{{><}}}>FROM reserva_vuelos rv<{{{><}}}>LEFT JOIN aviones a ON rv.idAvion=a.idAvion<{{{><}}}>LEFT JOIN aviones_historico_posicionamiento ahp ON (ahp.Matricula=a.registracion)<{{{><}}}>WHERE ahp.Fecha BETWEEN DATE_FORMAT(CONCAT(rv.diaReserva," ",rv.horaFin),"%Y-%m-%d %H:%i:s") AND DATE_FORMAT(CONCAT(rv.diaReserva," ",rv.horaInicio),"%Y-%m-%d %H:%i:s");<{{{><}}}>*/<{{{><}}}><{{{><}}}>SELECT <{{{><}}}>a.idAvion AS idAvion,<{{{><}}}>a.registracion AS Matricula,<{{{><}}}>(SELECT idReserva FROM reserva_vuelos rv WHERE rv.idAvion=a.idAvion AND (ahp.Fecha BETWEEN CONCAT(rv.diaReserva,'',rv.horaFin) AND CONCAT(rv.diaReserva,'',rv.horaInicio))) AS reserva,<{{{><}}}>ahp.*<{{{><}}}>FROM aviones_historico_posicionamiento ahp<{{{><}}}>LEFT JOIN aviones a ON ahp.Matricula=a.registracion<{{{><}}}>ORDER BY ahp.id DESC LIMIT 3000;<{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}>SELECT * FROM aviones_historico_posicionamiento WHERE date_format(Fecha,'%d-%m-%Y') ='14-12-2020' AND Matricula='EC-KTO';
Servers\aerodynamics\QueryHistory\69<|||>1<|||>2020-12-14 17:00:58|admin_aerodynamics|60891|/*SELECT <{{{><}}}>rv.idReserva as reserva,<{{{><}}}>rv.diaReserva as dia,<{{{><}}}>rv.horaInicio as inicio,<{{{><}}}>rv.horaFin as fin,<{{{><}}}>a.registracion AS Matricula,<{{{><}}}>ahp.*<{{{><}}}>FROM reserva_vuelos rv<{{{><}}}>LEFT JOIN aviones a ON rv.idAvion=a.idAvion<{{{><}}}>LEFT JOIN aviones_historico_posicionamiento ahp ON (ahp.Matricula=a.registracion)<{{{><}}}>WHERE ahp.Fecha BETWEEN DATE_FORMAT(CONCAT(rv.diaReserva," ",rv.horaFin),"%Y-%m-%d %H:%i:s") AND DATE_FORMAT(CONCAT(rv.diaReserva," ",rv.horaInicio),"%Y-%m-%d %H:%i:s");<{{{><}}}>*/<{{{><}}}><{{{><}}}>SELECT <{{{><}}}>a.idAvion AS idAvion,<{{{><}}}>a.registracion AS Matricula,<{{{><}}}>(SELECT idReserva FROM reserva_vuelos rv WHERE rv.idAvion=a.idAvion AND (ahp.Fecha BETWEEN CONCAT(rv.diaReserva,'',rv.horaFin) AND CONCAT(rv.diaReserva,'',rv.horaInicio))) AS reserva,<{{{><}}}>ahp.*<{{{><}}}>FROM aviones_historico_posicionamiento ahp<{{{><}}}>LEFT JOIN aviones a ON ahp.Matricula=a.registracion;<{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}>SELECT * FROM aviones_historico_posicionamiento WHERE date_format(Fecha,'%d-%m-%Y') ='14-12-2020' AND Matricula='EC-KTO';
Servers\aerodynamics\QueryHistory\70<|||>1<|||>2020-12-14 17:06:46|admin_aerodynamics|55813|/*SELECT <{{{><}}}>rv.idReserva as reserva,<{{{><}}}>rv.diaReserva as dia,<{{{><}}}>rv.horaInicio as inicio,<{{{><}}}>rv.horaFin as fin,<{{{><}}}>a.registracion AS Matricula,<{{{><}}}>ahp.*<{{{><}}}>FROM reserva_vuelos rv<{{{><}}}>LEFT JOIN aviones a ON rv.idAvion=a.idAvion<{{{><}}}>LEFT JOIN aviones_historico_posicionamiento ahp ON (ahp.Matricula=a.registracion)<{{{><}}}>WHERE ahp.Fecha BETWEEN DATE_FORMAT(CONCAT(rv.diaReserva," ",rv.horaFin),"%Y-%m-%d %H:%i:s") AND DATE_FORMAT(CONCAT(rv.diaReserva," ",rv.horaInicio),"%Y-%m-%d %H:%i:s");<{{{><}}}>*/<{{{><}}}><{{{><}}}>SELECT <{{{><}}}>a.idAvion AS idAvion,<{{{><}}}>a.registracion AS Matricula,<{{{><}}}>(SELECT idReserva FROM reserva_vuelos rv WHERE rv.idAvion=a.idAvion AND (ahp.Fecha BETWEEN CONCAT(rv.diaReserva,' ',rv.horaFin) AND CONCAT(rv.diaReserva,' ',rv.horaInicio))) AS reserva,<{{{><}}}>ahp.*<{{{><}}}>FROM aviones_historico_posicionamiento ahp<{{{><}}}>LEFT JOIN aviones a ON ahp.Matricula=a.registracion;<{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}>SELECT * FROM aviones_historico_posicionamiento WHERE date_format(Fecha,'%d-%m-%Y') ='14-12-2020' AND Matricula='EC-KTO';
Servers\aerodynamics\QueryHistory\71<|||>1<|||>2020-12-14 17:11:37|admin_aerodynamics|55203|SELECT <{{{><}}}>a.idAvion AS idAvion,<{{{><}}}>a.registracion AS Matricula,<{{{><}}}>(SELECT idReserva FROM reserva_vuelos rv WHERE rv.idAvion=a.idAvion AND (ahp.Fecha BETWEEN CONCAT(rv.diaReserva,' ',rv.horaFin) AND CONCAT(rv.diaReserva,' ',rv.horaInicio))) AS reserva,<{{{><}}}>ahp.*<{{{><}}}>FROM aviones_historico_posicionamiento ahp<{{{><}}}>LEFT JOIN aviones a ON ahp.Matricula=a.registracion;
Servers\aerodynamics\QueryHistory\72<|||>1<|||>2020-12-14 17:17:05|admin_aerodynamics|54219|SELECT <{{{><}}}>a.idAvion AS idAvion,<{{{><}}}>a.registracion AS Matricula,<{{{><}}}>(SELECT count(idReserva) AS reserva<{{{><}}}>	FROM reserva_vuelos rv <{{{><}}}>	WHERE <{{{><}}}>	rv.idAvion=a.idAvion <{{{><}}}>	AND (ahp.Fecha BETWEEN CONCAT(rv.diaReserva,' ',rv.horaFin) AND CONCAT(rv.diaReserva,' ',rv.horaInicio))) AS reserva,<{{{><}}}>ahp.*<{{{><}}}>FROM aviones_historico_posicionamiento ahp<{{{><}}}>LEFT JOIN aviones a ON ahp.Matricula=a.registracion;
Servers\aerodynamics\QueryHistory\73<|||>1<|||>2020-12-14 17:19:08|admin_aerodynamics|54203|SELECT <{{{><}}}>a.idAvion AS idAvion,<{{{><}}}>a.registracion AS Matricula,<{{{><}}}>(SELECT sum(if(rv.idAvion=a.idAvion <{{{><}}}>	AND (ahp.Fecha BETWEEN CONCAT(rv.diaReserva,' ',rv.horaFin) AND CONCAT(rv.diaReserva,' ',rv.horaInicio)),1,0)) AS reserva<{{{><}}}>	FROM reserva_vuelos rv) AS reserva,<{{{><}}}>ahp.*<{{{><}}}>FROM aviones_historico_posicionamiento ahp<{{{><}}}>LEFT JOIN aviones a ON ahp.Matricula=a.registracion;
Servers\aerodynamics\QueryHistory\74<|||>1<|||>2020-12-14 17:20:43|admin_aerodynamics|27141|SELECT <{{{><}}}>a.idAvion AS idAvion,<{{{><}}}>a.registracion AS Matricula,<{{{><}}}>(SELECT sum(if(rv.idAvion=a.idAvion,1,0)) AS reserva<{{{><}}}>	FROM reserva_vuelos rv) AS reserva,<{{{><}}}>ahp.*<{{{><}}}>FROM aviones_historico_posicionamiento ahp<{{{><}}}>LEFT JOIN aviones a ON ahp.Matricula=a.registracion;
Servers\aerodynamics\QueryHistory\75<|||>1<|||>2020-12-14 17:23:42|admin_aerodynamics|46329|SELECT <{{{><}}}>a.idAvion AS idAvion,<{{{><}}}>a.registracion AS Matricula,<{{{><}}}>(SELECT sum(if(rv.idAvion=a.idAvion AND DATE_FORMAT(ahp.Fecha,'%Y-%m-%d')=rv.diaReserva,1,0)) AS reserva<{{{><}}}>	FROM reserva_vuelos rv) AS reserva,<{{{><}}}>ahp.*<{{{><}}}>FROM aviones_historico_posicionamiento ahp<{{{><}}}>LEFT JOIN aviones a ON ahp.Matricula=a.registracion;<{{{><}}}><{{{><}}}>/*AND (ahp.Fecha BETWEEN CONCAT(rv.diaReserva,' ',rv.horaFin) AND CONCAT(rv.diaReserva,' ',rv.horaInicio)*/
Servers\aerodynamics\QueryHistory\105<|||>1<|||>2020-12-14 17:26:51|admin_aerodynamics|61219|SELECT <{{{><}}}>a.idAvion AS idAvion,<{{{><}}}>a.registracion AS Matricula,<{{{><}}}>(SELECT sum(if(rv.idAvion=a.idAvion AND (DATE_FORMAT(ahp.Fecha,'%Y-%m-%d')=rv.diaReserva AND DATE_FORMAT(ahp.Fecha,'%H:%i-%s')>=rv.horaInicio AND DATE_FORMAT(ahp.Fecha,'%H:%i-%s')<=rv.horaFin),1,0)) AS reserva<{{{><}}}>	FROM reserva_vuelos rv) AS reserva,<{{{><}}}>ahp.*<{{{><}}}>FROM aviones_historico_posicionamiento ahp<{{{><}}}>LEFT JOIN aviones a ON ahp.Matricula=a.registracion;<{{{><}}}><{{{><}}}>/*AND (ahp.Fecha BETWEEN CONCAT(rv.diaReserva,' ',rv.horaFin) AND CONCAT(rv.diaReserva,' ',rv.horaInicio)*/
Servers\aerodynamics\QueryHistory\106<|||>1<|||>2020-12-14 17:28:50|admin_aerodynamics|51187|SELECT <{{{><}}}>a.idAvion AS idAvion,<{{{><}}}>a.registracion AS Matricula,<{{{><}}}>(SELECT sum(if(rv.idAvion=a.idAvion AND (DATE_FORMAT(ahp.Fecha,'%Y-%m-%d')=rv.diaReserva AND TIME_TO_SEC(DATE_FORMAT(ahp.Fecha,'%H:%i-%s'))>=TIME_TO_SEC(rv.horaInicio) AND TIME_TO_SEC(DATE_FORMAT(ahp.Fecha,'%H:%i-%s'))<=TIME_TO_SEC(rv.horaFin)),1,0)) AS reserva<{{{><}}}>	FROM reserva_vuelos rv) AS reserva,<{{{><}}}>ahp.*<{{{><}}}>FROM aviones_historico_posicionamiento ahp<{{{><}}}>LEFT JOIN aviones a ON ahp.Matricula=a.registracion;<{{{><}}}><{{{><}}}>/*AND (ahp.Fecha BETWEEN CONCAT(rv.diaReserva,' ',rv.horaFin) AND CONCAT(rv.diaReserva,' ',rv.horaInicio)*/
Servers\aerodynamics\QueryHistory\107<|||>1<|||>2020-12-14 17:33:35|admin_aerodynamics|37140|SELECT <{{{><}}}>a.idAvion AS idAvion,<{{{><}}}>a.registracion AS Matricula,<{{{><}}}>(SELECT if(rv.idAvion=a.idAvion AND (DATE_FORMAT(ahp.Fecha,'%Y-%m-%d')=rv.diaReserva AND TIME_TO_SEC(DATE_FORMAT(ahp.Fecha,'%H:%i-%s'))>=TIME_TO_SEC(rv.horaInicio) AND TIME_TO_SEC(DATE_FORMAT(ahp.Fecha,'%H:%i-%s'))<=TIME_TO_SEC(rv.horaFin)),rv.idReserva,'') AS reserva<{{{><}}}>	FROM reserva_vuelos rv LIMIT 1) AS reserva,<{{{><}}}>ahp.*<{{{><}}}>FROM aviones_historico_posicionamiento ahp<{{{><}}}>LEFT JOIN aviones a ON ahp.Matricula=a.registracion;<{{{><}}}><{{{><}}}>/*AND (ahp.Fecha BETWEEN CONCAT(rv.diaReserva,' ',rv.horaFin) AND CONCAT(rv.diaReserva,' ',rv.horaInicio)*/
Servers\aerodynamics\QueryHistory\108<|||>1<|||>2020-12-14 17:38:25|admin_aerodynamics|76281|SELECT <{{{><}}}>a.idAvion AS idAvion,<{{{><}}}>a.registracion AS Matricula,<{{{><}}}>(SELECT sum(if(rv.idAvion=a.idAvion AND (DATE_FORMAT(ahp.Fecha,'%Y-%m-%d')=rv.diaReserva AND TIME_TO_SEC(DATE_FORMAT(ahp.Fecha,'%H:%i-%s'))>=TIME_TO_SEC(rv.horaInicio) AND TIME_TO_SEC(DATE_FORMAT(ahp.Fecha,'%H:%i-%s'))<=TIME_TO_SEC(rv.horaFin)),rv.idReserva,'')) AS reserva<{{{><}}}>	FROM reserva_vuelos rv) AS reserva,<{{{><}}}>ahp.*<{{{><}}}>FROM aviones_historico_posicionamiento ahp<{{{><}}}>LEFT JOIN aviones a ON ahp.Matricula=a.registracion;<{{{><}}}><{{{><}}}>/*AND (ahp.Fecha BETWEEN CONCAT(rv.diaReserva,' ',rv.horaFin) AND CONCAT(rv.diaReserva,' ',rv.horaInicio)*/
Servers\aerodynamics\QueryHistory\109<|||>1<|||>2020-12-14 17:44:29|admin_aerodynamics|67250|SELECT <{{{><}}}>a.idAvion AS idAvion,<{{{><}}}>a.registracion AS Matricula,<{{{><}}}>(SELECT SUM(if(rv.idAvion=a.idAvion AND (DATE_FORMAT(ahp.Fecha,'%Y-%m-%d')=rv.diaReserva AND TIME_TO_SEC(DATE_FORMAT(ahp.Fecha,'%H:%i-%s'))>=TIME_TO_SEC(rv.horaInicio) AND TIME_TO_SEC(DATE_FORMAT(ahp.Fecha,'%H:%i-%s'))<=TIME_TO_SEC(rv.horaFin)),1,0)) AS reserva<{{{><}}}>	FROM reserva_vuelos rv) AS reserva,<{{{><}}}>ahp.*<{{{><}}}>FROM aviones_historico_posicionamiento ahp<{{{><}}}>LEFT JOIN aviones a ON ahp.Matricula=a.registracion;<{{{><}}}><{{{><}}}>/*AND (ahp.Fecha BETWEEN CONCAT(rv.diaReserva,' ',rv.horaFin) AND CONCAT(rv.diaReserva,' ',rv.horaInicio)*/
Servers\aerodynamics\QueryHistory\110<|||>1<|||>2020-12-14 17:49:02|admin_aerodynamics|27046|SELECT <{{{><}}}>a.idAvion AS idAvion,<{{{><}}}>a.registracion AS Matricula,<{{{><}}}>(SELECT (if(rv.idAvion=a.idAvion AND (DATE_FORMAT(ahp.Fecha,'%Y-%m-%d')=rv.diaReserva AND TIME_TO_SEC(DATE_FORMAT(ahp.Fecha,'%H:%i-%s'))>=TIME_TO_SEC(rv.horaInicio) AND TIME_TO_SEC(DATE_FORMAT(ahp.Fecha,'%H:%i-%s'))<=TIME_TO_SEC(rv.horaFin)),rv.idReserva,'')) AS reserva<{{{><}}}>	FROM reserva_vuelos rv GROUP BY rv.idReserva LIMIT 1) AS reserva,<{{{><}}}>ahp.*<{{{><}}}>FROM aviones_historico_posicionamiento ahp<{{{><}}}>LEFT JOIN aviones a ON ahp.Matricula=a.registracion;<{{{><}}}><{{{><}}}>/*AND (ahp.Fecha BETWEEN CONCAT(rv.diaReserva,' ',rv.horaFin) AND CONCAT(rv.diaReserva,' ',rv.horaInicio)*/
Servers\aerodynamics\QueryHistory\111<|||>1<|||>2020-12-14 17:55:30|admin_aerodynamics|19936|SELECT <{{{><}}}>a.idAvion AS idAvion,<{{{><}}}>a.registracion AS Matricula,<{{{><}}}>(SELECT (if(rv.idAvion=a.idAvion AND (DATE_FORMAT(ahp.Fecha,'%Y-%m-%d')=rv.diaReserva AND TIME_TO_SEC(DATE_FORMAT(ahp.Fecha,'%H:%i-%s'))>=TIME_TO_SEC(rv.horaInicio) AND TIME_TO_SEC(DATE_FORMAT(ahp.Fecha,'%H:%i-%s'))<=TIME_TO_SEC(rv.horaFin)),rv.idReserva,'')) AS reserva<{{{><}}}>	FROM reserva_vuelos rv ORDER BY idReserva DESC LIMIT 1) AS reserva,<{{{><}}}>ahp.*<{{{><}}}>FROM aviones_historico_posicionamiento ahp<{{{><}}}>LEFT JOIN aviones a ON ahp.Matricula=a.registracion;<{{{><}}}><{{{><}}}>/*AND (ahp.Fecha BETWEEN CONCAT(rv.diaReserva,' ',rv.horaFin) AND CONCAT(rv.diaReserva,' ',rv.horaInicio)*/
Servers\aerodynamics\QueryHistory\112<|||>1<|||>2020-12-14 18:00:49|admin_aerodynamics|63|CREATE VIEW vista_historico_posicionamiento_reservas_vuelo as<{{{><}}}><{{{><}}}>(SELECT <{{{><}}}>a.idAvion AS idAvion,<{{{><}}}>(SELECT (if(rv.idAvion=a.idAvion AND (DATE_FORMAT(ahp.Fecha,'%Y-%m-%d')=rv.diaReserva AND TIME_TO_SEC(DATE_FORMAT(ahp.Fecha,'%H:%i-%s'))>=TIME_TO_SEC(rv.horaInicio) AND TIME_TO_SEC(DATE_FORMAT(ahp.Fecha,'%H:%i-%s'))<=TIME_TO_SEC(rv.horaFin)),rv.idReserva,'')) AS reserva<{{{><}}}>	FROM reserva_vuelos rv ORDER BY idReserva DESC LIMIT 1) AS idReserva,<{{{><}}}>ahp.*<{{{><}}}>FROM aviones_historico_posicionamiento ahp<{{{><}}}>LEFT JOIN aviones a ON ahp.Matricula=a.registracion)
Servers\aerodynamics\QueryHistory\113<|||>1<|||>2020-12-14 18:04:12|admin_aerodynamics|38110|/*SELECT <{{{><}}}>rv.idReserva as reserva,<{{{><}}}>rv.diaReserva as dia,<{{{><}}}>rv.horaInicio as inicio,<{{{><}}}>rv.horaFin as fin,<{{{><}}}>a.registracion AS Matricula,<{{{><}}}>ahp.*<{{{><}}}>FROM reserva_vuelos rv<{{{><}}}>LEFT JOIN aviones a ON rv.idAvion=a.idAvion<{{{><}}}>LEFT JOIN aviones_historico_posicionamiento ahp ON (ahp.Matricula=a.registracion)<{{{><}}}>WHERE ahp.Fecha BETWEEN DATE_FORMAT(CONCAT(rv.diaReserva," ",rv.horaFin),"%Y-%m-%d %H:%i:s") AND DATE_FORMAT(CONCAT(rv.diaReserva," ",rv.horaInicio),"%Y-%m-%d %H:%i:s");<{{{><}}}>*/<{{{><}}}><{{{><}}}>SELECT DISTINCT(idReserva) FROM vista_historico_posicionamiento_reservas_vuelo WHERE idReserva IS NOT NULL;<{{{><}}}><{{{><}}}><{{{><}}}><{{{><}}}>SELECT * FROM aviones_historico_posicionamiento WHERE date_format(Fecha,'%d-%m-%Y') ='14-12-2020' AND Matricula='EC-KTO';
Servers\aerodynamics\QueryHistory\114<|||>1<|||>2020-12-14 22:23:13|admin_aerodynamics|8031|SELECT * FROM aviones_historico_posicionamiento ahp WHERE Ignic=1 AND (SELECT ahp2.Ignic FROM aviones_historico_posicionamiento ahp2 WHERE ahp2.id=(ahp.id-1))=0
Servers\aerodynamics\QueryHistory\115<|||>1<|||>2020-12-14 22:24:40|admin_aerodynamics|6046|SELECT * FROM aviones_historico_posicionamiento ahp WHERE Ignic=1 AND (SELECT ahp2.Ignic FROM aviones_historico_posicionamiento ahp2 WHERE ahp2.id=(ahp.id-1))=0 AND Veloc=0
Servers\aerodynamics\QueryHistory\116<|||>1<|||>2020-12-14 22:29:24|admin_aerodynamics|9141|/* PUESTAS EN MARCHA */<{{{><}}}>SELECT * FROM aviones_historico_posicionamiento ahp WHERE Ignic=1 AND (SELECT ahp2.Ignic FROM aviones_historico_posicionamiento ahp2 WHERE ahp2.id=(ahp.id-1))=0 AND Veloc=0;<{{{><}}}><{{{><}}}>/* PUESTAS EN APAGADOS */<{{{><}}}>SELECT * FROM aviones_historico_posicionamiento ahp WHERE Ignic=1 AND (SELECT ahp2.Ignic FROM aviones_historico_posicionamiento ahp2 WHERE ahp2.id=(ahp.id+1))=0 AND Veloc=0;
Servers\aerodynamics\QueryHistory\118<|||>1<|||>2020-12-14 23:01:41|admin_aerodynamics|703|/*PRUEBA DE BUSCAR VUELOS SIN RESERVA*/<{{{><}}}><{{{><}}}>SELECT <{{{><}}}>ahp.id AS idInicio,<{{{><}}}>idFin<{{{><}}}>FROM aviones_historico_posicionamiento ahp <{{{><}}}>INNER JOIN (SELECT MIN(id) AS idFin FROM aviones_historico_posicionamiento WHERE Ignic=0) ahp2 ON ahp2.idFin>ahp.id<{{{><}}}>WHERE <{{{><}}}>Ignic=1 AND <{{{><}}}>(SELECT ahp2.Ignic FROM aviones_historico_posicionamiento ahp2 WHERE ahp2.id=(ahp.id-1))=0 AND Veloc=0;<{{{><}}}>
Servers\aerodynamics\QueryHistory\117<|||>1<|||>2020-12-14 23:02:02|admin_aerodynamics|937|/*PRUEBA DE BUSCAR VUELOS SIN RESERVA*/<{{{><}}}><{{{><}}}>SELECT <{{{><}}}>ahp.id AS idInicio,<{{{><}}}>idFin<{{{><}}}>FROM aviones_historico_posicionamiento ahp <{{{><}}}>JOIN (SELECT MIN(id) AS idFin FROM aviones_historico_posicionamiento WHERE Ignic=0) ahp2 ON ahp2.idFin>ahp.id<{{{><}}}>WHERE <{{{><}}}>Ignic=1 AND <{{{><}}}>(SELECT ahp2.Ignic FROM aviones_historico_posicionamiento ahp2 WHERE ahp2.id=(ahp.id-1))=0 AND Veloc=0;<{{{><}}}>
Servers\aerodynamics\QueryHistory\120<|||>1<|||>2020-12-14 23:02:13|admin_aerodynamics|766|/*PRUEBA DE BUSCAR VUELOS SIN RESERVA*/<{{{><}}}><{{{><}}}>SELECT <{{{><}}}>ahp.id AS idInicio,<{{{><}}}>idFin<{{{><}}}>FROM aviones_historico_posicionamiento ahp <{{{><}}}>RIGHT JOIN (SELECT MIN(id) AS idFin FROM aviones_historico_posicionamiento WHERE Ignic=0) ahp2 ON ahp2.idFin>ahp.id<{{{><}}}>WHERE <{{{><}}}>Ignic=1 AND <{{{><}}}>(SELECT ahp2.Ignic FROM aviones_historico_posicionamiento ahp2 WHERE ahp2.id=(ahp.id-1))=0 AND Veloc=0;<{{{><}}}>
Servers\aerodynamics\QueryHistory\121<|||>1<|||>2020-12-14 23:05:46|admin_aerodynamics|4297|/*PRUEBA DE BUSCAR VUELOS SIN RESERVA*/<{{{><}}}><{{{><}}}>SELECT <{{{><}}}>ahp.id AS idInicio,<{{{><}}}>idFin<{{{><}}}>FROM aviones_historico_posicionamiento ahp <{{{><}}}>LEFT JOIN (SELECT MIN(id) AS idFin FROM aviones_historico_posicionamiento WHERE Ignic=0) ahp2 ON ahp2.idFin=ahp.id<{{{><}}}>WHERE <{{{><}}}>Ignic=1 AND <{{{><}}}>(SELECT ahp2.Ignic FROM aviones_historico_posicionamiento ahp2 WHERE ahp2.id=(ahp.id-1))=0 AND Veloc=0;<{{{><}}}>
Servers\aerodynamics\QueryHistory\122<|||>1<|||>2020-12-14 23:06:02|admin_aerodynamics|5578|/*PRUEBA DE BUSCAR VUELOS SIN RESERVA*/<{{{><}}}><{{{><}}}>SELECT <{{{><}}}>ahp.id AS idInicio,<{{{><}}}>idFin<{{{><}}}>FROM aviones_historico_posicionamiento ahp <{{{><}}}>LEFT JOIN (SELECT MIN(id) AS idFin FROM aviones_historico_posicionamiento WHERE Ignic=0) ahp2 ON ahp2.idFin>ahp.id<{{{><}}}>WHERE <{{{><}}}>Ignic=1 AND <{{{><}}}>(SELECT ahp2.Ignic FROM aviones_historico_posicionamiento ahp2 WHERE ahp2.id=(ahp.id-1))=0 AND Veloc=0;<{{{><}}}>
Servers\aerodynamics\QueryHistory\119<|||>1<|||>2020-12-15 00:07:59|admin_aerodynamics|3687|SELECT id FROM aviones_historico_posicionamiento ahp WHERE Ignic=1 AND (SELECT ahp2.Ignic FROM aviones_historico_posicionamiento ahp2 WHERE ahp2.id=(ahp.id-1))=0 AND Veloc=0 AND id not in (SELECT idHistoricoPosicionamientoInicio FROM inicio_fin_vuelos_tracker)
Servers\aerodynamics\QueryHistory\123<|||>1<|||>2020-12-15 00:19:28|admin_aerodynamics|3078|SELECT * FROM inicio_fin_vuelos_tracker ifvt<{{{><}}}>LEFT JOIN aviones_historico_posicionamiento ahpInicio ON ahpInicio.id=idHistoricoPosicionamientoInicio<{{{><}}}>LEFT JOIN aviones_historico_posicionamiento ahpFin ON ahpFin.id=idHistoricoPosicionamientoFin
Servers\aerodynamics\QueryHistory\124<|||>1<|||>2020-12-15 00:49:00|admin_aerodynamics|2657|SELECT * FROM inicio_fin_vuelos_tracker ifvt<{{{><}}}>LEFT JOIN aviones_historico_posicionamiento ahpInicio ON ahpInicio.id=idHistoricoPosicionamientoInicio<{{{><}}}>LEFT JOIN aviones_historico_posicionamiento ahpFin ON ahpFin.id=idHistoricoPosicionamientoFin<{{{><}}}>ORDER BY ahpInicio.Fecha DESC 
Servers\aerodynamics\QueryHistory\125<|||>1<|||>2020-12-15 16:21:09|admin_aerodynamics|125|DELETE FROM inicio_fin_vuelos_tracker
Servers\aerodynamics\QueryHistory\126<|||>1<|||>2020-12-15 16:29:50|admin_aerodynamics|22562|SELECT <{{{><}}}>id,<{{{><}}}>Matricula <{{{><}}}>FROM <{{{><}}}>aviones_historico_posicionamiento ahp <{{{><}}}>WHERE Ignic=1  <{{{><}}}>AND Veloc=0 <{{{><}}}>AND id not in (SELECT idHistoricoPosicionamientoInicio FROM inicio_fin_vuelos_tracker)
Servers\aerodynamics\QueryHistory\127<|||>1<|||>2020-12-15 16:53:32|admin_aerodynamics|27500|/*SELECT <{{{><}}}>id,<{{{><}}}>Matricula <{{{><}}}>FROM <{{{><}}}>aviones_historico_posicionamiento ahp <{{{><}}}>WHERE Ignic=1  <{{{><}}}>AND Veloc=0 <{{{><}}}>AND id not in (SELECT idHistoricoPosicionamientoInicio FROM inicio_fin_vuelos_tracker);*/<{{{><}}}><{{{><}}}><{{{><}}}>/*AND <{{{><}}}>	(SELECT ahp2.Ignic <{{{><}}}>		FROM aviones_historico_posicionamiento ahp2 <{{{><}}}>		WHERE <{{{><}}}>			ahp2.id>ahp.id <{{{><}}}>			AND ahp2.Matricula=ahp.Matricula <{{{><}}}>		ORDER BY ahp2.Fecha ASC LIMIT 1)=0*/<{{{><}}}>		<{{{><}}}>		<{{{><}}}>SELECT <{{{><}}}>id,<{{{><}}}>Matricula<{{{><}}}>FROM <{{{><}}}>aviones_historico_posicionamiento ahp <{{{><}}}>WHERE Ignic=1  <{{{><}}}>AND Veloc=0 <{{{><}}}>ORDER BY Matricula ASC,Fecha DESC;
Servers\aerodynamics\QueryHistory\128<|||>1<|||>2020-12-15 16:54:40|admin_aerodynamics|30765|/*SELECT <{{{><}}}>id,<{{{><}}}>Matricula <{{{><}}}>FROM <{{{><}}}>aviones_historico_posicionamiento ahp <{{{><}}}>WHERE Ignic=1  <{{{><}}}>AND Veloc=0 <{{{><}}}>AND id not in (SELECT idHistoricoPosicionamientoInicio FROM inicio_fin_vuelos_tracker);*/<{{{><}}}><{{{><}}}><{{{><}}}>/*AND <{{{><}}}>	(SELECT ahp2.Ignic <{{{><}}}>		FROM aviones_historico_posicionamiento ahp2 <{{{><}}}>		WHERE <{{{><}}}>			ahp2.id>ahp.id <{{{><}}}>			AND ahp2.Matricula=ahp.Matricula <{{{><}}}>		ORDER BY ahp2.Fecha ASC LIMIT 1)=0*/<{{{><}}}>		<{{{><}}}>		<{{{><}}}>SELECT <{{{><}}}>id,<{{{><}}}>Matricula,Fecha<{{{><}}}>FROM <{{{><}}}>aviones_historico_posicionamiento ahp <{{{><}}}>WHERE Ignic=1  <{{{><}}}>AND Veloc=0 <{{{><}}}>ORDER BY Matricula ASC,Fecha DESC;
Servers\aerodynamics\QueryHistory\129<|||>1<|||>2020-12-15 17:04:05|admin_aerodynamics|33000|/*SELECT <{{{><}}}>id,<{{{><}}}>Matricula <{{{><}}}>FROM <{{{><}}}>aviones_historico_posicionamiento ahp <{{{><}}}>WHERE Ignic=1  <{{{><}}}>AND Veloc=0 <{{{><}}}>AND id not in (SELECT idHistoricoPosicionamientoInicio FROM inicio_fin_vuelos_tracker);*/<{{{><}}}><{{{><}}}><{{{><}}}>/*AND <{{{><}}}>	(SELECT ahp2.Ignic <{{{><}}}>		FROM aviones_historico_posicionamiento ahp2 <{{{><}}}>		WHERE <{{{><}}}>			ahp2.id>ahp.id <{{{><}}}>			AND ahp2.Matricula=ahp.Matricula <{{{><}}}>		ORDER BY ahp2.Fecha ASC LIMIT 1)=0*/<{{{><}}}>		<{{{><}}}>		<{{{><}}}>/*SELECT <{{{><}}}>id,<{{{><}}}>Matricula,<{{{><}}}>Fecha<{{{><}}}>FROM <{{{><}}}>aviones_historico_posicionamiento ahp <{{{><}}}>WHERE Ignic=1  <{{{><}}}>AND Veloc=0 <{{{><}}}>AND (SELECT Ignic FROM aviones_historico_posicionamiento WHERE id>ahp.id AND Matricula=ahp.Matricula ORDER BY id ASC LIMIT 1)=0<{{{><}}}>ORDER BY Matricula ASC,Fecha DESC;*/<{{{><}}}><{{{><}}}>SELECT id,Matricula,Fecha,Ignic FROM aviones_historico_posicionamiento ahp ORDER BY id DESC;
Servers\aerodynamics\QueryHistory\130<|||>1<|||>2020-12-15 17:32:33|admin_aerodynamics|16|/*SELECT <{{{><}}}>id,<{{{><}}}>Matricula <{{{><}}}>FROM <{{{><}}}>aviones_historico_posicionamiento ahp <{{{><}}}>WHERE Ignic=1  <{{{><}}}>AND Veloc=0 <{{{><}}}>AND id not in (SELECT idHistoricoPosicionamientoInicio FROM inicio_fin_vuelos_tracker);*/<{{{><}}}><{{{><}}}><{{{><}}}>/*AND <{{{><}}}>	(SELECT ahp2.Ignic <{{{><}}}>		FROM aviones_historico_posicionamiento ahp2 <{{{><}}}>		WHERE <{{{><}}}>			ahp2.id>ahp.id <{{{><}}}>			AND ahp2.Matricula=ahp.Matricula <{{{><}}}>		ORDER BY ahp2.Fecha ASC LIMIT 1)=0*/<{{{><}}}>		<{{{><}}}>		<{{{><}}}>/*SELECT <{{{><}}}>id,<{{{><}}}>Matricula,<{{{><}}}>Fecha<{{{><}}}>FROM <{{{><}}}>aviones_historico_posicionamiento ahp <{{{><}}}>WHERE Ignic=1  <{{{><}}}>AND Veloc=0 <{{{><}}}>AND (SELECT Ignic FROM aviones_historico_posicionamiento WHERE id>ahp.id AND Matricula=ahp.Matricula ORDER BY id ASC LIMIT 1)!=1<{{{><}}}>ORDER BY Matricula ASC,Fecha DESC;*/<{{{><}}}><{{{><}}}>SELECT id,Matricula,Fecha,Ignic,id2,Matricula2,Fecha2,Ignic2<{{{><}}}>FROM aviones_historico_posicionamiento ahp <{{{><}}}>LEFT JOIN (SELECT id AS id2,Matricula AS Matricula2,Fecha AS Fecha2,Ignic AS Ignic2 FROM aviones_historico_posicionamiento ORDER BY id ASC LIMIT 1) ahp2 ON ahp2.id2>ahp.id AND ahp2.Matricula2=ahp.Matricula<{{{><}}}><{{{><}}}><{{{><}}}>WHERE Ignic=1 ORDER BY id DESC LIMIT 50;
Servers\aerodynamics\QueryHistory\131<|||>1<|||>2020-12-15 17:35:08|admin_aerodynamics|141|/*SELECT <{{{><}}}>id,<{{{><}}}>Matricula <{{{><}}}>FROM <{{{><}}}>aviones_historico_posicionamiento ahp <{{{><}}}>WHERE Ignic=1  <{{{><}}}>AND Veloc=0 <{{{><}}}>AND id not in (SELECT idHistoricoPosicionamientoInicio FROM inicio_fin_vuelos_tracker);*/<{{{><}}}><{{{><}}}><{{{><}}}>/*AND <{{{><}}}>	(SELECT ahp2.Ignic <{{{><}}}>		FROM aviones_historico_posicionamiento ahp2 <{{{><}}}>		WHERE <{{{><}}}>			ahp2.id>ahp.id <{{{><}}}>			AND ahp2.Matricula=ahp.Matricula <{{{><}}}>		ORDER BY ahp2.Fecha ASC LIMIT 1)=0*/<{{{><}}}>		<{{{><}}}>		<{{{><}}}>/*SELECT <{{{><}}}>id,<{{{><}}}>Matricula,<{{{><}}}>Fecha<{{{><}}}>FROM <{{{><}}}>aviones_historico_posicionamiento ahp <{{{><}}}>WHERE Ignic=1  <{{{><}}}>AND Veloc=0 <{{{><}}}>AND (SELECT Ignic FROM aviones_historico_posicionamiento WHERE id>ahp.id AND Matricula=ahp.Matricula ORDER BY id ASC LIMIT 1)!=1<{{{><}}}>ORDER BY Matricula ASC,Fecha DESC;*/<{{{><}}}><{{{><}}}>SELECT id,Matricula,Fecha,Ignic,id2,Matricula2,Fecha2,Ignic2<{{{><}}}>FROM aviones_historico_posicionamiento ahp <{{{><}}}>LEFT JOIN (SELECT id AS id2,Matricula AS Matricula2,Fecha AS Fecha2,Ignic AS Ignic2 FROM aviones_historico_posicionamiento ORDER BY id ASC LIMIT 1) ahp2 ON ahp2.id2>ahp.id AND ahp2.Matricula2=ahp.Matricula<{{{><}}}>WHERE Ignic=1 ORDER BY id DESC LIMIT 50;<{{{><}}}><{{{><}}}>SELECT id AS id2,Matricula AS Matricula2,Fecha AS Fecha2,Ignic AS Ignic2 FROM aviones_historico_posicionamiento WHERE id>1415300 AND Matricula='EC-GZF' ORDER BY id ASC LIMIT 1;
Servers\aerodynamics\QueryHistory\132<|||>1<|||>2020-12-15 17:36:07|admin_aerodynamics|32|/*SELECT <{{{><}}}>id,<{{{><}}}>Matricula <{{{><}}}>FROM <{{{><}}}>aviones_historico_posicionamiento ahp <{{{><}}}>WHERE Ignic=1  <{{{><}}}>AND Veloc=0 <{{{><}}}>AND id not in (SELECT idHistoricoPosicionamientoInicio FROM inicio_fin_vuelos_tracker);*/<{{{><}}}><{{{><}}}><{{{><}}}>/*AND <{{{><}}}>	(SELECT ahp2.Ignic <{{{><}}}>		FROM aviones_historico_posicionamiento ahp2 <{{{><}}}>		WHERE <{{{><}}}>			ahp2.id>ahp.id <{{{><}}}>			AND ahp2.Matricula=ahp.Matricula <{{{><}}}>		ORDER BY ahp2.Fecha ASC LIMIT 1)=0*/<{{{><}}}>		<{{{><}}}>		<{{{><}}}>/*SELECT <{{{><}}}>id,<{{{><}}}>Matricula,<{{{><}}}>Fecha<{{{><}}}>FROM <{{{><}}}>aviones_historico_posicionamiento ahp <{{{><}}}>WHERE Ignic=1  <{{{><}}}>AND Veloc=0 <{{{><}}}>AND (SELECT Ignic FROM aviones_historico_posicionamiento WHERE id>ahp.id AND Matricula=ahp.Matricula ORDER BY id ASC LIMIT 1)!=1<{{{><}}}>ORDER BY Matricula ASC,Fecha DESC;*/<{{{><}}}><{{{><}}}>SELECT id,Matricula,Fecha,Ignic,id2,Matricula2,Fecha2,Ignic2<{{{><}}}>FROM aviones_historico_posicionamiento ahp <{{{><}}}>LEFT JOIN (SELECT id AS id2,Matricula AS Matricula2,Fecha AS Fecha2,Ignic AS Ignic2 FROM aviones_historico_posicionamiento ORDER BY id ASC LIMIT 1) ahp2 ON ahp2.id2>ahp.id AND ahp2.Matricula2=ahp.Matricula<{{{><}}}>WHERE Ignic=1 ORDER BY id DESC LIMIT 50;<{{{><}}}><{{{><}}}>SELECT id,Matricula ,Fecha ,Ignic FROM aviones_historico_posicionamiento WHERE id>1415300 AND Matricula='EC-GZF' AND Ignic!=0 ORDER BY id ASC LIMIT 1;
Servers\aerodynamics\QueryHistory\133<|||>1<|||>2020-12-15 17:36:23|admin_aerodynamics|47|/*SELECT <{{{><}}}>id,<{{{><}}}>Matricula <{{{><}}}>FROM <{{{><}}}>aviones_historico_posicionamiento ahp <{{{><}}}>WHERE Ignic=1  <{{{><}}}>AND Veloc=0 <{{{><}}}>AND id not in (SELECT idHistoricoPosicionamientoInicio FROM inicio_fin_vuelos_tracker);*/<{{{><}}}><{{{><}}}><{{{><}}}>/*AND <{{{><}}}>	(SELECT ahp2.Ignic <{{{><}}}>		FROM aviones_historico_posicionamiento ahp2 <{{{><}}}>		WHERE <{{{><}}}>			ahp2.id>ahp.id <{{{><}}}>			AND ahp2.Matricula=ahp.Matricula <{{{><}}}>		ORDER BY ahp2.Fecha ASC LIMIT 1)=0*/<{{{><}}}>		<{{{><}}}>		<{{{><}}}>/*SELECT <{{{><}}}>id,<{{{><}}}>Matricula,<{{{><}}}>Fecha<{{{><}}}>FROM <{{{><}}}>aviones_historico_posicionamiento ahp <{{{><}}}>WHERE Ignic=1  <{{{><}}}>AND Veloc=0 <{{{><}}}>AND (SELECT Ignic FROM aviones_historico_posicionamiento WHERE id>ahp.id AND Matricula=ahp.Matricula ORDER BY id ASC LIMIT 1)!=1<{{{><}}}>ORDER BY Matricula ASC,Fecha DESC;*/<{{{><}}}><{{{><}}}>SELECT id,Matricula,Fecha,Ignic,id2,Matricula2,Fecha2,Ignic2<{{{><}}}>FROM aviones_historico_posicionamiento ahp <{{{><}}}>LEFT JOIN (SELECT id AS id2,Matricula AS Matricula2,Fecha AS Fecha2,Ignic AS Ignic2 FROM aviones_historico_posicionamiento ORDER BY id ASC LIMIT 1) ahp2 ON ahp2.id2>ahp.id AND ahp2.Matricula2=ahp.Matricula<{{{><}}}>WHERE Ignic=1 ORDER BY id DESC LIMIT 50;<{{{><}}}><{{{><}}}>SELECT id,Matricula ,Fecha ,Ignic FROM aviones_historico_posicionamiento WHERE id>1415300 AND Matricula='EC-GZF' AND Ignic!=1 ORDER BY id ASC LIMIT 1;
Servers\aerodynamics\QueryHistory\134<|||>1<|||>2020-12-15 17:38:51|admin_aerodynamics|33719|/*SELECT <{{{><}}}>id,<{{{><}}}>Matricula <{{{><}}}>FROM <{{{><}}}>aviones_historico_posicionamiento ahp <{{{><}}}>WHERE Ignic=1  <{{{><}}}>AND Veloc=0 <{{{><}}}>AND id not in (SELECT idHistoricoPosicionamientoInicio FROM inicio_fin_vuelos_tracker);*/<{{{><}}}><{{{><}}}><{{{><}}}>/*AND <{{{><}}}>	(SELECT ahp2.Ignic <{{{><}}}>		FROM aviones_historico_posicionamiento ahp2 <{{{><}}}>		WHERE <{{{><}}}>			ahp2.id>ahp.id <{{{><}}}>			AND ahp2.Matricula=ahp.Matricula <{{{><}}}>		ORDER BY ahp2.Fecha ASC LIMIT 1)=0*/<{{{><}}}>		<{{{><}}}>		<{{{><}}}>/*SELECT <{{{><}}}>id,<{{{><}}}>Matricula,<{{{><}}}>Fecha<{{{><}}}>FROM <{{{><}}}>aviones_historico_posicionamiento ahp <{{{><}}}>WHERE Ignic=1  <{{{><}}}>AND Veloc=0 <{{{><}}}>AND (SELECT Ignic FROM aviones_historico_posicionamiento WHERE id>ahp.id AND Matricula=ahp.Matricula ORDER BY id ASC LIMIT 1)!=1<{{{><}}}>ORDER BY Matricula ASC,Fecha DESC;*/<{{{><}}}><{{{><}}}>SELECT id,Matricula,Fecha,Ignic,(SELECT id FROM aviones_historico_posicionamiento WHERE id>ahp.id AND Matricula=ahp.Matricula AND Ignic!=1 ORDER BY id ASC LIMIT 1) AS idFin<{{{><}}}>FROM aviones_historico_posicionamiento ahp WHERE Ignic=1 ORDER BY id DESC LIMIT 2;<{{{><}}}>
Servers\aerodynamics\QueryHistory\135<|||>1<|||>2020-12-15 17:39:56|admin_aerodynamics|36360|/*SELECT <{{{><}}}>id,<{{{><}}}>Matricula <{{{><}}}>FROM <{{{><}}}>aviones_historico_posicionamiento ahp <{{{><}}}>WHERE Ignic=1  <{{{><}}}>AND Veloc=0 <{{{><}}}>AND id not in (SELECT idHistoricoPosicionamientoInicio FROM inicio_fin_vuelos_tracker);*/<{{{><}}}><{{{><}}}><{{{><}}}>/*AND <{{{><}}}>	(SELECT ahp2.Ignic <{{{><}}}>		FROM aviones_historico_posicionamiento ahp2 <{{{><}}}>		WHERE <{{{><}}}>			ahp2.id>ahp.id <{{{><}}}>			AND ahp2.Matricula=ahp.Matricula <{{{><}}}>		ORDER BY ahp2.Fecha ASC LIMIT 1)=0*/<{{{><}}}>		<{{{><}}}>		<{{{><}}}>/*SELECT <{{{><}}}>id,<{{{><}}}>Matricula,<{{{><}}}>Fecha<{{{><}}}>FROM <{{{><}}}>aviones_historico_posicionamiento ahp <{{{><}}}>WHERE Ignic=1  <{{{><}}}>AND Veloc=0 <{{{><}}}>AND (SELECT Ignic FROM aviones_historico_posicionamiento WHERE id>ahp.id AND Matricula=ahp.Matricula ORDER BY id ASC LIMIT 1)!=1<{{{><}}}>ORDER BY Matricula ASC,Fecha DESC;*/<{{{><}}}><{{{><}}}>SELECT id,Matricula,Fecha,Ignic,(SELECT MIN(id) FROM aviones_historico_posicionamiento WHERE id>ahp.id AND Matricula=ahp.Matricula AND Ignic!=1) AS idFin<{{{><}}}>FROM aviones_historico_posicionamiento ahp WHERE Ignic=1 ORDER BY id DESC LIMIT 2;<{{{><}}}>
Servers\aerodynamics\QueryHistory\136<|||>1<|||>2020-12-15 17:46:55|admin_aerodynamics|39641|/*SELECT <{{{><}}}>id,<{{{><}}}>Matricula <{{{><}}}>FROM <{{{><}}}>aviones_historico_posicionamiento ahp <{{{><}}}>WHERE Ignic=1  <{{{><}}}>AND Veloc=0 <{{{><}}}>AND id not in (SELECT idHistoricoPosicionamientoInicio FROM inicio_fin_vuelos_tracker);*/<{{{><}}}><{{{><}}}><{{{><}}}>/*AND <{{{><}}}>	(SELECT ahp2.Ignic <{{{><}}}>		FROM aviones_historico_posicionamiento ahp2 <{{{><}}}>		WHERE <{{{><}}}>			ahp2.id>ahp.id <{{{><}}}>			AND ahp2.Matricula=ahp.Matricula <{{{><}}}>		ORDER BY ahp2.Fecha ASC LIMIT 1)=0*/<{{{><}}}>		<{{{><}}}>		<{{{><}}}>/*SELECT <{{{><}}}>id,<{{{><}}}>Matricula,<{{{><}}}>Fecha<{{{><}}}>FROM <{{{><}}}>aviones_historico_posicionamiento ahp <{{{><}}}>WHERE Ignic=1  <{{{><}}}>AND Veloc=0 <{{{><}}}>AND (SELECT Ignic FROM aviones_historico_posicionamiento WHERE id>ahp.id AND Matricula=ahp.Matricula ORDER BY id ASC LIMIT 1)!=1<{{{><}}}>ORDER BY Matricula ASC,Fecha DESC;*/<{{{><}}}><{{{><}}}>SELECT id,Matricula,Fecha,Ignic,(SELECT MIN(id) FROM aviones_historico_posicionamiento WHERE id>ahp.id AND Matricula=ahp.Matricula AND Ignic!=1) AS idFin<{{{><}}}>FROM aviones_historico_posicionamiento ahp WHERE Ignic=1 AND (SELECT Ignic FROM aviones_historico_posicionamiento WHERE id<ahp.id AND Matricula=ahp.Matricula ORDER BY id DESC LIMIT 1)!=1 ORDER BY id DESC LIMIT 2;<{{{><}}}>
Servers\aerodynamics.com.es\SessionCreated<|||>1<|||>2020-11-18 12:07:49
Servers\aerodynamics.com.es\Host<|||>1<|||>dataleanmakers.com.es
Servers\aerodynamics.com.es\WindowsAuth<|||>3<|||>0
Servers\aerodynamics.com.es\CleartextPluginEnabled<|||>3<|||>0
Servers\aerodynamics.com.es\User<|||>1<|||>admin_aerody
Servers\aerodynamics.com.es\Password<|||>1<|||>666A7774697E7366726E687837353735295
Servers\aerodynamics.com.es\LoginPrompt<|||>3<|||>0
Servers\aerodynamics.com.es\Port<|||>1<|||>3306
Servers\aerodynamics.com.es\NetType<|||>3<|||>0
Servers\aerodynamics.com.es\Compressed<|||>3<|||>0
Servers\aerodynamics.com.es\LocalTimeZone<|||>3<|||>0
Servers\aerodynamics.com.es\QueryTimeout<|||>3<|||>30
Servers\aerodynamics.com.es\KeepAlive<|||>3<|||>20
Servers\aerodynamics.com.es\FullTableStatus<|||>3<|||>1
Servers\aerodynamics.com.es\Databases<|||>1<|||>
Servers\aerodynamics.com.es\Library<|||>1<|||>libmariadb.dll
Servers\aerodynamics.com.es\Comment<|||>1<|||>
Servers\aerodynamics.com.es\StartupScriptFilename<|||>1<|||>
Servers\aerodynamics.com.es\TreeBackground<|||>3<|||>536870911
Servers\aerodynamics.com.es\SSHtunnelHost<|||>1<|||>
Servers\aerodynamics.com.es\SSHtunnelHostPort<|||>3<|||>22
Servers\aerodynamics.com.es\SSHtunnelUser<|||>1<|||>
Servers\aerodynamics.com.es\SSHtunnelPassword<|||>1<|||>6
Servers\aerodynamics.com.es\SSHtunnelTimeout<|||>3<|||>4
Servers\aerodynamics.com.es\SSHtunnelPrivateKey<|||>1<|||>
Servers\aerodynamics.com.es\SSHtunnelPort<|||>3<|||>3307
Servers\aerodynamics.com.es\SSL_Active<|||>3<|||>0
Servers\aerodynamics.com.es\SSL_Key<|||>1<|||>
Servers\aerodynamics.com.es\SSL_Cert<|||>1<|||>
Servers\aerodynamics.com.es\SSL_CA<|||>1<|||>
Servers\aerodynamics.com.es\SSL_Cipher<|||>1<|||>
Servers\aerodynamics.com.es\IgnoreDatabasePattern<|||>1<|||>
Servers\aerodynamics.com.es\RefusedCount<|||>3<|||>3
Servers\aerodynamics.com.es\ServerVersionFull<|||>1<|||>10.3.28-MariaDB - MariaDB Server
Servers\aerodynamics.com.es\ConnectCount<|||>3<|||>49
Servers\aerodynamics.com.es\ServerVersion<|||>3<|||>100328
Servers\aerodynamics.com.es\LastConnect<|||>1<|||>2021-03-05 17:17:14
Servers\aerodynamics.com.es\lastUsedDB<|||>1<|||>admin_aerodynamics
Servers\aerodynamics.com.es\admin_aerodynamics|aviones_historico_posicionamiento\Sort<|||>1<|||>1_Fecha|
Servers\aerodynamics.com.es\admin_aerodynamics|aviones_historico_posicionamiento\RecentFilters\1<|||>1<|||>`id` LIKE '%EC-GZF%' OR `Imei` LIKE '%EC-GZF%' OR `Matricula` LIKE '%EC-GZF%' OR CAST(`Fecha` AS CHAR) LIKE '%EC-GZF%'<{{{><}}}> OR `Loc` LIKE '%EC-GZF%' OR `Rumbo` LIKE '%EC-GZF%' OR `Veloc` LIKE '%EC-GZF%' OR `Ignic` LIKE '%EC-GZF%' OR `Ibutton` LIKE '%EC-GZF%'<{{{><}}}> OR `Alt` LIKE '%EC-GZF%' OR `latitud` LIKE '%EC-GZF%' OR `longitud` LIKE '%EC-GZF%' OR `nudos` LIKE '%EC-GZF%'<{{{><}}}> OR `pies` LIKE '%EC-GZF%'
Servers\aerodynamics.com.es\admin_aerodynamics|aviones_historico_posicionamiento\RecentFilters\2<|||>1<|||>`id` LIKE '%EC-ICY%' OR `Imei` LIKE '%EC-ICY%' OR `Matricula` LIKE '%EC-ICY%' OR CAST(`Fecha` AS CHAR) LIKE '%EC-ICY%'<{{{><}}}> OR `Loc` LIKE '%EC-ICY%' OR `Rumbo` LIKE '%EC-ICY%' OR `Veloc` LIKE '%EC-ICY%' OR `Ignic` LIKE '%EC-ICY%' OR `Ibutton` LIKE '%EC-ICY%'<{{{><}}}> OR `Alt` LIKE '%EC-ICY%' OR `latitud` LIKE '%EC-ICY%' OR `longitud` LIKE '%EC-ICY%' OR `nudos` LIKE '%EC-ICY%'<{{{><}}}> OR `pies` LIKE '%EC-ICY%'
Servers\aerodynamics.com.es\admin_aerodynamics|aviones_historico_posicionamiento\RecentFilters\3<|||>1<|||>`id` LIKE '%G-CKZV%' OR `Imei` LIKE '%G-CKZV%' OR `Matricula` LIKE '%G-CKZV%' OR CAST(`Fecha` AS CHAR) LIKE '%G-CKZV%'<{{{><}}}> OR `Loc` LIKE '%G-CKZV%' OR `Rumbo` LIKE '%G-CKZV%' OR `Veloc` LIKE '%G-CKZV%' OR `Ignic` LIKE '%G-CKZV%' OR `Ibutton` LIKE '%G-CKZV%'<{{{><}}}> OR `Alt` LIKE '%G-CKZV%' OR `latitud` LIKE '%G-CKZV%' OR `longitud` LIKE '%G-CKZV%' OR `nudos` LIKE '%G-CKZV%'<{{{><}}}> OR `pies` LIKE '%G-CKZV%'
Servers\aerodynamics.com.es\admin_aerodynamics|aviones_historico_posicionamiento\RecentFilters\4<|||>1<|||>`id` LIKE '%2020-12-15%' OR `Imei` LIKE '%2020-12-15%' OR `Matricula` LIKE '%2020-12-15%' OR CAST(`Fecha` AS CHAR) LIKE '%2020-12-15%'<{{{><}}}> OR `Loc` LIKE '%2020-12-15%' OR `Rumbo` LIKE '%2020-12-15%' OR `Veloc` LIKE '%2020-12-15%' OR `Ignic` LIKE '%2020-12-15%'<{{{><}}}> OR `Ibutton` LIKE '%2020-12-15%' OR `Alt` LIKE '%2020-12-15%' OR `latitud` LIKE '%2020-12-15%' OR `longitud` LIKE '%2020-12-15%'<{{{><}}}> OR `nudos` LIKE '%2020-12-15%' OR `pies` LIKE '%2020-12-15%'
Servers\aerodynamics.com.es\admin_aerodynamics|aviones_historico_posicionamiento\RecentFilters\5<|||>1<|||>`id` LIKE '%2020-12-14%' OR `Imei` LIKE '%2020-12-14%' OR `Matricula` LIKE '%2020-12-14%' OR CAST(`Fecha` AS CHAR) LIKE '%2020-12-14%'<{{{><}}}> OR `Loc` LIKE '%2020-12-14%' OR `Rumbo` LIKE '%2020-12-14%' OR `Veloc` LIKE '%2020-12-14%' OR `Ignic` LIKE '%2020-12-14%'<{{{><}}}> OR `Ibutton` LIKE '%2020-12-14%' OR `Alt` LIKE '%2020-12-14%' OR `latitud` LIKE '%2020-12-14%' OR `longitud` LIKE '%2020-12-14%'<{{{><}}}> OR `nudos` LIKE '%2020-12-14%' OR `pies` LIKE '%2020-12-14%'
Servers\aerodynamics.com.es\admin_aerodynamics|aviones_historico_posicionamiento\RecentFilters\6<|||>1<|||>`id` LIKE '%2020-12-13%' OR `Imei` LIKE '%2020-12-13%' OR `Matricula` LIKE '%2020-12-13%' OR CAST(`Fecha` AS CHAR) LIKE '%2020-12-13%'<{{{><}}}> OR `Loc` LIKE '%2020-12-13%' OR `Rumbo` LIKE '%2020-12-13%' OR `Veloc` LIKE '%2020-12-13%' OR `Ignic` LIKE '%2020-12-13%'<{{{><}}}> OR `Ibutton` LIKE '%2020-12-13%' OR `Alt` LIKE '%2020-12-13%' OR `latitud` LIKE '%2020-12-13%' OR `longitud` LIKE '%2020-12-13%'<{{{><}}}> OR `nudos` LIKE '%2020-12-13%' OR `pies` LIKE '%2020-12-13%'
Servers\aerodynamics.com.es\admin_aerodynamics|aviones_historico_posicionamiento\RecentFilters\7<|||>1<|||>`id` LIKE '%EC-ICY 2020-12-13%' OR `Imei` LIKE '%EC-ICY 2020-12-13%' OR `Matricula` LIKE '%EC-ICY 2020-12-13%' OR CAST(`Fecha` AS CHAR) LIKE '%EC-ICY 2020-12-13%'<{{{><}}}> OR `Loc` LIKE '%EC-ICY 2020-12-13%' OR `Rumbo` LIKE '%EC-ICY 2020-12-13%' OR `Veloc` LIKE '%EC-ICY 2020-12-13%' OR `Ignic` LIKE '%EC-ICY 2020-12-13%'<{{{><}}}> OR `Ibutton` LIKE '%EC-ICY 2020-12-13%' OR `Alt` LIKE '%EC-ICY 2020-12-13%' OR `latitud` LIKE '%EC-ICY 2020-12-13%' OR `longitud` LIKE '%EC-ICY 2020-12-13%'<{{{><}}}> OR `nudos` LIKE '%EC-ICY 2020-12-13%' OR `pies` LIKE '%EC-ICY 2020-12-13%'
Servers\aerodynamics.com.es\admin_aerodynamics|aviones_historico_posicionamiento_almacen\Sort<|||>1<|||>1_Fecha|
Servers\aerodynamics.com.es\admin_aerodynamics|aviones_instructor\Filter<|||>1<|||>`idAvInstructor` LIKE '%3564%' OR `idAvion` LIKE '%3564%' OR `idInstructor` LIKE '%3564%'<{{{><}}}>
Servers\aerodynamics.com.es\admin_aerodynamics|aviones_instructor\RecentFilters\1<|||>1<|||>`idAvInstructor` LIKE '%3564%' OR `idAvion` LIKE '%3564%' OR `idInstructor` LIKE '%3564%'
Servers\aerodynamics.com.es\admin_aerodynamics|ejercicios_mision\Sort<|||>1<|||>1_idEjercicio|
Servers\aerodynamics.com.es\admin_aerodynamics|log\Sort<|||>1<|||>1_id|
Servers\aerodynamics.com.es\admin_aerodynamics|misiones\Sort<|||>1<|||>1_idMision|
Servers\aerodynamics.com.es\admin_aerodynamics|paradas_avion\Sort<|||>1<|||>1_id|
Servers\aerodynamics.com.es\admin_aerodynamics|paradas_avion\RecentFilters\1<|||>1<|||>`id` LIKE '%EC-ICY%' OR `numRegistroMatricula` LIKE '%EC-ICY%' OR `imei` LIKE '%EC-ICY%' OR `matricula` LIKE '%EC-ICY%' OR CAST(`inicio` AS CHAR) LIKE '%EC-ICY%'<{{{><}}}> OR CAST(`fin` AS CHAR) LIKE '%EC-ICY%' OR CAST(`fechaInicio` AS CHAR) LIKE '%EC-ICY%' OR CAST(`horaInicio` AS CHAR) LIKE '%EC-ICY%'<{{{><}}}> OR CAST(`fechaFin` AS CHAR) LIKE '%EC-ICY%' OR CAST(`horaFin` AS CHAR) LIKE '%EC-ICY%'
Servers\aerodynamics.com.es\admin_aerodynamics|paradas_avion\RecentFilters\2<|||>1<|||>`id` LIKE '%2020-10-05 13:30:35%' OR `numRegistroMatricula` LIKE '%2020-10-05 13:30:35%' OR `imei` LIKE '%2020-10-05 13:30:35%'<{{{><}}}> OR `matricula` LIKE '%2020-10-05 13:30:35%' OR CAST(`inicio` AS CHAR) LIKE '%2020-10-05 13:30:35%' OR CAST(`fin` AS CHAR) LIKE '%2020-10-05 13:30:35%'<{{{><}}}> OR CAST(`fechaInicio` AS CHAR) LIKE '%2020-10-05 13:30:35%' OR CAST(`horaInicio` AS CHAR) LIKE '%2020-10-05 13:30:35%' OR CAST(`fechaFin` AS CHAR) LIKE '%2020-10-05 13:30:35%'<{{{><}}}> OR CAST(`horaFin` AS CHAR) LIKE '%2020-10-05 13:30:35%'
Servers\aerodynamics.com.es\admin_aerodynamics|personas\Sort<|||>1<|||>1_idPersona|
Servers\aerodynamics.com.es\admin_aerodynamics|personas\Filter<|||>1<|||>`idPersona` LIKE '%jose%' OR `idPrivateRadar` LIKE '%jose%' OR `idUsuario` LIKE '%jose%' OR `idtipo` LIKE '%jose%' OR `idperfil` LIKE '%jose%'<{{{><}}}> OR `idpuesto` LIKE '%jose%' OR `titulo` LIKE '%jose%' OR `nombre` LIKE '%jose%' OR `segundoNombre` LIKE '%jose%' OR `apellido` LIKE '%jose%'<{{{><}}}> OR `suffix` LIKE '%jose%' OR `codigo` LIKE '%jose%' OR `nacionalidad` LIKE '%jose%' OR `email1` LIKE '%jose%' OR `email2` LIKE '%jose%'<{{{><}}}> OR `telefono` LIKE '%jose%' OR `tipoTelefono` LIKE '%jose%' OR `telefono2` LIKE '%jose%' OR CAST(`nacimiento` AS CHAR) LIKE '%jose%'<{{{><}}}> OR `identidad` LIKE '%jose%' OR `licencia` LIKE '%jose%' OR `codigoCliente` LIKE '%jose%' OR `instructorvuelo` LIKE '%jose%'<{{{><}}}> OR `instructorMCC` LIKE '%jose%' OR `instructorSuelo` LIKE '%jose%' OR `examinador` LIKE '%jose%' OR `AOC` LIKE '%jose%'<{{{><}}}> OR `direccion` LIKE '%jose%' OR `direccion2` LIKE '%jose%' OR `codigoPostal` LIKE '%jose%' OR `provincia` LIKE '%jose%'<{{{><}}}> OR `poblacion` LIKE '%jose%' OR `nombreEm` LIKE '%jose%' OR `apellidoEm` LIKE '%jose%' OR `telefonoEm` LIKE '%jose%'<{{{><}}}> OR `emailEm` LIKE '%jose%' OR `relacion` LIKE '%jose%' OR `comentarios` LIKE '%jose%' OR `notas` LIKE '%jose%' OR `proffile` LIKE '%jose%'<{{{><}}}> OR `basePrincipal` LIKE '%jose%' OR `baseSeg` LIKE '%jose%' OR CAST(`temFrom` AS CHAR) LIKE '%jose%' OR CAST(`temTo` AS CHAR) LIKE '%jose%'<{{{><}}}> OR `autoInvoice` LIKE '%jose%' OR `imagen_name` LIKE '%jose%' OR `active` LIKE '%jose%' OR `carrier` LIKE '%jose%' OR `groups` LIKE '%jose%'<{{{><}}}> OR `status` LIKE '%jose%' OR `tipo` LIKE '%jose%' OR `lang` LIKE '%jose%' OR `flySolo` LIKE '%jose%' OR `flyPax` LIKE '%jose%'<{{{><}}}> OR `pais` LIKE '%jose%'<{{{><}}}>
Servers\aerodynamics.com.es\admin_aerodynamics|personas\RecentFilters\1<|||>1<|||>`idPersona` LIKE '%jose%' OR `idPrivateRadar` LIKE '%jose%' OR `idUsuario` LIKE '%jose%' OR `idtipo` LIKE '%jose%' OR `idperfil` LIKE '%jose%'<{{{><}}}> OR `idpuesto` LIKE '%jose%' OR `titulo` LIKE '%jose%' OR `nombre` LIKE '%jose%' OR `segundoNombre` LIKE '%jose%' OR `apellido` LIKE '%jose%'<{{{><}}}> OR `suffix` LIKE '%jose%' OR `codigo` LIKE '%jose%' OR `nacionalidad` LIKE '%jose%' OR `email1` LIKE '%jose%' OR `email2` LIKE '%jose%'<{{{><}}}> OR `telefono` LIKE '%jose%' OR `tipoTelefono` LIKE '%jose%' OR `telefono2` LIKE '%jose%' OR CAST(`nacimiento` AS CHAR) LIKE '%jose%'<{{{><}}}> OR `identidad` LIKE '%jose%' OR `licencia` LIKE '%jose%' OR `codigoCliente` LIKE '%jose%' OR `instructorvuelo` LIKE '%jose%'<{{{><}}}> OR `instructorMCC` LIKE '%jose%' OR `instructorSuelo` LIKE '%jose%' OR `examinador` LIKE '%jose%' OR `AOC` LIKE '%jose%'<{{{><}}}> OR `direccion` LIKE '%jose%' OR `direccion2` LIKE '%jose%' OR `codigoPostal` LIKE '%jose%' OR `provincia` LIKE '%jose%'<{{{><}}}> OR `poblacion` LIKE '%jose%' OR `nombreEm` LIKE '%jose%' OR `apellidoEm` LIKE '%jose%' OR `telefonoEm` LIKE '%jose%'<{{{><}}}> OR `emailEm` LIKE '%jose%' OR `relacion` LIKE '%jose%' OR `comentarios` LIKE '%jose%' OR `notas` LIKE '%jose%' OR `proffile` LIKE '%jose%'<{{{><}}}> OR `basePrincipal` LIKE '%jose%' OR `baseSeg` LIKE '%jose%' OR CAST(`temFrom` AS CHAR) LIKE '%jose%' OR CAST(`temTo` AS CHAR) LIKE '%jose%'<{{{><}}}> OR `autoInvoice` LIKE '%jose%' OR `imagen_name` LIKE '%jose%' OR `active` LIKE '%jose%' OR `carrier` LIKE '%jose%' OR `groups` LIKE '%jose%'<{{{><}}}> OR `status` LIKE '%jose%' OR `tipo` LIKE '%jose%' OR `lang` LIKE '%jose%' OR `flySolo` LIKE '%jose%' OR `flyPax` LIKE '%jose%'<{{{><}}}> OR `pais` LIKE '%jose%'
Servers\aerodynamics.com.es\admin_aerodynamics|personas\RecentFilters\2<|||>1<|||>`idPersona` LIKE '% la puerta%' OR `idPrivateRadar` LIKE '% la puerta%' OR `idUsuario` LIKE '% la puerta%' OR `idtipo` LIKE '% la puerta%'<{{{><}}}> OR `idperfil` LIKE '% la puerta%' OR `idpuesto` LIKE '% la puerta%' OR `titulo` LIKE '% la puerta%' OR `nombre` LIKE '% la puerta%'<{{{><}}}> OR `segundoNombre` LIKE '% la puerta%' OR `apellido` LIKE '% la puerta%' OR `suffix` LIKE '% la puerta%' OR `codigo` LIKE '% la puerta%'<{{{><}}}> OR `nacionalidad` LIKE '% la puerta%' OR `email1` LIKE '% la puerta%' OR `email2` LIKE '% la puerta%' OR `telefono` LIKE '% la puerta%'<{{{><}}}> OR `tipoTelefono` LIKE '% la puerta%' OR `telefono2` LIKE '% la puerta%' OR CAST(`nacimiento` AS CHAR) LIKE '% la puerta%'<{{{><}}}> OR `identidad` LIKE '% la puerta%' OR `licencia` LIKE '% la puerta%' OR `codigoCliente` LIKE '% la puerta%' OR `instructorvuelo` LIKE '% la puerta%'<{{{><}}}> OR `instructorMCC` LIKE '% la puerta%' OR `instructorSuelo` LIKE '% la puerta%' OR `examinador` LIKE '% la puerta%' OR `AOC` LIKE '% la puerta%'<{{{><}}}> OR `direccion` LIKE '% la puerta%' OR `direccion2` LIKE '% la puerta%' OR `codigoPostal` LIKE '% la puerta%' OR `provincia` LIKE '% la puerta%'<{{{><}}}> OR `poblacion` LIKE '% la puerta%' OR `nombreEm` LIKE '% la puerta%' OR `apellidoEm` LIKE '% la puerta%' OR `telefonoEm` LIKE '% la puerta%'<{{{><}}}> OR `emailEm` LIKE '% la puerta%' OR `relacion` LIKE '% la puerta%' OR `comentarios` LIKE '% la puerta%' OR `notas` LIKE '% la puerta%'<{{{><}}}> OR `proffile` LIKE '% la puerta%' OR `basePrincipal` LIKE '% la puerta%' OR `baseSeg` LIKE '% la puerta%' OR CAST(`temFrom` AS CHAR) LIKE '% la puerta%'<{{{><}}}> OR CAST(`temTo` AS CHAR) LIKE '% la puerta%' OR `autoInvoice` LIKE '% la puerta%' OR `imagen_name` LIKE '% la puerta%'<{{{><}}}> OR `active` LIKE '% la puerta%' OR `carrier` LIKE '% la puerta%' OR `groups` LIKE '% la puerta%' OR `status` LIKE '% la puerta%'<{{{><}}}> OR `tipo` LIKE '% la puerta%' OR `lang` LIKE '% la puerta%' OR `flySolo` LIKE '% la puerta%' OR `flyPax` LIKE '% la puerta%'<{{{><}}}> OR `pais` LIKE '% la puerta%'
Servers\aerodynamics.com.es\admin_aerodynamics|personas\RecentFilters\3<|||>1<|||>`idPersona` LIKE '%de la puerta%' OR `idPrivateRadar` LIKE '%de la puerta%' OR `idUsuario` LIKE '%de la puerta%' OR `idtipo` LIKE '%de la puerta%'<{{{><}}}> OR `idperfil` LIKE '%de la puerta%' OR `idpuesto` LIKE '%de la puerta%' OR `titulo` LIKE '%de la puerta%' OR `nombre` LIKE '%de la puerta%'<{{{><}}}> OR `segundoNombre` LIKE '%de la puerta%' OR `apellido` LIKE '%de la puerta%' OR `suffix` LIKE '%de la puerta%' OR `codigo` LIKE '%de la puerta%'<{{{><}}}> OR `nacionalidad` LIKE '%de la puerta%' OR `email1` LIKE '%de la puerta%' OR `email2` LIKE '%de la puerta%' OR `telefono` LIKE '%de la puerta%'<{{{><}}}> OR `tipoTelefono` LIKE '%de la puerta%' OR `telefono2` LIKE '%de la puerta%' OR CAST(`nacimiento` AS CHAR) LIKE '%de la puerta%'<{{{><}}}> OR `identidad` LIKE '%de la puerta%' OR `licencia` LIKE '%de la puerta%' OR `codigoCliente` LIKE '%de la puerta%' OR `instructorvuelo` LIKE '%de la puerta%'<{{{><}}}> OR `instructorMCC` LIKE '%de la puerta%' OR `instructorSuelo` LIKE '%de la puerta%' OR `examinador` LIKE '%de la puerta%'<{{{><}}}> OR `AOC` LIKE '%de la puerta%' OR `direccion` LIKE '%de la puerta%' OR `direccion2` LIKE '%de la puerta%' OR `codigoPostal` LIKE '%de la puerta%'<{{{><}}}> OR `provincia` LIKE '%de la puerta%' OR `poblacion` LIKE '%de la puerta%' OR `nombreEm` LIKE '%de la puerta%' OR `apellidoEm` LIKE '%de la puerta%'<{{{><}}}> OR `telefonoEm` LIKE '%de la puerta%' OR `emailEm` LIKE '%de la puerta%' OR `relacion` LIKE '%de la puerta%' OR `comentarios` LIKE '%de la puerta%'<{{{><}}}> OR `notas` LIKE '%de la puerta%' OR `proffile` LIKE '%de la puerta%' OR `basePrincipal` LIKE '%de la puerta%' OR `baseSeg` LIKE '%de la puerta%'<{{{><}}}> OR CAST(`temFrom` AS CHAR) LIKE '%de la puerta%' OR CAST(`temTo` AS CHAR) LIKE '%de la puerta%' OR `autoInvoice` LIKE '%de la puerta%'<{{{><}}}> OR `imagen_name` LIKE '%de la puerta%' OR `active` LIKE '%de la puerta%' OR `carrier` LIKE '%de la puerta%' OR `groups` LIKE '%de la puerta%'<{{{><}}}> OR `status` LIKE '%de la puerta%' OR `tipo` LIKE '%de la puerta%' OR `lang` LIKE '%de la puerta%' OR `flySolo` LIKE '%de la puerta%'<{{{><}}}> OR `flyPax` LIKE '%de la puerta%' OR `pais` LIKE '%de la puerta%'
Servers\aerodynamics.com.es\admin_aerodynamics|personas\RecentFilters\4<|||>1<|||>`idPersona` LIKE '%puerta%' OR `idPrivateRadar` LIKE '%puerta%' OR `idUsuario` LIKE '%puerta%' OR `idtipo` LIKE '%puerta%'<{{{><}}}> OR `idperfil` LIKE '%puerta%' OR `idpuesto` LIKE '%puerta%' OR `titulo` LIKE '%puerta%' OR `nombre` LIKE '%puerta%' OR `segundoNombre` LIKE '%puerta%'<{{{><}}}> OR `apellido` LIKE '%puerta%' OR `suffix` LIKE '%puerta%' OR `codigo` LIKE '%puerta%' OR `nacionalidad` LIKE '%puerta%'<{{{><}}}> OR `email1` LIKE '%puerta%' OR `email2` LIKE '%puerta%' OR `telefono` LIKE '%puerta%' OR `tipoTelefono` LIKE '%puerta%'<{{{><}}}> OR `telefono2` LIKE '%puerta%' OR CAST(`nacimiento` AS CHAR) LIKE '%puerta%' OR `identidad` LIKE '%puerta%' OR `licencia` LIKE '%puerta%'<{{{><}}}> OR `codigoCliente` LIKE '%puerta%' OR `instructorvuelo` LIKE '%puerta%' OR `instructorMCC` LIKE '%puerta%' OR `instructorSuelo` LIKE '%puerta%'<{{{><}}}> OR `examinador` LIKE '%puerta%' OR `AOC` LIKE '%puerta%' OR `direccion` LIKE '%puerta%' OR `direccion2` LIKE '%puerta%'<{{{><}}}> OR `codigoPostal` LIKE '%puerta%' OR `provincia` LIKE '%puerta%' OR `poblacion` LIKE '%puerta%' OR `nombreEm` LIKE '%puerta%'<{{{><}}}> OR `apellidoEm` LIKE '%puerta%' OR `telefonoEm` LIKE '%puerta%' OR `emailEm` LIKE '%puerta%' OR `relacion` LIKE '%puerta%'<{{{><}}}> OR `comentarios` LIKE '%puerta%' OR `notas` LIKE '%puerta%' OR `proffile` LIKE '%puerta%' OR `basePrincipal` LIKE '%puerta%'<{{{><}}}> OR `baseSeg` LIKE '%puerta%' OR CAST(`temFrom` AS CHAR) LIKE '%puerta%' OR CAST(`temTo` AS CHAR) LIKE '%puerta%' OR `autoInvoice` LIKE '%puerta%'<{{{><}}}> OR `imagen_name` LIKE '%puerta%' OR `active` LIKE '%puerta%' OR `carrier` LIKE '%puerta%' OR `groups` LIKE '%puerta%'<{{{><}}}> OR `status` LIKE '%puerta%' OR `tipo` LIKE '%puerta%' OR `lang` LIKE '%puerta%' OR `flySolo` LIKE '%puerta%' OR `flyPax` LIKE '%puerta%'<{{{><}}}> OR `pais` LIKE '%puerta%'
Servers\aerodynamics.com.es\admin_aerodynamics|personas\RecentFilters\5<|||>1<|||>`idPersona` LIKE '%yuri%' OR `idPrivateRadar` LIKE '%yuri%' OR `idUsuario` LIKE '%yuri%' OR `idtipo` LIKE '%yuri%' OR `idperfil` LIKE '%yuri%'<{{{><}}}> OR `idpuesto` LIKE '%yuri%' OR `titulo` LIKE '%yuri%' OR `nombre` LIKE '%yuri%' OR `segundoNombre` LIKE '%yuri%' OR `apellido` LIKE '%yuri%'<{{{><}}}> OR `suffix` LIKE '%yuri%' OR `codigo` LIKE '%yuri%' OR `nacionalidad` LIKE '%yuri%' OR `email1` LIKE '%yuri%' OR `email2` LIKE '%yuri%'<{{{><}}}> OR `telefono` LIKE '%yuri%' OR `tipoTelefono` LIKE '%yuri%' OR `telefono2` LIKE '%yuri%' OR CAST(`nacimiento` AS CHAR) LIKE '%yuri%'<{{{><}}}> OR `identidad` LIKE '%yuri%' OR `licencia` LIKE '%yuri%' OR `codigoCliente` LIKE '%yuri%' OR `instructorvuelo` LIKE '%yuri%'<{{{><}}}> OR `instructorMCC` LIKE '%yuri%' OR `instructorSuelo` LIKE '%yuri%' OR `examinador` LIKE '%yuri%' OR `AOC` LIKE '%yuri%'<{{{><}}}> OR `direccion` LIKE '%yuri%' OR `direccion2` LIKE '%yuri%' OR `codigoPostal` LIKE '%yuri%' OR `provincia` LIKE '%yuri%'<{{{><}}}> OR `poblacion` LIKE '%yuri%' OR `nombreEm` LIKE '%yuri%' OR `apellidoEm` LIKE '%yuri%' OR `telefonoEm` LIKE '%yuri%'<{{{><}}}> OR `emailEm` LIKE '%yuri%' OR `relacion` LIKE '%yuri%' OR `comentarios` LIKE '%yuri%' OR `notas` LIKE '%yuri%' OR `proffile` LIKE '%yuri%'<{{{><}}}> OR `basePrincipal` LIKE '%yuri%' OR `baseSeg` LIKE '%yuri%' OR CAST(`temFrom` AS CHAR) LIKE '%yuri%' OR CAST(`temTo` AS CHAR) LIKE '%yuri%'<{{{><}}}> OR `autoInvoice` LIKE '%yuri%' OR `imagen_name` LIKE '%yuri%' OR `active` LIKE '%yuri%' OR `carrier` LIKE '%yuri%' OR `groups` LIKE '%yuri%'<{{{><}}}> OR `status` LIKE '%yuri%' OR `tipo` LIKE '%yuri%' OR `lang` LIKE '%yuri%' OR `flySolo` LIKE '%yuri%' OR `flyPax` LIKE '%yuri%'<{{{><}}}> OR `pais` LIKE '%yuri%'
Servers\aerodynamics.com.es\admin_aerodynamics|personas\RecentFilters\6<|||>1<|||>`idPersona` LIKE '%31264%' OR `idPrivateRadar` LIKE '%31264%' OR `idUsuario` LIKE '%31264%' OR `idtipo` LIKE '%31264%'<{{{><}}}> OR `idperfil` LIKE '%31264%' OR `idpuesto` LIKE '%31264%' OR `titulo` LIKE '%31264%' OR `nombre` LIKE '%31264%' OR `segundoNombre` LIKE '%31264%'<{{{><}}}> OR `apellido` LIKE '%31264%' OR `suffix` LIKE '%31264%' OR `codigo` LIKE '%31264%' OR `nacionalidad` LIKE '%31264%' OR `email1` LIKE '%31264%'<{{{><}}}> OR `email2` LIKE '%31264%' OR `telefono` LIKE '%31264%' OR `tipoTelefono` LIKE '%31264%' OR `telefono2` LIKE '%31264%'<{{{><}}}> OR CAST(`nacimiento` AS CHAR) LIKE '%31264%' OR `identidad` LIKE '%31264%' OR `licencia` LIKE '%31264%' OR `codigoCliente` LIKE '%31264%'<{{{><}}}> OR `instructorvuelo` LIKE '%31264%' OR `instructorMCC` LIKE '%31264%' OR `instructorSuelo` LIKE '%31264%' OR `examinador` LIKE '%31264%'<{{{><}}}> OR `AOC` LIKE '%31264%' OR `direccion` LIKE '%31264%' OR `direccion2` LIKE '%31264%' OR `codigoPostal` LIKE '%31264%'<{{{><}}}> OR `provincia` LIKE '%31264%' OR `poblacion` LIKE '%31264%' OR `nombreEm` LIKE '%31264%' OR `apellidoEm` LIKE '%31264%'<{{{><}}}> OR `telefonoEm` LIKE '%31264%' OR `emailEm` LIKE '%31264%' OR `relacion` LIKE '%31264%' OR `comentarios` LIKE '%31264%'<{{{><}}}> OR `notas` LIKE '%31264%' OR `proffile` LIKE '%31264%' OR `basePrincipal` LIKE '%31264%' OR `baseSeg` LIKE '%31264%'<{{{><}}}> OR CAST(`temFrom` AS CHAR) LIKE '%31264%' OR CAST(`temTo` AS CHAR) LIKE '%31264%' OR `autoInvoice` LIKE '%31264%' OR `imagen_name` LIKE '%31264%'<{{{><}}}> OR `active` LIKE '%31264%' OR `carrier` LIKE '%31264%' OR `groups` LIKE '%31264%' OR `status` LIKE '%31264%' OR `tipo` LIKE '%31264%'<{{{><}}}> OR `lang` LIKE '%31264%' OR `flySolo` LIKE '%31264%' OR `flyPax` LIKE '%31264%' OR `pais` LIKE '%31264%'
Servers\aerodynamics.com.es\admin_aerodynamics|personas\RecentFilters\7<|||>1<|||>`idPersona` LIKE '%Nuria%' OR `idPrivateRadar` LIKE '%Nuria%' OR `idUsuario` LIKE '%Nuria%' OR `idtipo` LIKE '%Nuria%'<{{{><}}}> OR `idperfil` LIKE '%Nuria%' OR `idpuesto` LIKE '%Nuria%' OR `titulo` LIKE '%Nuria%' OR `nombre` LIKE '%Nuria%' OR `segundoNombre` LIKE '%Nuria%'<{{{><}}}> OR `apellido` LIKE '%Nuria%' OR `suffix` LIKE '%Nuria%' OR `codigo` LIKE '%Nuria%' OR `nacionalidad` LIKE '%Nuria%' OR `email1` LIKE '%Nuria%'<{{{><}}}> OR `email2` LIKE '%Nuria%' OR `telefono` LIKE '%Nuria%' OR `tipoTelefono` LIKE '%Nuria%' OR `telefono2` LIKE '%Nuria%'<{{{><}}}> OR CAST(`nacimiento` AS CHAR) LIKE '%Nuria%' OR `identidad` LIKE '%Nuria%' OR `licencia` LIKE '%Nuria%' OR `codigoCliente` LIKE '%Nuria%'<{{{><}}}> OR `instructorvuelo` LIKE '%Nuria%' OR `instructorMCC` LIKE '%Nuria%' OR `instructorSuelo` LIKE '%Nuria%' OR `examinador` LIKE '%Nuria%'<{{{><}}}> OR `AOC` LIKE '%Nuria%' OR `direccion` LIKE '%Nuria%' OR `direccion2` LIKE '%Nuria%' OR `codigoPostal` LIKE '%Nuria%'<{{{><}}}> OR `provincia` LIKE '%Nuria%' OR `poblacion` LIKE '%Nuria%' OR `nombreEm` LIKE '%Nuria%' OR `apellidoEm` LIKE '%Nuria%'<{{{><}}}> OR `telefonoEm` LIKE '%Nuria%' OR `emailEm` LIKE '%Nuria%' OR `relacion` LIKE '%Nuria%' OR `comentarios` LIKE '%Nuria%'<{{{><}}}> OR `notas` LIKE '%Nuria%' OR `proffile` LIKE '%Nuria%' OR `basePrincipal` LIKE '%Nuria%' OR `baseSeg` LIKE '%Nuria%'<{{{><}}}> OR CAST(`temFrom` AS CHAR) LIKE '%Nuria%' OR CAST(`temTo` AS CHAR) LIKE '%Nuria%' OR `autoInvoice` LIKE '%Nuria%' OR `imagen_name` LIKE '%Nuria%'<{{{><}}}> OR `active` LIKE '%Nuria%' OR `carrier` LIKE '%Nuria%' OR `groups` LIKE '%Nuria%' OR `status` LIKE '%Nuria%' OR `tipo` LIKE '%Nuria%'<{{{><}}}> OR `lang` LIKE '%Nuria%' OR `flySolo` LIKE '%Nuria%' OR `flyPax` LIKE '%Nuria%' OR `pais` LIKE '%Nuria%'
Servers\aerodynamics.com.es\admin_aerodynamics|personas\RecentFilters\8<|||>1<|||>`idPersona` LIKE '%3252%' OR `idPrivateRadar` LIKE '%3252%' OR `idUsuario` LIKE '%3252%'<{{{><}}}> OR `idtipo` LIKE '%3252%' OR `idperfil` LIKE '%3252%' OR `idpuesto` LIKE '%3252%' OR `titulo` LIKE '%3252%'<{{{><}}}> OR `nombre` LIKE '%3252%' OR `segundoNombre` LIKE '%3252%' OR `apellido` LIKE '%3252%' OR `suffix` LIKE '%3252%'<{{{><}}}> OR `codigo` LIKE '%3252%' OR `nacionalidad` LIKE '%3252%' OR `email1` LIKE '%3252%' OR `email2` LIKE '%3252%'<{{{><}}}> OR `telefono` LIKE '%3252%' OR `tipoTelefono` LIKE '%3252%' OR `telefono2` LIKE '%3252%'<{{{><}}}> OR CAST(`nacimiento` AS CHAR) LIKE '%3252%' OR `identidad` LIKE '%3252%' OR `licencia` LIKE '%3252%'<{{{><}}}> OR `codigoCliente` LIKE '%3252%' OR `instructorvuelo` LIKE '%3252%' OR `instructorMCC` LIKE '%3252%'<{{{><}}}> OR `instructorSuelo` LIKE '%3252%' OR `examinador` LIKE '%3252%' OR `AOC` LIKE '%3252%'<{{{><}}}> OR `direccion` LIKE '%3252%' OR `direccion2` LIKE '%3252%' OR `codigoPostal` LIKE '%3252%'<{{{><}}}> OR `provincia` LIKE '%3252%' OR `poblacion` LIKE '%3252%' OR `nombreEm` LIKE '%3252%' OR `apellidoEm` LIKE '%3252%'<{{{><}}}> OR `telefonoEm` LIKE '%3252%' OR `emailEm` LIKE '%3252%' OR `relacion` LIKE '%3252%' OR `comentarios` LIKE '%3252%'<{{{><}}}> OR `notas` LIKE '%3252%' OR `proffile` LIKE '%3252%' OR `basePrincipal` LIKE '%3252%' OR `baseSeg` LIKE '%3252%'<{{{><}}}> OR CAST(`temFrom` AS CHAR) LIKE '%3252%' OR CAST(`temTo` AS CHAR) LIKE '%3252%' OR `autoInvoice` LIKE '%3252%'<{{{><}}}> OR `imagen_name` LIKE '%3252%' OR `active` LIKE '%3252%' OR `carrier` LIKE '%3252%' OR `groups` LIKE '%3252%'<{{{><}}}> OR `status` LIKE '%3252%' OR `tipo` LIKE '%3252%' OR `lang` LIKE '%3252%' OR `flySolo` LIKE '%3252%'<{{{><}}}> OR `flyPax` LIKE '%3252%' OR `pais` LIKE '%3252%'
Servers\aerodynamics.com.es\admin_aerodynamics|personas\RecentFilters\9<|||>1<|||>`idPersona` LIKE '%fernando%' OR `idPrivateRadar` LIKE '%fernando%' OR `idUsuario` LIKE '%fernando%'<{{{><}}}> OR `idtipo` LIKE '%fernando%' OR `idperfil` LIKE '%fernando%' OR `idpuesto` LIKE '%fernando%'<{{{><}}}> OR `titulo` LIKE '%fernando%' OR `nombre` LIKE '%fernando%' OR `segundoNombre` LIKE '%fernando%'<{{{><}}}> OR `apellido` LIKE '%fernando%' OR `suffix` LIKE '%fernando%' OR `codigo` LIKE '%fernando%'<{{{><}}}> OR `nacionalidad` LIKE '%fernando%' OR `email1` LIKE '%fernando%' OR `email2` LIKE '%fernando%'<{{{><}}}> OR `telefono` LIKE '%fernando%' OR `tipoTelefono` LIKE '%fernando%' OR `telefono2` LIKE '%fernando%'<{{{><}}}> OR CAST(`nacimiento` AS CHAR) LIKE '%fernando%' OR `identidad` LIKE '%fernando%' OR `licencia` LIKE '%fernando%'<{{{><}}}> OR `codigoCliente` LIKE '%fernando%' OR `instructorvuelo` LIKE '%fernando%' OR `instructorMCC` LIKE '%fernando%'<{{{><}}}> OR `instructorSuelo` LIKE '%fernando%' OR `examinador` LIKE '%fernando%' OR `AOC` LIKE '%fernando%'<{{{><}}}> OR `direccion` LIKE '%fernando%' OR `direccion2` LIKE '%fernando%' OR `codigoPostal` LIKE '%fernando%'<{{{><}}}> OR `provincia` LIKE '%fernando%' OR `poblacion` LIKE '%fernando%' OR `nombreEm` LIKE '%fernando%'<{{{><}}}> OR `apellidoEm` LIKE '%fernando%' OR `telefonoEm` LIKE '%fernando%' OR `emailEm` LIKE '%fernando%'<{{{><}}}> OR `relacion` LIKE '%fernando%' OR `comentarios` LIKE '%fernando%' OR `notas` LIKE '%fernando%'<{{{><}}}> OR `proffile` LIKE '%fernando%' OR `basePrincipal` LIKE '%fernando%' OR `baseSeg` LIKE '%fernando%'<{{{><}}}> OR CAST(`temFrom` AS CHAR) LIKE '%fernando%' OR CAST(`temTo` AS CHAR) LIKE '%fernando%'<{{{><}}}> OR `autoInvoice` LIKE '%fernando%' OR `imagen_name` LIKE '%fernando%' OR `active` LIKE '%fernando%'<{{{><}}}> OR `carrier` LIKE '%fernando%' OR `groups` LIKE '%fernando%' OR `status` LIKE '%fernando%'<{{{><}}}> OR `tipo` LIKE '%fernando%' OR `lang` LIKE '%fernando%' OR `flySolo` LIKE '%fernando%' OR `flyPax` LIKE '%fernando%'<{{{><}}}> OR `pais` LIKE '%fernando%'
Servers\aerodynamics.com.es\admin_aerodynamics|personas\RecentFilters\10<|||>1<|||>`idPersona` LIKE '%garrido%' OR `idPrivateRadar` LIKE '%garrido%' OR `idUsuario` LIKE '%garrido%'<{{{><}}}> OR `idtipo` LIKE '%garrido%' OR `idperfil` LIKE '%garrido%' OR `idpuesto` LIKE '%garrido%'<{{{><}}}> OR `titulo` LIKE '%garrido%' OR `nombre` LIKE '%garrido%' OR `segundoNombre` LIKE '%garrido%'<{{{><}}}> OR `apellido` LIKE '%garrido%' OR `suffix` LIKE '%garrido%' OR `codigo` LIKE '%garrido%'<{{{><}}}> OR `nacionalidad` LIKE '%garrido%' OR `email1` LIKE '%garrido%' OR `email2` LIKE '%garrido%'<{{{><}}}> OR `telefono` LIKE '%garrido%' OR `tipoTelefono` LIKE '%garrido%' OR `telefono2` LIKE '%garrido%'<{{{><}}}> OR CAST(`nacimiento` AS CHAR) LIKE '%garrido%' OR `identidad` LIKE '%garrido%' OR `licencia` LIKE '%garrido%'<{{{><}}}> OR `codigoCliente` LIKE '%garrido%' OR `instructorvuelo` LIKE '%garrido%' OR `instructorMCC` LIKE '%garrido%'<{{{><}}}> OR `instructorSuelo` LIKE '%garrido%' OR `examinador` LIKE '%garrido%' OR `AOC` LIKE '%garrido%'<{{{><}}}> OR `direccion` LIKE '%garrido%' OR `direccion2` LIKE '%garrido%' OR `codigoPostal` LIKE '%garrido%'<{{{><}}}> OR `provincia` LIKE '%garrido%' OR `poblacion` LIKE '%garrido%' OR `nombreEm` LIKE '%garrido%'<{{{><}}}> OR `apellidoEm` LIKE '%garrido%' OR `telefonoEm` LIKE '%garrido%' OR `emailEm` LIKE '%garrido%'<{{{><}}}> OR `relacion` LIKE '%garrido%' OR `comentarios` LIKE '%garrido%' OR `notas` LIKE '%garrido%'<{{{><}}}> OR `proffile` LIKE '%garrido%' OR `basePrincipal` LIKE '%garrido%' OR `baseSeg` LIKE '%garrido%'<{{{><}}}> OR CAST(`temFrom` AS CHAR) LIKE '%garrido%' OR CAST(`temTo` AS CHAR) LIKE '%garrido%' OR `autoInvoice` LIKE '%garrido%'<{{{><}}}> OR `imagen_name` LIKE '%garrido%' OR `active` LIKE '%garrido%' OR `carrier` LIKE '%garrido%'<{{{><}}}> OR `groups` LIKE '%garrido%' OR `status` LIKE '%garrido%' OR `tipo` LIKE '%garrido%' OR `lang` LIKE '%garrido%'<{{{><}}}> OR `flySolo` LIKE '%garrido%' OR `flyPax` LIKE '%garrido%' OR `pais` LIKE '%garrido%'
Servers\aerodynamics.com.es\admin_aerodynamics|personas\RecentFilters\11<|||>1<|||>`idPersona` LIKE '%wassi%' OR `idPrivateRadar` LIKE '%wassi%' OR `idUsuario` LIKE '%wassi%'<{{{><}}}> OR `idtipo` LIKE '%wassi%' OR `idperfil` LIKE '%wassi%' OR `idpuesto` LIKE '%wassi%' OR `titulo` LIKE '%wassi%'<{{{><}}}> OR `nombre` LIKE '%wassi%' OR `segundoNombre` LIKE '%wassi%' OR `apellido` LIKE '%wassi%'<{{{><}}}> OR `suffix` LIKE '%wassi%' OR `codigo` LIKE '%wassi%' OR `nacionalidad` LIKE '%wassi%' OR `email1` LIKE '%wassi%'<{{{><}}}> OR `email2` LIKE '%wassi%' OR `telefono` LIKE '%wassi%' OR `tipoTelefono` LIKE '%wassi%'<{{{><}}}> OR `telefono2` LIKE '%wassi%' OR CAST(`nacimiento` AS CHAR) LIKE '%wassi%' OR `identidad` LIKE '%wassi%'<{{{><}}}> OR `licencia` LIKE '%wassi%' OR `codigoCliente` LIKE '%wassi%' OR `instructorvuelo` LIKE '%wassi%'<{{{><}}}> OR `instructorMCC` LIKE '%wassi%' OR `instructorSuelo` LIKE '%wassi%' OR `examinador` LIKE '%wassi%'<{{{><}}}> OR `AOC` LIKE '%wassi%' OR `direccion` LIKE '%wassi%' OR `direccion2` LIKE '%wassi%' OR `codigoPostal` LIKE '%wassi%'<{{{><}}}> OR `provincia` LIKE '%wassi%' OR `poblacion` LIKE '%wassi%' OR `nombreEm` LIKE '%wassi%'<{{{><}}}> OR `apellidoEm` LIKE '%wassi%' OR `telefonoEm` LIKE '%wassi%' OR `emailEm` LIKE '%wassi%'<{{{><}}}> OR `relacion` LIKE '%wassi%' OR `comentarios` LIKE '%wassi%' OR `notas` LIKE '%wassi%' OR `proffile` LIKE '%wassi%'<{{{><}}}> OR `basePrincipal` LIKE '%wassi%' OR `baseSeg` LIKE '%wassi%' OR CAST(`temFrom` AS CHAR) LIKE '%wassi%'<{{{><}}}> OR CAST(`temTo` AS CHAR) LIKE '%wassi%' OR `autoInvoice` LIKE '%wassi%' OR `imagen_name` LIKE '%wassi%'<{{{><}}}> OR `active` LIKE '%wassi%' OR `carrier` LIKE '%wassi%' OR `groups` LIKE '%wassi%' OR `status` LIKE '%wassi%'<{{{><}}}> OR `tipo` LIKE '%wassi%' OR `lang` LIKE '%wassi%' OR `flySolo` LIKE '%wassi%' OR `flyPax` LIKE '%wassi%'<{{{><}}}> OR `pais` LIKE '%wassi%'
Servers\aerodynamics.com.es\admin_aerodynamics|personas\RecentFilters\12<|||>1<|||>`idPersona` LIKE '%wassiv%' OR `idPrivateRadar` LIKE '%wassiv%' OR `idUsuario` LIKE '%wassiv%'<{{{><}}}> OR `idtipo` LIKE '%wassiv%' OR `idperfil` LIKE '%wassiv%' OR `idpuesto` LIKE '%wassiv%' OR `titulo` LIKE '%wassiv%'<{{{><}}}> OR `nombre` LIKE '%wassiv%' OR `segundoNombre` LIKE '%wassiv%' OR `apellido` LIKE '%wassiv%'<{{{><}}}> OR `suffix` LIKE '%wassiv%' OR `codigo` LIKE '%wassiv%' OR `nacionalidad` LIKE '%wassiv%'<{{{><}}}> OR `email1` LIKE '%wassiv%' OR `email2` LIKE '%wassiv%' OR `telefono` LIKE '%wassiv%' OR `tipoTelefono` LIKE '%wassiv%'<{{{><}}}> OR `telefono2` LIKE '%wassiv%' OR CAST(`nacimiento` AS CHAR) LIKE '%wassiv%' OR `identidad` LIKE '%wassiv%'<{{{><}}}> OR `licencia` LIKE '%wassiv%' OR `codigoCliente` LIKE '%wassiv%' OR `instructorvuelo` LIKE '%wassiv%'<{{{><}}}> OR `instructorMCC` LIKE '%wassiv%' OR `instructorSuelo` LIKE '%wassiv%' OR `examinador` LIKE '%wassiv%'<{{{><}}}> OR `AOC` LIKE '%wassiv%' OR `direccion` LIKE '%wassiv%' OR `direccion2` LIKE '%wassiv%' OR `codigoPostal` LIKE '%wassiv%'<{{{><}}}> OR `provincia` LIKE '%wassiv%' OR `poblacion` LIKE '%wassiv%' OR `nombreEm` LIKE '%wassiv%'<{{{><}}}> OR `apellidoEm` LIKE '%wassiv%' OR `telefonoEm` LIKE '%wassiv%' OR `emailEm` LIKE '%wassiv%'<{{{><}}}> OR `relacion` LIKE '%wassiv%' OR `comentarios` LIKE '%wassiv%' OR `notas` LIKE '%wassiv%'<{{{><}}}> OR `proffile` LIKE '%wassiv%' OR `basePrincipal` LIKE '%wassiv%' OR `baseSeg` LIKE '%wassiv%'<{{{><}}}> OR CAST(`temFrom` AS CHAR) LIKE '%wassiv%' OR CAST(`temTo` AS CHAR) LIKE '%wassiv%' OR `autoInvoice` LIKE '%wassiv%'<{{{><}}}> OR `imagen_name` LIKE '%wassiv%' OR `active` LIKE '%wassiv%' OR `carrier` LIKE '%wassiv%'<{{{><}}}> OR `groups` LIKE '%wassiv%' OR `status` LIKE '%wassiv%' OR `tipo` LIKE '%wassiv%' OR `lang` LIKE '%wassiv%'<{{{><}}}> OR `flySolo` LIKE '%wassiv%' OR `flyPax` LIKE '%wassiv%' OR `pais` LIKE '%wassiv%'
Servers\aerodynamics.com.es\admin_aerodynamics|personas\RecentFilters\13<|||>1<|||>`idPersona` LIKE '%bonilla%' OR `idPrivateRadar` LIKE '%bonilla%' OR `idUsuario` LIKE '%bonilla%' OR `idtipo` LIKE '%bonilla%'<{{{><}}}> OR `idperfil` LIKE '%bonilla%' OR `idpuesto` LIKE '%bonilla%' OR `titulo` LIKE '%bonilla%' OR `nombre` LIKE '%bonilla%'<{{{><}}}> OR `segundoNombre` LIKE '%bonilla%' OR `apellido` LIKE '%bonilla%' OR `suffix` LIKE '%bonilla%' OR `codigo` LIKE '%bonilla%'<{{{><}}}> OR `nacionalidad` LIKE '%bonilla%' OR `email1` LIKE '%bonilla%' OR `email2` LIKE '%bonilla%' OR `telefono` LIKE '%bonilla%'<{{{><}}}> OR `tipoTelefono` LIKE '%bonilla%' OR `telefono2` LIKE '%bonilla%' OR CAST(`nacimiento` AS CHAR) LIKE '%bonilla%' OR `identidad` LIKE '%bonilla%'<{{{><}}}> OR `licencia` LIKE '%bonilla%' OR `codigoCliente` LIKE '%bonilla%' OR `instructorvuelo` LIKE '%bonilla%' OR `instructorMCC` LIKE '%bonilla%'<{{{><}}}> OR `instructorSuelo` LIKE '%bonilla%' OR `examinador` LIKE '%bonilla%' OR `AOC` LIKE '%bonilla%' OR `direccion` LIKE '%bonilla%'<{{{><}}}> OR `direccion2` LIKE '%bonilla%' OR `codigoPostal` LIKE '%bonilla%' OR `provincia` LIKE '%bonilla%' OR `poblacion` LIKE '%bonilla%'<{{{><}}}> OR `nombreEm` LIKE '%bonilla%' OR `apellidoEm` LIKE '%bonilla%' OR `telefonoEm` LIKE '%bonilla%' OR `emailEm` LIKE '%bonilla%'<{{{><}}}> OR `relacion` LIKE '%bonilla%' OR `comentarios` LIKE '%bonilla%' OR `notas` LIKE '%bonilla%' OR `proffile` LIKE '%bonilla%'<{{{><}}}> OR `basePrincipal` LIKE '%bonilla%' OR `baseSeg` LIKE '%bonilla%' OR CAST(`temFrom` AS CHAR) LIKE '%bonilla%' OR CAST(`temTo` AS CHAR) LIKE '%bonilla%'<{{{><}}}> OR `autoInvoice` LIKE '%bonilla%' OR `imagen_name` LIKE '%bonilla%' OR `active` LIKE '%bonilla%' OR `carrier` LIKE '%bonilla%'<{{{><}}}> OR `groups` LIKE '%bonilla%' OR `status` LIKE '%bonilla%' OR `tipo` LIKE '%bonilla%' OR `lang` LIKE '%bonilla%' OR `flySolo` LIKE '%bonilla%'<{{{><}}}> OR `flyPax` LIKE '%bonilla%' OR `pais` LIKE '%bonilla%'
Servers\aerodynamics.com.es\admin_aerodynamics|personas\RecentFilters\14<|||>1<|||>`idPersona` LIKE '%bonilla%' OR `idPrivateRadar` LIKE '%bonilla%' OR `idUsuario` LIKE '%bonilla%' OR `idtipo` LIKE '%bonilla%'<{{{><}}}> OR `idperfil` LIKE '%bonilla%' OR `idpuesto` LIKE '%bonilla%' OR `titulo` LIKE '%bonilla%' OR `nombre` LIKE '%bonilla%'<{{{><}}}> OR `segundoNombre` LIKE '%bonilla%' OR `apellido` LIKE '%bonilla%' OR `suffix` LIKE '%bonilla%' OR `codigo` LIKE '%bonilla%'<{{{><}}}> OR `nacionalidad` LIKE '%bonilla%' OR `email1` LIKE '%bonilla%' OR `email2` LIKE '%bonilla%' OR `telefono` LIKE '%bonilla%'<{{{><}}}> OR `tipoTelefono` LIKE '%bonilla%' OR `telefono2` LIKE '%bonilla%' OR CAST(`nacimiento` AS CHAR) LIKE '%bonilla%'<{{{><}}}> OR `identidad` LIKE '%bonilla%' OR `licencia` LIKE '%bonilla%' OR `codigoCliente` LIKE '%bonilla%' OR `instructorvuelo` LIKE '%bonilla%'<{{{><}}}> OR `instructorMCC` LIKE '%bonilla%' OR `instructorSuelo` LIKE '%bonilla%' OR `examinador` LIKE '%bonilla%' OR `AOC` LIKE '%bonilla%'<{{{><}}}> OR `direccion` LIKE '%bonilla%' OR `direccion2` LIKE '%bonilla%' OR `codigoPostal` LIKE '%bonilla%' OR `provincia` LIKE '%bonilla%'<{{{><}}}> OR `poblacion` LIKE '%bonilla%' OR `nombreEm` LIKE '%bonilla%' OR `apellidoEm` LIKE '%bonilla%' OR `telefonoEm` LIKE '%bonilla%'<{{{><}}}> OR `emailEm` LIKE '%bonilla%' OR `relacion` LIKE '%bonilla%' OR `comentarios` LIKE '%bonilla%' OR `notas` LIKE '%bonilla%'<{{{><}}}> OR `proffile` LIKE '%bonilla%' OR `basePrincipal` LIKE '%bonilla%' OR `baseSeg` LIKE '%bonilla%' OR CAST(`temFrom` AS CHAR) LIKE '%bonilla%'<{{{><}}}> OR CAST(`temTo` AS CHAR) LIKE '%bonilla%' OR `autoInvoice` LIKE '%bonilla%' OR `imagen_name` LIKE '%bonilla%'<{{{><}}}> OR `active` LIKE '%bonilla%' OR `carrier` LIKE '%bonilla%' OR `groups` LIKE '%bonilla%' OR `status` LIKE '%bonilla%'<{{{><}}}> OR `tipo` LIKE '%bonilla%' OR `lang` LIKE '%bonilla%' OR `flySolo` LIKE '%bonilla%' OR `flyPax` LIKE '%bonilla%'<{{{><}}}> OR `pais` LIKE '%bonilla%'
Servers\aerodynamics.com.es\admin_aerodynamics|personas_curso\Filter<|||>1<|||>`id` LIKE '%5373%' OR `idCurso` LIKE '%5373%' OR `idPersona` LIKE '%5373%' OR CAST(`tiempoTotal` AS CHAR) LIKE '%5373%' OR CAST(`tiempoBloque` AS CHAR) LIKE '%5373%'<{{{><}}}> OR CAST(`tiempoVuelo` AS CHAR) LIKE '%5373%' OR `progreso` LIKE '%5373%' OR `coste` LIKE '%5373%' OR `pagado` LIKE '%5373%'<{{{><}}}>
Servers\aerodynamics.com.es\admin_aerodynamics|personas_curso\RecentFilters\1<|||>1<|||>`id` LIKE '%5373%' OR `idCurso` LIKE '%5373%' OR `idPersona` LIKE '%5373%' OR CAST(`tiempoTotal` AS CHAR) LIKE '%5373%' OR CAST(`tiempoBloque` AS CHAR) LIKE '%5373%'<{{{><}}}> OR CAST(`tiempoVuelo` AS CHAR) LIKE '%5373%' OR `progreso` LIKE '%5373%' OR `coste` LIKE '%5373%' OR `pagado` LIKE '%5373%'
Servers\aerodynamics.com.es\admin_aerodynamics|personas_rutas_vuelos_automatizacion\RecentFilters\1<|||>1<|||>`id` LIKE '%16553%' OR `idreserva` LIKE '%16553%' OR `matricula` LIKE '%16553%' OR CAST(`despegue` AS CHAR) LIKE '%16553%'<{{{><}}}> OR CAST(`aterrizaje` AS CHAR) LIKE '%16553%' OR CAST(`arranque` AS CHAR) LIKE '%16553%' OR CAST(`parada` AS CHAR) LIKE '%16553%'<{{{><}}}> OR CAST(`block` AS CHAR) LIKE '%16553%' OR CAST(`airborne` AS CHAR) LIKE '%16553%' OR CAST(`fecha` AS CHAR) LIKE '%16553%'<{{{><}}}> OR CAST(`rodaje` AS CHAR) LIKE '%16553%' OR `pax` LIKE '%16553%' OR CAST(`tiempototal` AS CHAR) LIKE '%16553%' OR `hobbsout` LIKE '%16553%'<{{{><}}}> OR `hobbsin` LIKE '%16553%' OR `tachout` LIKE '%16553%' OR `tachin` LIKE '%16553%' OR `lugarsalida` LIKE '%16553%' OR `lugarllegada` LIKE '%16553%'<{{{><}}}> OR `idpiloto` LIKE '%16553%' OR `tipopiloto` LIKE '%16553%' OR `idinstructor` LIKE '%16553%' OR `tipoinstructor` LIKE '%16553%'<{{{><}}}> OR `idleccion` LIKE '%16553%' OR `evaluado` LIKE '%16553%' OR `totalaterrizajes` LIKE '%16553%' OR `aterrizajevisual` LIKE '%16553%'<{{{><}}}> OR `aterrizajeprecis` LIKE '%16553%' OR `aterrizajenonprecis` LIKE '%16553%' OR `aterrizajecircl` LIKE '%16553%' OR `aterrizajegoaround` LIKE '%16553%'<{{{><}}}> OR `meteodespegue` LIKE '%16553%' OR `meteoaterrizaje` LIKE '%16553%' OR `repostajeantesvuelo` LIKE '%16553%' OR `fullantesvuelo` LIKE '%16553%'<{{{><}}}> OR `repostajedespuesvuelo` LIKE '%16553%' OR `fulldespuesvuelo` LIKE '%16553%' OR `comentarios` LIKE '%16553%' OR `problemastecnicos` LIKE '%16553%'<{{{><}}}> OR `evaluacion` LIKE '%16553%' OR CAST(`timeDayVFR` AS CHAR) LIKE '%16553%' OR CAST(`timeNightVFR` AS CHAR) LIKE '%16553%'<{{{><}}}> OR CAST(`timeDayIFR` AS CHAR) LIKE '%16553%' OR CAST(`timeNightIFR` AS CHAR) LIKE '%16553%' OR CAST(`timeSimulatedIFR` AS CHAR) LIKE '%16553%'<{{{><}}}> OR CAST(`timeXC` AS CHAR) LIKE '%16553%' OR `idVuelo` LIKE '%16553%' OR `res_tipoVuelo` LIKE '%16553%' OR `res_tipoVista` LIKE '%16553%'<{{{><}}}> OR `res_tipoSalida` LIKE '%16553%' OR `res_tipoMomento` LIKE '%16553%' OR `evaluacionGeneral` LIKE '%16553%'
Servers\aerodynamics.com.es\admin_aerodynamics|personas_vuelos_automatizacion\Sort<|||>1<|||>1_id|0_fecha|
Servers\aerodynamics.com.es\admin_aerodynamics|personas_vuelos_automatizacion\Filter<|||>1<|||>`id` LIKE '%695%' OR `idreserva` LIKE '%695%' OR `matricula` LIKE '%695%' OR CAST(`despegue` AS CHAR) LIKE '%695%' OR CAST(`aterrizaje` AS CHAR) LIKE '%695%'<{{{><}}}> OR CAST(`arranque` AS CHAR) LIKE '%695%' OR CAST(`parada` AS CHAR) LIKE '%695%' OR CAST(`block` AS CHAR) LIKE '%695%' OR CAST(`airborne` AS CHAR) LIKE '%695%'<{{{><}}}> OR CAST(`fecha` AS CHAR) LIKE '%695%' OR CAST(`rodaje` AS CHAR) LIKE '%695%' OR `pax` LIKE '%695%' OR CAST(`tiempototal` AS CHAR) LIKE '%695%'<{{{><}}}> OR `hobbsout` LIKE '%695%' OR `hobbsin` LIKE '%695%' OR `tachout` LIKE '%695%' OR `tachin` LIKE '%695%' OR `lugarsalida` LIKE '%695%'<{{{><}}}> OR `lugarllegada` LIKE '%695%' OR `idpiloto` LIKE '%695%' OR `tipopiloto` LIKE '%695%' OR `idinstructor` LIKE '%695%' OR `tipoinstructor` LIKE '%695%'<{{{><}}}> OR `idleccion` LIKE '%695%' OR `evaluado` LIKE '%695%' OR `totalaterrizajes` LIKE '%695%' OR `aterrizajevisual` LIKE '%695%'<{{{><}}}> OR `aterrizajeprecis` LIKE '%695%' OR `aterrizajenonprecis` LIKE '%695%' OR `aterrizajecircl` LIKE '%695%' OR `aterrizajegoaround` LIKE '%695%'<{{{><}}}> OR `meteodespegue` LIKE '%695%' OR `meteoaterrizaje` LIKE '%695%' OR `repostajeantesvuelo` LIKE '%695%' OR `fullantesvuelo` LIKE '%695%'<{{{><}}}> OR `repostajedespuesvuelo` LIKE '%695%' OR `fulldespuesvuelo` LIKE '%695%' OR `comentarios` LIKE '%695%' OR `problemastecnicos` LIKE '%695%'<{{{><}}}> OR `evaluacion` LIKE '%695%' OR CAST(`timeDayVFR` AS CHAR) LIKE '%695%' OR CAST(`timeNightVFR` AS CHAR) LIKE '%695%' OR CAST(`timeDayIFR` AS CHAR) LIKE '%695%'<{{{><}}}> OR CAST(`timeNightIFR` AS CHAR) LIKE '%695%' OR CAST(`timeSimulatedIFR` AS CHAR) LIKE '%695%' OR CAST(`timeXC` AS CHAR) LIKE '%695%'<{{{><}}}> OR `res_tipoVuelo` LIKE '%695%' OR `res_tipoVista` LIKE '%695%' OR `res_tipoSalida` LIKE '%695%' OR `res_tipoMomento` LIKE '%695%'<{{{><}}}> OR `idcurso` LIKE '%695%' OR `superado` LIKE '%695%' OR `evaluacionGeneral` LIKE '%695%' OR `idavion` LIKE '%695%' OR CAST(`taxi` AS CHAR) LIKE '%695%'<{{{><}}}>
Servers\aerodynamics.com.es\admin_aerodynamics|personas_vuelos_automatizacion\RecentFilters\1<|||>1<|||>`id` LIKE '%695%' OR `idreserva` LIKE '%695%' OR `matricula` LIKE '%695%' OR CAST(`despegue` AS CHAR) LIKE '%695%' OR CAST(`aterrizaje` AS CHAR) LIKE '%695%'<{{{><}}}> OR CAST(`arranque` AS CHAR) LIKE '%695%' OR CAST(`parada` AS CHAR) LIKE '%695%' OR CAST(`block` AS CHAR) LIKE '%695%' OR CAST(`airborne` AS CHAR) LIKE '%695%'<{{{><}}}> OR CAST(`fecha` AS CHAR) LIKE '%695%' OR CAST(`rodaje` AS CHAR) LIKE '%695%' OR `pax` LIKE '%695%' OR CAST(`tiempototal` AS CHAR) LIKE '%695%'<{{{><}}}> OR `hobbsout` LIKE '%695%' OR `hobbsin` LIKE '%695%' OR `tachout` LIKE '%695%' OR `tachin` LIKE '%695%' OR `lugarsalida` LIKE '%695%'<{{{><}}}> OR `lugarllegada` LIKE '%695%' OR `idpiloto` LIKE '%695%' OR `tipopiloto` LIKE '%695%' OR `idinstructor` LIKE '%695%' OR `tipoinstructor` LIKE '%695%'<{{{><}}}> OR `idleccion` LIKE '%695%' OR `evaluado` LIKE '%695%' OR `totalaterrizajes` LIKE '%695%' OR `aterrizajevisual` LIKE '%695%'<{{{><}}}> OR `aterrizajeprecis` LIKE '%695%' OR `aterrizajenonprecis` LIKE '%695%' OR `aterrizajecircl` LIKE '%695%' OR `aterrizajegoaround` LIKE '%695%'<{{{><}}}> OR `meteodespegue` LIKE '%695%' OR `meteoaterrizaje` LIKE '%695%' OR `repostajeantesvuelo` LIKE '%695%' OR `fullantesvuelo` LIKE '%695%'<{{{><}}}> OR `repostajedespuesvuelo` LIKE '%695%' OR `fulldespuesvuelo` LIKE '%695%' OR `comentarios` LIKE '%695%' OR `problemastecnicos` LIKE '%695%'<{{{><}}}> OR `evaluacion` LIKE '%695%' OR CAST(`timeDayVFR` AS CHAR) LIKE '%695%' OR CAST(`timeNightVFR` AS CHAR) LIKE '%695%' OR CAST(`timeDayIFR` AS CHAR) LIKE '%695%'<{{{><}}}> OR CAST(`timeNightIFR` AS CHAR) LIKE '%695%' OR CAST(`timeSimulatedIFR` AS CHAR) LIKE '%695%' OR CAST(`timeXC` AS CHAR) LIKE '%695%'<{{{><}}}> OR `res_tipoVuelo` LIKE '%695%' OR `res_tipoVista` LIKE '%695%' OR `res_tipoSalida` LIKE '%695%' OR `res_tipoMomento` LIKE '%695%'<{{{><}}}> OR `idcurso` LIKE '%695%' OR `superado` LIKE '%695%' OR `evaluacionGeneral` LIKE '%695%' OR `idavion` LIKE '%695%' OR CAST(`taxi` AS CHAR) LIKE '%695%'
Servers\aerodynamics.com.es\admin_aerodynamics|personas_vuelos_automatizacion\RecentFilters\2<|||>1<|||>`id` LIKE '%151%' OR `idreserva` LIKE '%151%' OR `matricula` LIKE '%151%' OR CAST(`despegue` AS CHAR) LIKE '%151%' OR CAST(`aterrizaje` AS CHAR) LIKE '%151%'<{{{><}}}> OR CAST(`arranque` AS CHAR) LIKE '%151%' OR CAST(`parada` AS CHAR) LIKE '%151%' OR CAST(`block` AS CHAR) LIKE '%151%'<{{{><}}}> OR CAST(`airborne` AS CHAR) LIKE '%151%' OR CAST(`fecha` AS CHAR) LIKE '%151%' OR CAST(`rodaje` AS CHAR) LIKE '%151%'<{{{><}}}> OR `pax` LIKE '%151%' OR CAST(`tiempototal` AS CHAR) LIKE '%151%' OR `hobbsout` LIKE '%151%' OR `hobbsin` LIKE '%151%'<{{{><}}}> OR `tachout` LIKE '%151%' OR `tachin` LIKE '%151%' OR `lugarsalida` LIKE '%151%' OR `lugarllegada` LIKE '%151%' OR `idpiloto` LIKE '%151%'<{{{><}}}> OR `tipopiloto` LIKE '%151%' OR `idinstructor` LIKE '%151%' OR `tipoinstructor` LIKE '%151%' OR `idleccion` LIKE '%151%'<{{{><}}}> OR `evaluado` LIKE '%151%' OR `totalaterrizajes` LIKE '%151%' OR `aterrizajevisual` LIKE '%151%' OR `aterrizajeprecis` LIKE '%151%'<{{{><}}}> OR `aterrizajenonprecis` LIKE '%151%' OR `aterrizajecircl` LIKE '%151%' OR `aterrizajegoaround` LIKE '%151%' OR `meteodespegue` LIKE '%151%'<{{{><}}}> OR `meteoaterrizaje` LIKE '%151%' OR `repostajeantesvuelo` LIKE '%151%' OR `fullantesvuelo` LIKE '%151%' OR `repostajedespuesvuelo` LIKE '%151%'<{{{><}}}> OR `fulldespuesvuelo` LIKE '%151%' OR `comentarios` LIKE '%151%' OR `problemastecnicos` LIKE '%151%' OR `evaluacion` LIKE '%151%'<{{{><}}}> OR CAST(`timeDayVFR` AS CHAR) LIKE '%151%' OR CAST(`timeNightVFR` AS CHAR) LIKE '%151%' OR CAST(`timeDayIFR` AS CHAR) LIKE '%151%'<{{{><}}}> OR CAST(`timeNightIFR` AS CHAR) LIKE '%151%' OR CAST(`timeSimulatedIFR` AS CHAR) LIKE '%151%' OR CAST(`timeXC` AS CHAR) LIKE '%151%'<{{{><}}}> OR `res_tipoVuelo` LIKE '%151%' OR `res_tipoVista` LIKE '%151%' OR `res_tipoSalida` LIKE '%151%' OR `res_tipoMomento` LIKE '%151%'<{{{><}}}> OR `idcurso` LIKE '%151%' OR `superado` LIKE '%151%' OR `evaluacionGeneral` LIKE '%151%' OR `idavion` LIKE '%151%'
Servers\aerodynamics.com.es\admin_aerodynamics|personas_vuelos_automatizacion\RecentFilters\3<|||>1<|||>`id` LIKE '%617%' OR `idreserva` LIKE '%617%' OR `matricula` LIKE '%617%' OR CAST(`despegue` AS CHAR) LIKE '%617%' OR CAST(`aterrizaje` AS CHAR) LIKE '%617%'<{{{><}}}> OR CAST(`arranque` AS CHAR) LIKE '%617%' OR CAST(`parada` AS CHAR) LIKE '%617%' OR CAST(`block` AS CHAR) LIKE '%617%'<{{{><}}}> OR CAST(`airborne` AS CHAR) LIKE '%617%' OR CAST(`fecha` AS CHAR) LIKE '%617%' OR CAST(`rodaje` AS CHAR) LIKE '%617%'<{{{><}}}> OR `pax` LIKE '%617%' OR CAST(`tiempototal` AS CHAR) LIKE '%617%' OR `hobbsout` LIKE '%617%' OR `hobbsin` LIKE '%617%'<{{{><}}}> OR `tachout` LIKE '%617%' OR `tachin` LIKE '%617%' OR `lugarsalida` LIKE '%617%' OR `lugarllegada` LIKE '%617%' OR `idpiloto` LIKE '%617%'<{{{><}}}> OR `tipopiloto` LIKE '%617%' OR `idinstructor` LIKE '%617%' OR `tipoinstructor` LIKE '%617%' OR `idleccion` LIKE '%617%'<{{{><}}}> OR `evaluado` LIKE '%617%' OR `totalaterrizajes` LIKE '%617%' OR `aterrizajevisual` LIKE '%617%' OR `aterrizajeprecis` LIKE '%617%'<{{{><}}}> OR `aterrizajenonprecis` LIKE '%617%' OR `aterrizajecircl` LIKE '%617%' OR `aterrizajegoaround` LIKE '%617%' OR `meteodespegue` LIKE '%617%'<{{{><}}}> OR `meteoaterrizaje` LIKE '%617%' OR `repostajeantesvuelo` LIKE '%617%' OR `fullantesvuelo` LIKE '%617%' OR `repostajedespuesvuelo` LIKE '%617%'<{{{><}}}> OR `fulldespuesvuelo` LIKE '%617%' OR `comentarios` LIKE '%617%' OR `problemastecnicos` LIKE '%617%' OR `evaluacion` LIKE '%617%'<{{{><}}}> OR CAST(`timeDayVFR` AS CHAR) LIKE '%617%' OR CAST(`timeNightVFR` AS CHAR) LIKE '%617%' OR CAST(`timeDayIFR` AS CHAR) LIKE '%617%'<{{{><}}}> OR CAST(`timeNightIFR` AS CHAR) LIKE '%617%' OR CAST(`timeSimulatedIFR` AS CHAR) LIKE '%617%' OR CAST(`timeXC` AS CHAR) LIKE '%617%'<{{{><}}}> OR `res_tipoVuelo` LIKE '%617%' OR `res_tipoVista` LIKE '%617%' OR `res_tipoSalida` LIKE '%617%' OR `res_tipoMomento` LIKE '%617%'<{{{><}}}> OR `idcurso` LIKE '%617%' OR `superado` LIKE '%617%' OR `evaluacionGeneral` LIKE '%617%' OR `idavion` LIKE '%617%'
Servers\aerodynamics.com.es\admin_aerodynamics|personas_vuelos_automatizacion\RecentFilters\4<|||>1<|||>`id` LIKE '%615%' OR `idreserva` LIKE '%615%' OR `matricula` LIKE '%615%' OR CAST(`despegue` AS CHAR) LIKE '%615%' OR CAST(`aterrizaje` AS CHAR) LIKE '%615%'<{{{><}}}> OR CAST(`arranque` AS CHAR) LIKE '%615%' OR CAST(`parada` AS CHAR) LIKE '%615%' OR CAST(`block` AS CHAR) LIKE '%615%'<{{{><}}}> OR CAST(`airborne` AS CHAR) LIKE '%615%' OR CAST(`fecha` AS CHAR) LIKE '%615%' OR CAST(`rodaje` AS CHAR) LIKE '%615%'<{{{><}}}> OR `pax` LIKE '%615%' OR CAST(`tiempototal` AS CHAR) LIKE '%615%' OR `hobbsout` LIKE '%615%' OR `hobbsin` LIKE '%615%'<{{{><}}}> OR `tachout` LIKE '%615%' OR `tachin` LIKE '%615%' OR `lugarsalida` LIKE '%615%' OR `lugarllegada` LIKE '%615%' OR `idpiloto` LIKE '%615%'<{{{><}}}> OR `tipopiloto` LIKE '%615%' OR `idinstructor` LIKE '%615%' OR `tipoinstructor` LIKE '%615%' OR `idleccion` LIKE '%615%'<{{{><}}}> OR `evaluado` LIKE '%615%' OR `totalaterrizajes` LIKE '%615%' OR `aterrizajevisual` LIKE '%615%' OR `aterrizajeprecis` LIKE '%615%'<{{{><}}}> OR `aterrizajenonprecis` LIKE '%615%' OR `aterrizajecircl` LIKE '%615%' OR `aterrizajegoaround` LIKE '%615%' OR `meteodespegue` LIKE '%615%'<{{{><}}}> OR `meteoaterrizaje` LIKE '%615%' OR `repostajeantesvuelo` LIKE '%615%' OR `fullantesvuelo` LIKE '%615%' OR `repostajedespuesvuelo` LIKE '%615%'<{{{><}}}> OR `fulldespuesvuelo` LIKE '%615%' OR `comentarios` LIKE '%615%' OR `problemastecnicos` LIKE '%615%' OR `evaluacion` LIKE '%615%'<{{{><}}}> OR CAST(`timeDayVFR` AS CHAR) LIKE '%615%' OR CAST(`timeNightVFR` AS CHAR) LIKE '%615%' OR CAST(`timeDayIFR` AS CHAR) LIKE '%615%'<{{{><}}}> OR CAST(`timeNightIFR` AS CHAR) LIKE '%615%' OR CAST(`timeSimulatedIFR` AS CHAR) LIKE '%615%' OR CAST(`timeXC` AS CHAR) LIKE '%615%'<{{{><}}}> OR `res_tipoVuelo` LIKE '%615%' OR `res_tipoVista` LIKE '%615%' OR `res_tipoSalida` LIKE '%615%' OR `res_tipoMomento` LIKE '%615%'<{{{><}}}> OR `idcurso` LIKE '%615%' OR `superado` LIKE '%615%' OR `evaluacionGeneral` LIKE '%615%'
Servers\aerodynamics.com.es\admin_aerodynamics|personas_vuelos_automatizacion\RecentFilters\5<|||>1<|||>`id` LIKE '%618%' OR `idreserva` LIKE '%618%' OR `matricula` LIKE '%618%' OR CAST(`despegue` AS CHAR) LIKE '%618%' OR CAST(`aterrizaje` AS CHAR) LIKE '%618%'<{{{><}}}> OR CAST(`arranque` AS CHAR) LIKE '%618%' OR CAST(`parada` AS CHAR) LIKE '%618%' OR CAST(`block` AS CHAR) LIKE '%618%' OR CAST(`airborne` AS CHAR) LIKE '%618%'<{{{><}}}> OR CAST(`fecha` AS CHAR) LIKE '%618%' OR CAST(`rodaje` AS CHAR) LIKE '%618%' OR `pax` LIKE '%618%' OR CAST(`tiempototal` AS CHAR) LIKE '%618%'<{{{><}}}> OR `hobbsout` LIKE '%618%' OR `hobbsin` LIKE '%618%' OR `tachout` LIKE '%618%' OR `tachin` LIKE '%618%' OR `lugarsalida` LIKE '%618%'<{{{><}}}> OR `lugarllegada` LIKE '%618%' OR `idpiloto` LIKE '%618%' OR `tipopiloto` LIKE '%618%' OR `idinstructor` LIKE '%618%' OR `tipoinstructor` LIKE '%618%'<{{{><}}}> OR `idleccion` LIKE '%618%' OR `evaluado` LIKE '%618%' OR `totalaterrizajes` LIKE '%618%' OR `aterrizajevisual` LIKE '%618%'<{{{><}}}> OR `aterrizajeprecis` LIKE '%618%' OR `aterrizajenonprecis` LIKE '%618%' OR `aterrizajecircl` LIKE '%618%' OR `aterrizajegoaround` LIKE '%618%'<{{{><}}}> OR `meteodespegue` LIKE '%618%' OR `meteoaterrizaje` LIKE '%618%' OR `repostajeantesvuelo` LIKE '%618%' OR `fullantesvuelo` LIKE '%618%'<{{{><}}}> OR `repostajedespuesvuelo` LIKE '%618%' OR `fulldespuesvuelo` LIKE '%618%' OR `comentarios` LIKE '%618%' OR `problemastecnicos` LIKE '%618%'<{{{><}}}> OR `evaluacion` LIKE '%618%' OR CAST(`timeDayVFR` AS CHAR) LIKE '%618%' OR CAST(`timeNightVFR` AS CHAR) LIKE '%618%' OR CAST(`timeDayIFR` AS CHAR) LIKE '%618%'<{{{><}}}> OR CAST(`timeNightIFR` AS CHAR) LIKE '%618%' OR CAST(`timeSimulatedIFR` AS CHAR) LIKE '%618%' OR CAST(`timeXC` AS CHAR) LIKE '%618%'<{{{><}}}> OR `res_tipoVuelo` LIKE '%618%' OR `res_tipoVista` LIKE '%618%' OR `res_tipoSalida` LIKE '%618%' OR `res_tipoMomento` LIKE '%618%'<{{{><}}}> OR `idcurso` LIKE '%618%' OR `superado` LIKE '%618%' OR `evaluacionGeneral` LIKE '%618%'
Servers\aerodynamics.com.es\admin_aerodynamics|personas_vuelos_automatizacion\RecentFilters\6<|||>1<|||>`id` LIKE '%16553%' OR `idreserva` LIKE '%16553%' OR `matricula` LIKE '%16553%' OR CAST(`despegue` AS CHAR) LIKE '%16553%'<{{{><}}}> OR CAST(`aterrizaje` AS CHAR) LIKE '%16553%' OR CAST(`arranque` AS CHAR) LIKE '%16553%' OR CAST(`parada` AS CHAR) LIKE '%16553%'<{{{><}}}> OR CAST(`block` AS CHAR) LIKE '%16553%' OR CAST(`airborne` AS CHAR) LIKE '%16553%' OR CAST(`fecha` AS CHAR) LIKE '%16553%'<{{{><}}}> OR CAST(`rodaje` AS CHAR) LIKE '%16553%' OR `pax` LIKE '%16553%' OR CAST(`tiempototal` AS CHAR) LIKE '%16553%' OR `hobbsout` LIKE '%16553%'<{{{><}}}> OR `hobbsin` LIKE '%16553%' OR `tachout` LIKE '%16553%' OR `tachin` LIKE '%16553%' OR `lugarsalida` LIKE '%16553%' OR `lugarllegada` LIKE '%16553%'<{{{><}}}> OR `idpiloto` LIKE '%16553%' OR `tipopiloto` LIKE '%16553%' OR `idinstructor` LIKE '%16553%' OR `tipoinstructor` LIKE '%16553%'<{{{><}}}> OR `idleccion` LIKE '%16553%' OR `evaluado` LIKE '%16553%' OR `totalaterrizajes` LIKE '%16553%' OR `aterrizajevisual` LIKE '%16553%'<{{{><}}}> OR `aterrizajeprecis` LIKE '%16553%' OR `aterrizajenonprecis` LIKE '%16553%' OR `aterrizajecircl` LIKE '%16553%' OR `aterrizajegoaround` LIKE '%16553%'<{{{><}}}> OR `meteodespegue` LIKE '%16553%' OR `meteoaterrizaje` LIKE '%16553%' OR `repostajeantesvuelo` LIKE '%16553%' OR `fullantesvuelo` LIKE '%16553%'<{{{><}}}> OR `repostajedespuesvuelo` LIKE '%16553%' OR `fulldespuesvuelo` LIKE '%16553%' OR `comentarios` LIKE '%16553%' OR `problemastecnicos` LIKE '%16553%'<{{{><}}}> OR `evaluacion` LIKE '%16553%' OR CAST(`timeDayVFR` AS CHAR) LIKE '%16553%' OR CAST(`timeNightVFR` AS CHAR) LIKE '%16553%'<{{{><}}}> OR CAST(`timeDayIFR` AS CHAR) LIKE '%16553%' OR CAST(`timeNightIFR` AS CHAR) LIKE '%16553%' OR CAST(`timeSimulatedIFR` AS CHAR) LIKE '%16553%'<{{{><}}}> OR CAST(`timeXC` AS CHAR) LIKE '%16553%' OR `res_tipoVuelo` LIKE '%16553%' OR `res_tipoVista` LIKE '%16553%' OR `res_tipoSalida` LIKE '%16553%'<{{{><}}}> OR `res_tipoMomento` LIKE '%16553%' OR `idcurso` LIKE '%16553%' OR `superado` LIKE '%16553%'
Servers\aerodynamics.com.es\admin_aerodynamics|personas_vuelos_automatizacion\RecentFilters\7<|||>1<|||>`id` LIKE '%622%' OR `idreserva` LIKE '%622%' OR `matricula` LIKE '%622%' OR CAST(`despegue` AS CHAR) LIKE '%622%' OR CAST(`aterrizaje` AS CHAR) LIKE '%622%'<{{{><}}}> OR CAST(`arranque` AS CHAR) LIKE '%622%' OR CAST(`parada` AS CHAR) LIKE '%622%' OR CAST(`block` AS CHAR) LIKE '%622%'<{{{><}}}> OR CAST(`airborne` AS CHAR) LIKE '%622%' OR CAST(`fecha` AS CHAR) LIKE '%622%' OR CAST(`rodaje` AS CHAR) LIKE '%622%'<{{{><}}}> OR `pax` LIKE '%622%' OR CAST(`tiempototal` AS CHAR) LIKE '%622%' OR `hobbsout` LIKE '%622%' OR `hobbsin` LIKE '%622%'<{{{><}}}> OR `tachout` LIKE '%622%' OR `tachin` LIKE '%622%' OR `lugarsalida` LIKE '%622%' OR `lugarllegada` LIKE '%622%' OR `idpiloto` LIKE '%622%'<{{{><}}}> OR `tipopiloto` LIKE '%622%' OR `idinstructor` LIKE '%622%' OR `tipoinstructor` LIKE '%622%' OR `idleccion` LIKE '%622%'<{{{><}}}> OR `evaluado` LIKE '%622%' OR `totalaterrizajes` LIKE '%622%' OR `aterrizajevisual` LIKE '%622%' OR `aterrizajeprecis` LIKE '%622%'<{{{><}}}> OR `aterrizajenonprecis` LIKE '%622%' OR `aterrizajecircl` LIKE '%622%' OR `aterrizajegoaround` LIKE '%622%' OR `meteodespegue` LIKE '%622%'<{{{><}}}> OR `meteoaterrizaje` LIKE '%622%' OR `repostajeantesvuelo` LIKE '%622%' OR `fullantesvuelo` LIKE '%622%' OR `repostajedespuesvuelo` LIKE '%622%'<{{{><}}}> OR `fulldespuesvuelo` LIKE '%622%' OR `comentarios` LIKE '%622%' OR `problemastecnicos` LIKE '%622%' OR `evaluacion` LIKE '%622%'<{{{><}}}> OR CAST(`timeDayVFR` AS CHAR) LIKE '%622%' OR CAST(`timeNightVFR` AS CHAR) LIKE '%622%' OR CAST(`timeDayIFR` AS CHAR) LIKE '%622%'<{{{><}}}> OR CAST(`timeNightIFR` AS CHAR) LIKE '%622%' OR CAST(`timeSimulatedIFR` AS CHAR) LIKE '%622%' OR CAST(`timeXC` AS CHAR) LIKE '%622%'<{{{><}}}> OR `res_tipoVuelo` LIKE '%622%' OR `res_tipoVista` LIKE '%622%' OR `res_tipoSalida` LIKE '%622%' OR `res_tipoMomento` LIKE '%622%'<{{{><}}}> OR `idcurso` LIKE '%622%' OR `superado` LIKE '%622%'
Servers\aerodynamics.com.es\admin_aerodynamics|personas_vuelos_automatizacion\RecentFilters\8<|||>1<|||>`id` LIKE '%629%' OR `idreserva` LIKE '%629%' OR `matricula` LIKE '%629%' OR CAST(`despegue` AS CHAR) LIKE '%629%' OR CAST(`aterrizaje` AS CHAR) LIKE '%629%'<{{{><}}}> OR CAST(`arranque` AS CHAR) LIKE '%629%' OR CAST(`parada` AS CHAR) LIKE '%629%' OR CAST(`block` AS CHAR) LIKE '%629%' OR CAST(`airborne` AS CHAR) LIKE '%629%'<{{{><}}}> OR CAST(`fecha` AS CHAR) LIKE '%629%' OR CAST(`rodaje` AS CHAR) LIKE '%629%' OR `pax` LIKE '%629%' OR CAST(`tiempototal` AS CHAR) LIKE '%629%'<{{{><}}}> OR `hobbsout` LIKE '%629%' OR `hobbsin` LIKE '%629%' OR `tachout` LIKE '%629%' OR `tachin` LIKE '%629%' OR `lugarsalida` LIKE '%629%'<{{{><}}}> OR `lugarllegada` LIKE '%629%' OR `idpiloto` LIKE '%629%' OR `tipopiloto` LIKE '%629%' OR `idinstructor` LIKE '%629%' OR `tipoinstructor` LIKE '%629%'<{{{><}}}> OR `idleccion` LIKE '%629%' OR `evaluado` LIKE '%629%' OR `totalaterrizajes` LIKE '%629%' OR `aterrizajevisual` LIKE '%629%'<{{{><}}}> OR `aterrizajeprecis` LIKE '%629%' OR `aterrizajenonprecis` LIKE '%629%' OR `aterrizajecircl` LIKE '%629%' OR `aterrizajegoaround` LIKE '%629%'<{{{><}}}> OR `meteodespegue` LIKE '%629%' OR `meteoaterrizaje` LIKE '%629%' OR `repostajeantesvuelo` LIKE '%629%' OR `fullantesvuelo` LIKE '%629%'<{{{><}}}> OR `repostajedespuesvuelo` LIKE '%629%' OR `fulldespuesvuelo` LIKE '%629%' OR `comentarios` LIKE '%629%' OR `problemastecnicos` LIKE '%629%'<{{{><}}}> OR `evaluacion` LIKE '%629%' OR CAST(`timeDayVFR` AS CHAR) LIKE '%629%' OR CAST(`timeNightVFR` AS CHAR) LIKE '%629%' OR CAST(`timeDayIFR` AS CHAR) LIKE '%629%'<{{{><}}}> OR CAST(`timeNightIFR` AS CHAR) LIKE '%629%' OR CAST(`timeSimulatedIFR` AS CHAR) LIKE '%629%' OR CAST(`timeXC` AS CHAR) LIKE '%629%'<{{{><}}}> OR `res_tipoVuelo` LIKE '%629%' OR `res_tipoVista` LIKE '%629%' OR `res_tipoSalida` LIKE '%629%' OR `res_tipoMomento` LIKE '%629%'<{{{><}}}> OR `idcurso` LIKE '%629%' OR `superado` LIKE '%629%'
Servers\aerodynamics.com.es\admin_aerodynamics|personas_vuelos_automatizacion\RecentFilters\9<|||>1<|||>`id` LIKE '%151%' OR `idreserva` LIKE '%151%' OR `matricula` LIKE '%151%' OR CAST(`despegue` AS CHAR) LIKE '%151%' OR CAST(`aterrizaje` AS CHAR) LIKE '%151%'<{{{><}}}> OR CAST(`arranque` AS CHAR) LIKE '%151%' OR CAST(`parada` AS CHAR) LIKE '%151%' OR CAST(`block` AS CHAR) LIKE '%151%'<{{{><}}}> OR CAST(`airborne` AS CHAR) LIKE '%151%' OR CAST(`fecha` AS CHAR) LIKE '%151%' OR CAST(`rodaje` AS CHAR) LIKE '%151%'<{{{><}}}> OR `pax` LIKE '%151%' OR CAST(`tiempototal` AS CHAR) LIKE '%151%' OR `hobbsout` LIKE '%151%' OR `hobbsin` LIKE '%151%'<{{{><}}}> OR `tachout` LIKE '%151%' OR `tachin` LIKE '%151%' OR `lugarsalida` LIKE '%151%' OR `lugarllegada` LIKE '%151%' OR `idpiloto` LIKE '%151%'<{{{><}}}> OR `tipopiloto` LIKE '%151%' OR `idinstructor` LIKE '%151%' OR `tipoinstructor` LIKE '%151%' OR `idleccion` LIKE '%151%'<{{{><}}}> OR `evaluado` LIKE '%151%' OR `totalaterrizajes` LIKE '%151%' OR `aterrizajevisual` LIKE '%151%' OR `aterrizajeprecis` LIKE '%151%'<{{{><}}}> OR `aterrizajenonprecis` LIKE '%151%' OR `aterrizajecircl` LIKE '%151%' OR `aterrizajegoaround` LIKE '%151%' OR `meteodespegue` LIKE '%151%'<{{{><}}}> OR `meteoaterrizaje` LIKE '%151%' OR `repostajeantesvuelo` LIKE '%151%' OR `fullantesvuelo` LIKE '%151%' OR `repostajedespuesvuelo` LIKE '%151%'<{{{><}}}> OR `fulldespuesvuelo` LIKE '%151%' OR `comentarios` LIKE '%151%' OR `problemastecnicos` LIKE '%151%' OR `evaluacion` LIKE '%151%'<{{{><}}}> OR CAST(`timeDayVFR` AS CHAR) LIKE '%151%' OR CAST(`timeNightVFR` AS CHAR) LIKE '%151%' OR CAST(`timeDayIFR` AS CHAR) LIKE '%151%'<{{{><}}}> OR CAST(`timeNightIFR` AS CHAR) LIKE '%151%' OR CAST(`timeSimulatedIFR` AS CHAR) LIKE '%151%' OR CAST(`timeXC` AS CHAR) LIKE '%151%'<{{{><}}}> OR `res_tipoVuelo` LIKE '%151%' OR `res_tipoVista` LIKE '%151%' OR `res_tipoSalida` LIKE '%151%' OR `res_tipoMomento` LIKE '%151%'<{{{><}}}> OR `idcurso` LIKE '%151%'
Servers\aerodynamics.com.es\admin_aerodynamics|pilotos\RecentFilters\1<|||>1<|||>`idPiloto` LIKE '%valerio%' OR `titulo` LIKE '%valerio%' OR `nombre` LIKE '%valerio%' OR `segundoNombre` LIKE '%valerio%'<{{{><}}}> OR `apellido` LIKE '%valerio%' OR `suffix` LIKE '%valerio%' OR `codigo` LIKE '%valerio%'<{{{><}}}> OR `nacionalidad` LIKE '%valerio%' OR `emailuno` LIKE '%valerio%' OR `emailDos` LIKE '%valerio%'<{{{><}}}> OR `telefono` LIKE '%valerio%' OR `tipoTelefono` LIKE '%valerio%' OR `telefonoDos` LIKE '%valerio%'<{{{><}}}> OR CAST(`nacimiento` AS CHAR) LIKE '%valerio%' OR `numeroId` LIKE '%valerio%' OR `licencia` LIKE '%valerio%'<{{{><}}}> OR `codigoCliente` LIKE '%valerio%' OR `instructorvuelo` LIKE '%valerio%' OR `instructorMCC` LIKE '%valerio%'<{{{><}}}> OR `instructorSuelo` LIKE '%valerio%' OR `examinador` LIKE '%valerio%' OR `AOC` LIKE '%valerio%'<{{{><}}}> OR `direccion` LIKE '%valerio%' OR `direccionDos` LIKE '%valerio%' OR `codigoPostal` LIKE '%valerio%'<{{{><}}}> OR `provincia` LIKE '%valerio%' OR `poblacion` LIKE '%valerio%' OR `nombreEm` LIKE '%valerio%'<{{{><}}}> OR `apellidoEm` LIKE '%valerio%' OR `telefonoEm` LIKE '%valerio%' OR `emailEm` LIKE '%valerio%'<{{{><}}}> OR `relacion` LIKE '%valerio%' OR `comentarios` LIKE '%valerio%' OR `notas` LIKE '%valerio%'<{{{><}}}> OR `proffile` LIKE '%valerio%' OR `basePrincipal` LIKE '%valerio%' OR `baseSeg` LIKE '%valerio%'<{{{><}}}> OR CAST(`temFrom` AS CHAR) LIKE '%valerio%' OR CAST(`temTo` AS CHAR) LIKE '%valerio%' OR `autoInvoice` LIKE '%valerio%'<{{{><}}}> OR `imagen_name` LIKE '%valerio%' OR `active` LIKE '%valerio%' OR `carrier` LIKE '%valerio%'<{{{><}}}> OR `groups` LIKE '%valerio%' OR `status` LIKE '%valerio%' OR `tipo` LIKE '%valerio%' OR `lang` LIKE '%valerio%'<{{{><}}}> OR `flySolo` LIKE '%valerio%' OR `flyPax` LIKE '%valerio%'
Servers\aerodynamics.com.es\admin_aerodynamics|reserva_vuelos\Sort<|||>1<|||>1_diaReserva|0_horaInicio|
Servers\aerodynamics.com.es\admin_aerodynamics|reserva_vuelos\RecentFilters\1<|||>1<|||>`idReserva` LIKE '%512%' OR CAST(`diaReserva` AS CHAR) LIKE '%512%' OR CAST(`horaInicio` AS CHAR) LIKE '%512%' OR CAST(`horaFin` AS CHAR) LIKE '%512%'<{{{><}}}> OR `idPiloto` LIKE '%512%' OR `idCopiloto` LIKE '%512%' OR `idInstructor` LIKE '%512%' OR `idAvion` LIKE '%512%' OR `idLeccion` LIKE '%512%'<{{{><}}}> OR `tipoVuelo` LIKE '%512%' OR `tipoVista` LIKE '%512%' OR `tipoSalida` LIKE '%512%' OR `tipoPiloto` LIKE '%512%' OR `tipoCopiloto` LIKE '%512%'<{{{><}}}> OR `tipoInstructor` LIKE '%512%' OR `preBriefing` LIKE '%512%' OR `postBriefing` LIKE '%512%' OR `observaciones` LIKE '%512%'<{{{><}}}> OR `repetir` LIKE '%512%' OR `confirmado` LIKE '%512%' OR CAST(`despegue` AS CHAR) LIKE '%512%' OR CAST(`aterrizaje` AS CHAR) LIKE '%512%'<{{{><}}}> OR `idCancelacion` LIKE '%512%' OR `simulador` LIKE '%512%' OR `superado` LIKE '%512%' OR `tipoMomento` LIKE '%512%'<{{{><}}}> OR `vueloEliminado` LIKE '%512%'
Servers\aerodynamics.com.es\admin_aerodynamics|usuarios\RecentFilters\1<|||>1<|||>`idUsuario` LIKE '%Nuria Paz Codesal%' OR `idPuesto` LIKE '%Nuria Paz Codesal%' OR `idPersona` LIKE '%Nuria Paz Codesal%'<{{{><}}}> OR `usuario` LIKE '%Nuria Paz Codesal%' OR `email` LIKE '%Nuria Paz Codesal%' OR `pass` LIKE '%Nuria Paz Codesal%' OR `token` LIKE '%Nuria Paz Codesal%'<{{{><}}}> OR `token_password` LIKE '%Nuria Paz Codesal%' OR `password_request` LIKE '%Nuria Paz Codesal%' OR `activacion` LIKE '%Nuria Paz Codesal%'<{{{><}}}> OR `firma` LIKE '%Nuria Paz Codesal%'
Servers\aerodynamics.com.es\admin_aerodynamics|vista_balances_persona\Filter<|||>1<|||>`idPersona` LIKE '%3246%' OR `Proformas` LIKE '%3246%' OR `Facturas` LIKE '%3246%' OR `Cobros` LIKE '%3246%' OR `Balance` LIKE '%3246%'<{{{><}}}>
Servers\aerodynamics.com.es\admin_aerodynamics|vista_balances_persona\RecentFilters\1<|||>1<|||>`idPersona` LIKE '%3246%' OR `Proformas` LIKE '%3246%' OR `Facturas` LIKE '%3246%' OR `Cobros` LIKE '%3246%' OR `Balance` LIKE '%3246%'
Servers\aerodynamics.com.es\admin_aerodynamics|vista_balances_persona\RecentFilters\2<|||>1<|||>`idPersona` LIKE '%3252%' OR `Proformas` LIKE '%3252%' OR `Facturas` LIKE '%3252%' OR `Cobros` LIKE '%3252%' OR `Balance` LIKE '%3252%'
Servers\aerodynamics.com.es\admin_aerodynamics|vista_logbook_personas_completo_resumen\Filter<|||>1<|||>`idReserva` LIKE '%5373%' OR `idVuelo` LIKE '%5373%' OR `idCurso` LIKE '%5373%' OR `DATE` LIKE '%5373%' OR `DEPARTUREPLACE` LIKE '%5373%'<{{{><}}}> OR CAST(`DEPARTURETIME` AS CHAR) LIKE '%5373%' OR `ARRIVALPLACE` LIKE '%5373%' OR CAST(`ARRIVALTIME` AS CHAR) LIKE '%5373%'<{{{><}}}> OR `AIRCRAFTMODEL` LIKE '%5373%' OR `AIRCRAFTREGISTRATION` LIKE '%5373%' OR `PICNAME` LIKE '%5373%' OR `REMARKS` LIKE '%5373%'<{{{><}}}> OR `PILOTO` LIKE '%5373%' OR `CURSO` LIKE '%5373%' OR `TOTALVUELO` LIKE '%5373%' OR `TOTALVUELODAY` LIKE '%5373%' OR `TOTALVUELONIGHT` LIKE '%5373%'<{{{><}}}> OR `SE` LIKE '%5373%' OR `ME` LIKE '%5373%' OR `XCSOLO` LIKE '%5373%' OR `XCDUAL` LIKE '%5373%' OR `VFR` LIKE '%5373%' OR `IFR` LIKE '%5373%'<{{{><}}}> OR `IFRSIM` LIKE '%5373%' OR `PIC` LIKE '%5373%' OR `COPILOT` LIKE '%5373%' OR `DUAL` LIKE '%5373%' OR `INSTRUCTOR` LIKE '%5373%'<{{{><}}}> OR `FSTD` LIKE '%5373%' OR `LANDINGSDAY` LIKE '%5373%' OR `LANDINGSNIGHT` LIKE '%5373%'<{{{><}}}>
Servers\aerodynamics.com.es\admin_aerodynamics|vista_logbook_personas_completo_resumen\RecentFilters\1<|||>1<|||>`idReserva` LIKE '%5373%' OR `idVuelo` LIKE '%5373%' OR `idCurso` LIKE '%5373%' OR `DATE` LIKE '%5373%' OR `DEPARTUREPLACE` LIKE '%5373%'<{{{><}}}> OR CAST(`DEPARTURETIME` AS CHAR) LIKE '%5373%' OR `ARRIVALPLACE` LIKE '%5373%' OR CAST(`ARRIVALTIME` AS CHAR) LIKE '%5373%'<{{{><}}}> OR `AIRCRAFTMODEL` LIKE '%5373%' OR `AIRCRAFTREGISTRATION` LIKE '%5373%' OR `PICNAME` LIKE '%5373%' OR `REMARKS` LIKE '%5373%'<{{{><}}}> OR `PILOTO` LIKE '%5373%' OR `CURSO` LIKE '%5373%' OR `TOTALVUELO` LIKE '%5373%' OR `TOTALVUELODAY` LIKE '%5373%' OR `TOTALVUELONIGHT` LIKE '%5373%'<{{{><}}}> OR `SE` LIKE '%5373%' OR `ME` LIKE '%5373%' OR `XCSOLO` LIKE '%5373%' OR `XCDUAL` LIKE '%5373%' OR `VFR` LIKE '%5373%' OR `IFR` LIKE '%5373%'<{{{><}}}> OR `IFRSIM` LIKE '%5373%' OR `PIC` LIKE '%5373%' OR `COPILOT` LIKE '%5373%' OR `DUAL` LIKE '%5373%' OR `INSTRUCTOR` LIKE '%5373%'<{{{><}}}> OR `FSTD` LIKE '%5373%' OR `LANDINGSDAY` LIKE '%5373%' OR `LANDINGSNIGHT` LIKE '%5373%'
Servers\aerodynamics.com.es\admin_aerodynamics|vista_logbook_personas_completo_total\Filter<|||>1<|||>`idReserva` LIKE '%5373%' OR `idVuelo` LIKE '%5373%' OR `idCurso` LIKE '%5373%' OR `DATE` LIKE '%5373%' OR `DEPARTUREPLACE` LIKE '%5373%'<{{{><}}}> OR `DEPARTURETIME` LIKE '%5373%' OR `ARRIVALPLACE` LIKE '%5373%' OR `ARRIVALTIME` LIKE '%5373%' OR `AIRCRAFTMODEL` LIKE '%5373%'<{{{><}}}> OR `AIRCRAFTREGISTRATION` LIKE '%5373%' OR `PICNAME` LIKE '%5373%' OR `REMARKS` LIKE '%5373%' OR `PILOTO` LIKE '%5373%' OR `CURSO` LIKE '%5373%'<{{{><}}}> OR `TOTALVUELO` LIKE '%5373%' OR `TOTALVUELODAY` LIKE '%5373%' OR `TOTALVUELONIGHT` LIKE '%5373%' OR `SE` LIKE '%5373%' OR `ME` LIKE '%5373%'<{{{><}}}> OR `XCSOLO` LIKE '%5373%' OR `XCDUAL` LIKE '%5373%' OR `VFR` LIKE '%5373%' OR `IFR` LIKE '%5373%' OR `IFRSIM` LIKE '%5373%'<{{{><}}}> OR `PIC` LIKE '%5373%' OR `COPILOT` LIKE '%5373%' OR `DUAL` LIKE '%5373%' OR `INSTRUCTOR` LIKE '%5373%' OR `FSTD` LIKE '%5373%'<{{{><}}}> OR `LANDINGSDAY` LIKE '%5373%' OR `LANDINGSNIGHT` LIKE '%5373%'<{{{><}}}>
Servers\aerodynamics.com.es\admin_aerodynamics|vista_logbook_personas_completo_total\RecentFilters\1<|||>1<|||>`idReserva` LIKE '%5373%' OR `idVuelo` LIKE '%5373%' OR `idCurso` LIKE '%5373%' OR `DATE` LIKE '%5373%' OR `DEPARTUREPLACE` LIKE '%5373%'<{{{><}}}> OR `DEPARTURETIME` LIKE '%5373%' OR `ARRIVALPLACE` LIKE '%5373%' OR `ARRIVALTIME` LIKE '%5373%' OR `AIRCRAFTMODEL` LIKE '%5373%'<{{{><}}}> OR `AIRCRAFTREGISTRATION` LIKE '%5373%' OR `PICNAME` LIKE '%5373%' OR `REMARKS` LIKE '%5373%' OR `PILOTO` LIKE '%5373%' OR `CURSO` LIKE '%5373%'<{{{><}}}> OR `TOTALVUELO` LIKE '%5373%' OR `TOTALVUELODAY` LIKE '%5373%' OR `TOTALVUELONIGHT` LIKE '%5373%' OR `SE` LIKE '%5373%' OR `ME` LIKE '%5373%'<{{{><}}}> OR `XCSOLO` LIKE '%5373%' OR `XCDUAL` LIKE '%5373%' OR `VFR` LIKE '%5373%' OR `IFR` LIKE '%5373%' OR `IFRSIM` LIKE '%5373%'<{{{><}}}> OR `PIC` LIKE '%5373%' OR `COPILOT` LIKE '%5373%' OR `DUAL` LIKE '%5373%' OR `INSTRUCTOR` LIKE '%5373%' OR `FSTD` LIKE '%5373%'<{{{><}}}> OR `LANDINGSDAY` LIKE '%5373%' OR `LANDINGSNIGHT` LIKE '%5373%'
Servers\aerodynamics.com.es\admin_aerodynamics|vista_logbook_vuelos_persona\Sort<|||>1<|||>1_AIRCRAFTREGISTRATION|
Servers\aerodynamics.com.es\admin_aerodynamics|vista_progreso_misiones_cursos_persona\Filter<|||>1<|||>`idPiloto` LIKE '%16553%' OR `id` LIKE '%16553%' OR `idCurso` LIKE '%16553%' OR `Modules` LIKE '%16553%' OR CAST(`Duration` AS CHAR) LIKE '%16553%'<{{{><}}}> OR CAST(`Flying Time` AS CHAR) LIKE '%16553%' OR `Flygths` LIKE '%16553%' OR `Check` LIKE '%16553%'<{{{><}}}>
Servers\aerodynamics.com.es\admin_aerodynamics|vista_progreso_misiones_cursos_persona\RecentFilters\1<|||>1<|||>`idPiloto` LIKE '%16553%' OR `id` LIKE '%16553%' OR `idCurso` LIKE '%16553%' OR `Modules` LIKE '%16553%' OR CAST(`Duration` AS CHAR) LIKE '%16553%'<{{{><}}}> OR CAST(`Flying Time` AS CHAR) LIKE '%16553%' OR `Flygths` LIKE '%16553%' OR `Check` LIKE '%16553%'
Servers\aerodynamics.com.es\QueryHistory\8<|||>1<|||>2021-02-04 16:04:14|admin_aerodynamics|47|SELECT idAvion,registracion,nomInstructor,modelo,(SELECT if(idInstructor IS NOT NULL,"selected","") FROM aviones_instructor WHERE idAvion=a.idAvion AND idInstructor=3564 LIMIT 1) AS seleccionado FROM aviones a
Servers\aerodynamics.com.es\QueryHistory\9<|||>1<|||>2021-02-04 16:05:04|admin_aerodynamics|47|SELECT idAvion,registracion,nomInstructor,modelo,(SELECT if(idInstructor IS NOT NULL,"selected","") FROM aviones_instructor WHERE idAvion=a.idAvion AND idInstructor=3564 GROUP BY idInstructor) AS seleccionado FROM aviones a
Servers\aerodynamics.com.es\QueryHistory\11<|||>1<|||>2021-02-08 17:34:17|admin_aerodynamics|250|SELECT * FROM vista_log_min_usuario WHERE nombre != 'tests'
Servers\aerodynamics.com.es\QueryHistory\10<|||>1<|||>2021-02-08 17:36:21|admin_aerodynamics|0|<{{{><}}}><{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\12<|||>1<|||>2021-02-08 17:36:24|admin_aerodynamics|343|<{{{><}}}>SELECT * FROM vista_log_min_usuario WHERE nombre != 'tests'<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\13<|||>1<|||>2021-02-15 15:31:52|admin_aerodynamics|155719|SELECT *,if(Apagado is not null and Arranque is not null,TIMEDIFF(Apagado, Arranque),null) as block,if(Aterrizaje is not null and Despegue is not null,TIMEDIFF(Aterrizaje, Despegue),null) as airborne FROM vista_reservas_historico_posicionamiento WHERE LESSONS not in (SELECT idreserva FROM personas_vuelos_automatizacion) AND (((1613399339)- time_to_sec(DATE_FORMAT(finReserva, "%H:%i:%s")))<=0 or (DATE<="15-02-2021" and time_to_sec(DATE_FORMAT(finReserva, "%H:%i:%s"))<=time_to_sec(DATE_FORMAT(NOW( ), "%H:%i:%S" ))))
Servers\aerodynamics.com.es\QueryHistory\14<|||>1<|||>2021-02-15 22:20:45|admin_aerodynamics|362047|select vdr.LESSONS AS LESSONS,vdr.DATE AS DATE,vdr.inicioReserva AS inicioReserva,vdr.finReserva<{{{><}}}>AS finReserva,vdr.AIRCRAFT AS AIRCRAFT,vdr.Despegue AS Despegue,vdr.Aterrizaje AS<{{{><}}}>Aterrizaje,ifnull((select max(aviones_historico_posicionamiento.Fecha) from aviones_historico_posicionamiento<{{{><}}}>where aviones_historico_posicionamiento.Matricula = convert(vdr.AIRCRAFT using utf8mb4) and<{{{><}}}>aviones_historico_posicionamiento.Fecha < vdr.Aterrizaje and aviones_historico_posicionamiento.Ignic <> 1<{{{><}}}>    order by aviones_historico_posicionamiento.Fecha limit 1),vdr.inicioReserva) AS Arranque,ifnull((select<{{{><}}}>    min(aviones_historico_posicionamiento.Fecha) from aviones_historico_posicionamiento where<{{{><}}}>    aviones_historico_posicionamiento.Matricula = convert(vdr.AIRCRAFT using utf8mb4) and<{{{><}}}>    aviones_historico_posicionamiento.Fecha > vdr.Aterrizaje and aviones_historico_posicionamiento.Ignic <><{{{><}}}>        1 order by aviones_historico_posicionamiento.Fecha limit 1),vdr.finReserva) AS Apagado from<{{{><}}}>        vista_despeguesYaterrizajes_reservas vdr WHERE finReserva >= DATE_SUB(NOW(),INTERVAL 15 DAY)
Servers\aerodynamics.com.es\QueryHistory\15<|||>1<|||>2021-02-15 22:28:18|admin_aerodynamics|63|CREATE VIEW reservas_historico_last5days as select vdr.LESSONS AS LESSONS,vdr.DATE AS DATE,vdr.inicioReserva AS inicioReserva,vdr.finReserva<{{{><}}}>AS finReserva,vdr.AIRCRAFT AS AIRCRAFT,vdr.Despegue AS Despegue,vdr.Aterrizaje AS<{{{><}}}>Aterrizaje,ifnull((select max(aviones_historico_posicionamiento.Fecha) from aviones_historico_posicionamiento<{{{><}}}>where aviones_historico_posicionamiento.Matricula = convert(vdr.AIRCRAFT using utf8mb4) and<{{{><}}}>aviones_historico_posicionamiento.Fecha < vdr.Aterrizaje and aviones_historico_posicionamiento.Ignic <> 1<{{{><}}}>    order by aviones_historico_posicionamiento.Fecha limit 1),vdr.inicioReserva) AS Arranque,ifnull((select<{{{><}}}>    min(aviones_historico_posicionamiento.Fecha) from aviones_historico_posicionamiento where<{{{><}}}>    aviones_historico_posicionamiento.Matricula = convert(vdr.AIRCRAFT using utf8mb4) and<{{{><}}}>    aviones_historico_posicionamiento.Fecha > vdr.Aterrizaje and aviones_historico_posicionamiento.Ignic <><{{{><}}}>        1 order by aviones_historico_posicionamiento.Fecha limit 1),vdr.finReserva) AS Apagado from<{{{><}}}>        vista_despeguesYaterrizajes_reservas vdr WHERE finReserva >= DATE_SUB(NOW(),INTERVAL 5 DAY)
Servers\aerodynamics.com.es\QueryHistory\16<|||>1<|||>2021-02-15 22:29:44|admin_aerodynamics|31|CREATE VIEW reservas_historico_last2days as select vdr.LESSONS AS LESSONS,vdr.DATE AS DATE,vdr.inicioReserva AS inicioReserva,vdr.finReserva<{{{><}}}>AS finReserva,vdr.AIRCRAFT AS AIRCRAFT,vdr.Despegue AS Despegue,vdr.Aterrizaje AS<{{{><}}}>Aterrizaje,ifnull((select max(aviones_historico_posicionamiento.Fecha) from aviones_historico_posicionamiento<{{{><}}}>where aviones_historico_posicionamiento.Matricula = convert(vdr.AIRCRAFT using utf8mb4) and<{{{><}}}>aviones_historico_posicionamiento.Fecha < vdr.Aterrizaje and aviones_historico_posicionamiento.Ignic <> 1<{{{><}}}>    order by aviones_historico_posicionamiento.Fecha limit 1),vdr.inicioReserva) AS Arranque,ifnull((select<{{{><}}}>    min(aviones_historico_posicionamiento.Fecha) from aviones_historico_posicionamiento where<{{{><}}}>    aviones_historico_posicionamiento.Matricula = convert(vdr.AIRCRAFT using utf8mb4) and<{{{><}}}>    aviones_historico_posicionamiento.Fecha > vdr.Aterrizaje and aviones_historico_posicionamiento.Ignic <><{{{><}}}>        1 order by aviones_historico_posicionamiento.Fecha limit 1),vdr.finReserva) AS Apagado from<{{{><}}}>        vista_despeguesYaterrizajes_reservas vdr WHERE finReserva >= DATE_SUB(NOW(),INTERVAL 2 DAY)
Servers\aerodynamics.com.es\QueryHistory\17<|||>1<|||>2021-02-15 22:30:08|admin_aerodynamics|46|CREATE VIEW vista_reservas_historico_lastday as select vdr.LESSONS AS LESSONS,vdr.DATE AS DATE,vdr.inicioReserva AS inicioReserva,vdr.finReserva<{{{><}}}>AS finReserva,vdr.AIRCRAFT AS AIRCRAFT,vdr.Despegue AS Despegue,vdr.Aterrizaje AS<{{{><}}}>Aterrizaje,ifnull((select max(aviones_historico_posicionamiento.Fecha) from aviones_historico_posicionamiento<{{{><}}}>where aviones_historico_posicionamiento.Matricula = convert(vdr.AIRCRAFT using utf8mb4) and<{{{><}}}>aviones_historico_posicionamiento.Fecha < vdr.Aterrizaje and aviones_historico_posicionamiento.Ignic <> 1<{{{><}}}>    order by aviones_historico_posicionamiento.Fecha limit 1),vdr.inicioReserva) AS Arranque,ifnull((select<{{{><}}}>    min(aviones_historico_posicionamiento.Fecha) from aviones_historico_posicionamiento where<{{{><}}}>    aviones_historico_posicionamiento.Matricula = convert(vdr.AIRCRAFT using utf8mb4) and<{{{><}}}>    aviones_historico_posicionamiento.Fecha > vdr.Aterrizaje and aviones_historico_posicionamiento.Ignic <><{{{><}}}>        1 order by aviones_historico_posicionamiento.Fecha limit 1),vdr.finReserva) AS Apagado from<{{{><}}}>        vista_despeguesYaterrizajes_reservas vdr WHERE finReserva >= DATE_SUB(NOW(),INTERVAL 1 DAY)
Servers\aerodynamics.com.es\QueryHistory\18<|||>1<|||>2021-02-15 22:41:55|admin_aerodynamics|31|SELECT DATE_FORMAT(NOW( ), "%H:%i:%S" ) 
Servers\aerodynamics.com.es\QueryHistory\19<|||>1<|||>2021-02-15 22:42:05|admin_aerodynamics|31|SELECT DATE_FORMAT(NOW( ), "%S" ) 
Servers\aerodynamics.com.es\QueryHistory\20<|||>1<|||>2021-02-15 22:42:27|admin_aerodynamics|47|SELECT DATE_FORMAT(NOW(), "%s" ) 
Servers\aerodynamics.com.es\QueryHistory\21<|||>1<|||>2021-02-15 22:42:35|admin_aerodynamics|47|SELECT DATE_FORMAT(NOW(), "%S" ) 
Servers\aerodynamics.com.es\QueryHistory\22<|||>1<|||>2021-02-15 22:42:47|admin_aerodynamics|47|select SECOND(now())
Servers\aerodynamics.com.es\QueryHistory\23<|||>1<|||>2021-02-15 22:43:02|admin_aerodynamics|32|SELECT DATE_FORMAT(CURDATE(), "%H:%i:%s" ) 
Servers\aerodynamics.com.es\QueryHistory\24<|||>1<|||>2021-02-15 22:43:08|admin_aerodynamics|47|SELECT DATE_FORMAT(CURDATE(), "%s" ) 
Servers\aerodynamics.com.es\QueryHistory\25<|||>1<|||>2021-02-15 22:43:12|admin_aerodynamics|31|SELECT DATE_FORMAT(CURDATE(), "%S" ) 
Servers\aerodynamics.com.es\QueryHistory\26<|||>1<|||>2021-02-15 22:43:31|admin_aerodynamics|47|SELECT TIME_TO_SEC(NOW())
Servers\aerodynamics.com.es\QueryHistory\27<|||>1<|||>2021-02-15 22:47:08|admin_aerodynamics|151812|SELECT *,if(Apagado is not null and Arranque is not null,TIMEDIFF(Apagado, Arranque),null) as block,if(Aterrizaje is not null and Despegue is not null,TIMEDIFF(Aterrizaje, Despegue),null) as airborne FROM vista_reservas_historico_last5days WHERE LESSONS not in (SELECT idreserva FROM personas_vuelos_automatizacion) AND ((TIME_TO_SEC(NOW())- time_to_sec(DATE_FORMAT(finReserva, "%H:%i:%s")))<=0 or (DATE<=CURDATE() and time_to_sec(DATE_FORMAT(finReserva, "%H:%i:%s"))<=time_to_sec(DATE_FORMAT(NOW(), "%H:%i:%S" ))))
Servers\aerodynamics.com.es\QueryHistory\28<|||>1<|||>2021-02-15 22:50:18|admin_aerodynamics|155625|SELECT *,if(Apagado is not null and Arranque is not null,TIMEDIFF(Apagado, Arranque),null) as block,if(Aterrizaje is not null and Despegue is not null,TIMEDIFF(Aterrizaje, Despegue),null) as airborne FROM vista_reservas_historico_posicionamiento WHERE LESSONS not in (SELECT idreserva FROM personas_vuelos_automatizacion) AND ((TIME_TO_SEC(NOW())- time_to_sec(DATE_FORMAT(finReserva, "%H:%i:%s")))<=0 or (DATE<=CURDATE() and time_to_sec(DATE_FORMAT(finReserva, "%H:%i:%s"))<=time_to_sec(DATE_FORMAT(NOW(), "%H:%i:%S" ))))
Servers\aerodynamics.com.es\QueryHistory\29<|||>1<|||>2021-02-15 23:01:35|admin_aerodynamics|546547|SELECT *,if(Apagado is not null and Arranque is not null,TIMEDIFF(Apagado, Arranque),null) as block,if(Aterrizaje is not null and Despegue is not null,TIMEDIFF(Aterrizaje, Despegue),null) as airborne FROM vista_reservas_historico_posicionamiento 
Servers\aerodynamics.com.es\QueryHistory\30<|||>1<|||>2021-02-15 23:07:52|admin_aerodynamics|154578|SELECT *,if(Apagado is not null and Arranque is not null,TIMEDIFF(Apagado, Arranque),null) as block,if(Aterrizaje is not null and Despegue is not null,TIMEDIFF(Aterrizaje, Despegue),null) as airborne FROM vista_reservas_historico_posicionamiento WHERE <{{{><}}}>LESSONS not in (SELECT idreserva FROM personas_vuelos_automatizacion) AND (DATE<=CURDATE() and time_to_sec(DATE_FORMAT(finReserva, "%H:%i:%s"))<=time_to_sec(DATE_FORMAT(NOW(), "%H:%i:%S" )))
Servers\aerodynamics.com.es\QueryHistory\31<|||>1<|||>2021-02-15 23:16:58|admin_aerodynamics|153984|SELECT *,if(Apagado is not null and Arranque is not null,TIMEDIFF(Apagado, Arranque),null) as block,if(Aterrizaje is not null and Despegue is not null,TIMEDIFF(Aterrizaje, Despegue),null) as airborne FROM vista_reservas_historico_posicionamiento WHERE <{{{><}}}>LESSONS not in (SELECT idreserva FROM personas_vuelos_automatizacion) 
Servers\aerodynamics.com.es\QueryHistory\32<|||>1<|||>2021-02-15 23:31:27|admin_aerodynamics|152672|SELECT *,if(Apagado is not null and Arranque is not null,TIMEDIFF(Apagado, Arranque),null) as block,if(Aterrizaje is not null and Despegue is not null,TIMEDIFF(Aterrizaje, Despegue),null) as airborne FROM vista_reservas_historico_posicionamiento WHERE LESSONS not in (SELECT idreserva FROM personas_vuelos_automatizacion) AND (((1613428112)- time_to_sec(DATE_FORMAT(finReserva, "%H:%i:%s")))<=0 or (DATE<="15-02-2021" and time_to_sec(DATE_FORMAT(finReserva, "%H:%i:%s"))<=time_to_sec(DATE_FORMAT(NOW( ), "%H:%i:%S" ))))
Servers\aerodynamics.com.es\QueryHistory\33<|||>1<|||>2021-02-15 23:41:46|admin_aerodynamics|538235|SELECT *,if(Apagado is not null and Arranque is not null,TIMEDIFF(Apagado, Arranque),null) as block,if(Aterrizaje is not null and Despegue is not null,TIMEDIFF(Aterrizaje, Despegue),null) as airborne FROM vista_reservas_historico_posicionamiento <{{{><}}}><{{{><}}}>/*WHERE LESSONS not in (SELECT idreserva FROM personas_vuelos_automatizacion) <{{{><}}}>AND (((1613428112)- time_to_sec(DATE_FORMAT(finReserva, "%H:%i:%s")))<=0 <{{{><}}}>or (DATE<="15-02-2021" and time_to_sec(DATE_FORMAT(finReserva, "%H:%i:%s"))<=time_to_sec(DATE_FORMAT(NOW( ), "%H:%i:%S" ))))*/
Servers\aerodynamics.com.es\QueryHistory\34<|||>1<|||>2021-02-15 23:43:48|admin_aerodynamics|47|SELECT idreserva FROM personas_vuelos_automatizacion
Servers\aerodynamics.com.es\QueryHistory\35<|||>1<|||>2021-02-15 23:44:12|admin_aerodynamics|31|SELECT idreserva FROM personas_vuelos_automatizacion WHERE idreserva IS NOT null
Servers\aerodynamics.com.es\QueryHistory\36<|||>1<|||>2021-02-15 23:44:31|admin_aerodynamics|47|SELECT distinct(idreserva) FROM personas_vuelos_automatizacion WHERE idreserva IS NOT null
Servers\aerodynamics.com.es\QueryHistory\37<|||>1<|||>2021-02-15 23:52:20|admin_aerodynamics|347140|SELECT *,if(Apagado is not null and Arranque is not null,TIMEDIFF(Apagado, Arranque),null) as block,if(Aterrizaje is not null and Despegue is not null,TIMEDIFF(Aterrizaje, Despegue),null) as airborne FROM vista_reservas_historico_posicionamiento <{{{><}}}><{{{><}}}>WHERE LESSONS NOT IN (SELECT distinct(idreserva) FROM personas_vuelos_automatizacion WHERE idreserva IS NOT null) 
Servers\aerodynamics.com.es\QueryHistory\38<|||>1<|||>2021-02-15 23:55:11|admin_aerodynamics|47|select CURDATE()
Servers\aerodynamics.com.es\QueryHistory\39<|||>1<|||>2021-02-16 00:02:10|admin_aerodynamics|152890|SELECT *,if(Apagado is not null and Arranque is not null,TIMEDIFF(Apagado, Arranque),null) as block,if(Aterrizaje is not null and Despegue is not null,TIMEDIFF(Aterrizaje, Despegue),null) as airborne FROM vista_reservas_historico_posicionamiento <{{{><}}}><{{{><}}}>WHERE LESSONS NOT IN (SELECT distinct(idreserva) FROM personas_vuelos_automatizacion WHERE idreserva IS NOT NULL) <{{{><}}}>AND DATE_FORMAT(vista_reservas_historico_posicionamiento.DATE,'%Y-%m-%d') <= CURDATE()
Servers\aerodynamics.com.es\QueryHistory\40<|||>1<|||>2021-02-16 00:16:27|admin_aerodynamics|347328|SELECT *,if(Apagado is not null and Arranque is not null,TIMEDIFF(Apagado, Arranque),null) as block,if(Aterrizaje is not null and Despegue is not null,TIMEDIFF(Aterrizaje, Despegue),null) as airborne FROM vista_reservas_historico_posicionamiento <{{{><}}}><{{{><}}}>WHERE LESSONS NOT IN (SELECT distinct(idreserva) FROM personas_vuelos_automatizacion WHERE idreserva IS NOT NULL) <{{{><}}}>AND TIMESTAMPDIFF(SECOND,vista_reservas_historico_posicionamiento.Aterrizaje,CURRENT_TIMESTAMP())>=0 
Servers\aerodynamics.com.es\QueryHistory\41<|||>1<|||>2021-02-16 00:18:47|admin_aerodynamics|46|CREATE VIEW vista_pendientes_tabla_vuelos as SELECT *,if(Apagado is not null and Arranque is not null,TIMEDIFF(Apagado, Arranque),null) as block,if(Aterrizaje is not null and Despegue is not null,TIMEDIFF(Aterrizaje, Despegue),null) as airborne FROM vista_reservas_historico_posicionamiento <{{{><}}}><{{{><}}}>WHERE LESSONS NOT IN (SELECT distinct(idreserva) FROM personas_vuelos_automatizacion WHERE idreserva IS NOT NULL) <{{{><}}}>AND TIMESTAMPDIFF(SECOND,vista_reservas_historico_posicionamiento.Aterrizaje,CURRENT_TIMESTAMP())>=0 
Servers\aerodynamics.com.es\QueryHistory\42<|||>1<|||>2021-02-16 00:45:58|admin_aerodynamics|281|SELECT * FROM vista_pendientes_tabla_vuelos
Servers\aerodynamics.com.es\QueryHistory\43<|||>1<|||>2021-02-16 09:51:25|admin_aerodynamics|391|SELECT personas.idPersona AS idPiloto, personas.nombre AS nombre,<{{{><}}}>              personas.apellido AS apellido, personas.email1 AS email1, personas.telefono AS telefono, personas.nacimiento AS nacimiento,<{{{><}}}>              personas.identidad AS identidad, personas.licencia AS licencia, personas.imagen_name AS imagen_name,<{{{><}}}>              max(reserva_vuelos.diaReserva) AS reserva,if(personas.active=1,'','Inactive') as estado,personas.active as active<{{{><}}}>              FROM personas  LEFT JOIN reserva_vuelos ON reserva_vuelos.idPiloto = personas.idPersona<{{{><}}}>              left join disponibilidad_pilotos dp on dp.idPiloto=personas.idPersona where personas.idperfil in(2,4,6) and personas.active=1  group by personas.idPersona ORDER BY reserva asc
Servers\aerodynamics.com.es\QueryHistory\44<|||>1<|||>2021-02-16 09:52:19|admin_aerodynamics|938|SELECT * FROM personas
Servers\aerodynamics.com.es\QueryHistory\45<|||>1<|||>2021-02-16 11:30:23|admin_aerodynamics|47|SELECT p.idtipo from perfiles p WHERE p.idperfil
Servers\aerodynamics.com.es\QueryHistory\46<|||>1<|||>2021-02-16 11:31:13|admin_aerodynamics|31|SELECT distinct(p.idtipo) from perfiles p WHERE p.idperfil
Servers\aerodynamics.com.es\QueryHistory\47<|||>1<|||>2021-02-16 11:38:03|admin_aerodynamics|63|UPDATE personas p LEFT JOIN perfiles pf ON p.idperfil = pf.idperfil<{{{><}}}>SET p.idtipo = pf.idtipo
Servers\aerodynamics.com.es\QueryHistory\49<|||>1<|||>2021-02-16 11:39:19|admin_aerodynamics|47|SELECT idtipo from perfiles where idperfil=16
Servers\aerodynamics.com.es\QueryHistory\50<|||>1<|||>2021-02-16 11:39:31|admin_aerodynamics|235|SELECT idtipo from perfiles where idperfil=4
Servers\aerodynamics.com.es\QueryHistory\48<|||>1<|||>2021-02-16 12:11:17|admin_aerodynamics|78|UPDATE personas p <{{{><}}}>SET p.proffile = p.idtipo
Servers\aerodynamics.com.es\QueryHistory\51<|||>1<|||>2021-02-16 12:15:34|admin_aerodynamics|47|SELECT * FROM personas WHERE personas.idtipo not in(2) and CONCAT(LOWER(apellido)," ",LOWER(nombre)," ",LOWER(email1)," ",LOWER(telefono)," ",LOWER(identidad)) like "%susana%" order by active desc,idPersona asc
Servers\aerodynamics.com.es\QueryHistory\52<|||>1<|||>2021-02-16 12:19:44|admin_aerodynamics|141|SELECT CONCAT(nombre," ",segundoNombre," ",apellido," ",email1," ",telefono," ",identidad) AS nombre FROM personas
Servers\aerodynamics.com.es\QueryHistory\53<|||>1<|||>2021-02-16 12:21:02|admin_aerodynamics|703|SELECT CONCAT(ifnull(nombre,"")," ",ifnull(segundoNombre,"")," ",ifnull(apellido,"")," ",ifnull(email1,"")," ",ifnull(telefono,"")," ",ifnull(identidad,"")) AS nombre FROM personas
Servers\aerodynamics.com.es\QueryHistory\54<|||>1<|||>2021-02-16 12:21:37|admin_aerodynamics|344|SELECT LOWER(CONCAT(ifnull(nombre,"")," ",ifnull(segundoNombre,"")," ",ifnull(apellido,"")," ",ifnull(email1,"")," ",ifnull(telefono,"")," ",ifnull(identidad,""))) AS nombre FROM personas
Servers\aerodynamics.com.es\QueryHistory\56<|||>1<|||>2021-02-16 13:22:16|admin_aerodynamics|47|SHOW PROCESSLIST<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\55<|||>1<|||>2021-02-16 13:23:26|admin_aerodynamics|47|SHOW FULL PROCESSLIST<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\57<|||>1<|||>2021-02-16 13:24:25|admin_aerodynamics|94|SHOW FULL PROCESSLIST;<{{{><}}}>KILL 1426619<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\58<|||>1<|||>2021-02-16 13:24:43|admin_aerodynamics|77|SHOW FULL PROCESSLIST;<{{{><}}}>KILL 1426838<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\59<|||>1<|||>2021-02-16 13:25:42|admin_aerodynamics|47|SHOW FULL PROCESSLIST;<{{{><}}}><{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\60<|||>1<|||>2021-02-17 08:20:51|admin_aerodynamics|47|UPDATE personas SET active=0 WHERE active='no'<{{{><}}}><{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\62<|||>1<|||>2021-02-17 09:16:19|admin_aerodynamics|469|SELECT * FROM personas where personas.idtipo not in(2) order by active desc,idPersona asc<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\61<|||>1<|||>2021-02-17 15:09:35|admin_aerodynamics|250|select <{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>concat(c.refCurso,' ',c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador = 0,sum(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeNightVFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos = '' and rv.simulador = 0,time_to_sec(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos <> '' and rv.simulador =0,time_to_sec(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(sum(if(rv.tipoPiloto <> 'DUAL' and rv.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(sum(if(rv.tipoPiloto = 'DUAL' and rv.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(sum(if(rv.tipoPiloto = 'PIC' and rv.simulador = 0,time_to_sec(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(sum(if(rv.tipoPiloto ='CO-PILOT' and rv.simulador = 0,time_to_sec(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(sum(if(rv.tipoPiloto ='DUAL' and rv.simulador = 0,time_to_sec(pva.airborne),0)),0)) AS 'DUAL',<{{{><}}}>sec_to_time(ifnull(sum(if(rv.tipoPiloto ='INSTRUCTOR' and rv.simulador = 0,time_to_sec(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador = 1,sum(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSNIGHT <{{{><}}}>from ((((personas_vuelos_automatizacion pva left join reserva_vuelos rv on(pva.idreserva = rv.idReserva)) <{{{><}}}>left join misiones m on(m.idMision = rv.idLeccion)) <{{{><}}}>left join cursos c on(c.idCurso = m.idCurso)) <{{{><}}}>left join aviones a on(a.idAvion = rv.idAvion)) <{{{><}}}>group by rv.idPiloto,c.idCurso<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\64<|||>1<|||>2021-02-17 15:11:12|admin_aerodynamics|94|select <{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>pva.fecha AS fecha,<{{{><}}}>concat(c.refCurso,' ',c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador = 0,sum(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeNightVFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos = '' and rv.simulador = 0,time_to_sec(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos <> '' and rv.simulador =0,time_to_sec(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(sum(if(rv.tipoPiloto <> 'DUAL' and rv.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(sum(if(rv.tipoPiloto = 'DUAL' and rv.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(sum(if(rv.tipoPiloto = 'PIC' and rv.simulador = 0,time_to_sec(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(sum(if(rv.tipoPiloto ='CO-PILOT' and rv.simulador = 0,time_to_sec(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(sum(if(rv.tipoPiloto ='DUAL' and rv.simulador = 0,time_to_sec(pva.airborne),0)),0)) AS 'DUAL',<{{{><}}}>sec_to_time(ifnull(sum(if(rv.tipoPiloto ='INSTRUCTOR' and rv.simulador = 0,time_to_sec(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador = 1,sum(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSNIGHT <{{{><}}}>from personas_vuelos_automatizacion pva <{{{><}}}>left join reserva_vuelos rv on(pva.idreserva = rv.idReserva)<{{{><}}}>left join misiones m on(m.idMision = rv.idLeccion) <{{{><}}}>left join cursos c on(c.idCurso = m.idCurso)<{{{><}}}>left join aviones a on(a.idAvion = rv.idAvion) <{{{><}}}>group by rv.idPiloto,c.idCurso<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\65<|||>1<|||>2021-02-17 15:12:26|admin_aerodynamics|110|select <{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>concat(c.refCurso,' ',c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador = 0,sum(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeNightVFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos = '' and rv.simulador = 0,time_to_sec(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos <> '' and rv.simulador =0,time_to_sec(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(sum(if(rv.tipoPiloto <> 'DUAL' and rv.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(sum(if(rv.tipoPiloto = 'DUAL' and rv.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(sum(if(rv.tipoPiloto = 'PIC' and rv.simulador = 0,time_to_sec(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(sum(if(rv.tipoPiloto ='CO-PILOT' and rv.simulador = 0,time_to_sec(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(sum(if(rv.tipoPiloto ='DUAL' and rv.simulador = 0,time_to_sec(pva.airborne),0)),0)) AS 'DUAL',<{{{><}}}>sec_to_time(ifnull(sum(if(rv.tipoPiloto ='INSTRUCTOR' and rv.simulador = 0,time_to_sec(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador = 1,sum(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSNIGHT <{{{><}}}>from personas_vuelos_automatizacion pva <{{{><}}}>left join reserva_vuelos rv on(pva.idreserva = rv.idReserva)<{{{><}}}>left join misiones m on(m.idMision = rv.idLeccion) <{{{><}}}>left join cursos c on(c.idCurso = m.idCurso)<{{{><}}}>left join aviones a on(a.idAvion = rv.idAvion) <{{{><}}}>group by rv.idPiloto,c.idCurso<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\63<|||>1<|||>2021-02-17 15:13:54|admin_aerodynamics|110|select <{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>pva.fecha AS fecha,<{{{><}}}>pva.parada AS parada,<{{{><}}}>concat(c.refCurso,' ',c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador = 0,sum(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeNightVFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos = '' and rv.simulador = 0,time_to_sec(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos <> '' and rv.simulador =0,time_to_sec(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(sum(if(rv.tipoPiloto <> 'DUAL' and rv.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(sum(if(rv.tipoPiloto = 'DUAL' and rv.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(sum(if(rv.tipoPiloto = 'PIC' and rv.simulador = 0,time_to_sec(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(sum(if(rv.tipoPiloto ='CO-PILOT' and rv.simulador = 0,time_to_sec(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(sum(if(rv.tipoPiloto ='DUAL' and rv.simulador = 0,time_to_sec(pva.airborne),0)),0)) AS 'DUAL',<{{{><}}}>sec_to_time(ifnull(sum(if(rv.tipoPiloto ='INSTRUCTOR' and rv.simulador = 0,time_to_sec(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador = 1,sum(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSNIGHT <{{{><}}}>from personas_vuelos_automatizacion pva <{{{><}}}>left join reserva_vuelos rv on(pva.idreserva = rv.idReserva)<{{{><}}}>left join misiones m on(m.idMision = rv.idLeccion) <{{{><}}}>left join cursos c on(c.idCurso = m.idCurso)<{{{><}}}>left join aviones a on(a.idAvion = rv.idAvion) <{{{><}}}>group by rv.idPiloto,c.idCurso<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\66<|||>1<|||>2021-02-17 15:17:17|admin_aerodynamics|297|SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto!="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="PIC" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="CO-PILOT" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="INSTRUCTOR" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.idAvion=rv.idAvion<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY rv.idReserva;
Servers\aerodynamics.com.es\QueryHistory\67<|||>1<|||>2021-02-17 15:17:32|admin_aerodynamics|47|SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto!="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="PIC" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="CO-PILOT" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="INSTRUCTOR" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.idAvion=rv.idAvion<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona;
Servers\aerodynamics.com.es\QueryHistory\68<|||>1<|||>2021-02-17 15:18:20|admin_aerodynamics|359|SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto!="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="PIC" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="CO-PILOT" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="INSTRUCTOR" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.idAvion=rv.idAvion<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id;
Servers\aerodynamics.com.es\QueryHistory\69<|||>1<|||>2021-02-17 15:19:44|admin_aerodynamics|313|SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto!="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="PIC" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="CO-PILOT" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="INSTRUCTOR" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.idAvion=rv.idAvion<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC;
Servers\aerodynamics.com.es\QueryHistory\70<|||>1<|||>2021-02-17 15:28:32|admin_aerodynamics|109|(select <{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>pva.fecha AS fecha,<{{{><}}}>pva.parada AS parada,<{{{><}}}>concat(c.refCurso,' ',c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador = 0,sum(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeNightVFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos = '' and rv.simulador = 0,time_to_sec(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos <> '' and rv.simulador =0,time_to_sec(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(sum(if(rv.tipoPiloto <> 'DUAL' and rv.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(sum(if(rv.tipoPiloto = 'DUAL' and rv.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(sum(if(rv.tipoPiloto = 'PIC' and rv.simulador = 0,time_to_sec(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(sum(if(rv.tipoPiloto ='CO-PILOT' and rv.simulador = 0,time_to_sec(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(sum(if(rv.tipoPiloto ='DUAL' and rv.simulador = 0,time_to_sec(pva.airborne),0)),0)) AS 'DUAL',<{{{><}}}>sec_to_time(ifnull(sum(if(rv.tipoPiloto ='INSTRUCTOR' and rv.simulador = 0,time_to_sec(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador = 1,sum(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSNIGHT <{{{><}}}>from personas_vuelos_automatizacion pva <{{{><}}}>left join reserva_vuelos rv on(pva.idreserva = rv.idReserva)<{{{><}}}>left join misiones m on(m.idMision = rv.idLeccion) <{{{><}}}>left join cursos c on(c.idCurso = m.idCurso)<{{{><}}}>left join aviones a on(a.idAvion = rv.idAvion) <{{{><}}}>group by rv.idPiloto,c.idCurso)<{{{><}}}>UNION<{{{><}}}>(select <{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>pva.fecha AS fecha,<{{{><}}}>pva.parada AS parada,<{{{><}}}>concat(c.refCurso,' ',c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador = 0,sum(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeNightVFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos = '' and rv.simulador = 0,time_to_sec(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos <> '' and rv.simulador =0,time_to_sec(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(sum(if(rv.tipoPiloto <> 'DUAL' and rv.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(sum(if(rv.tipoPiloto = 'DUAL' and rv.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(sum(if(rv.tipoPiloto = 'PIC' and rv.simulador = 0,time_to_sec(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(sum(if(rv.tipoPiloto ='CO-PILOT' and rv.simulador = 0,time_to_sec(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(sum(if(rv.tipoPiloto ='DUAL' and rv.simulador = 0,time_to_sec(pva.airborne),0)),0)) AS 'DUAL',<{{{><}}}>sec_to_time(ifnull(sum(if(rv.tipoPiloto ='INSTRUCTOR' and rv.simulador = 0,time_to_sec(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador = 1,sum(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSNIGHT <{{{><}}}>from personas_vuelos_automatizacion pva <{{{><}}}>left join reserva_vuelos rv on(pva.idreserva = rv.idReserva)<{{{><}}}>left join misiones m on(m.idMision = rv.idLeccion) <{{{><}}}>left join cursos c on(c.idCurso = m.idCurso)<{{{><}}}>left join aviones a on(a.idAvion = rv.idAvion) <{{{><}}}>group by rv.idPiloto,c.idCurso)<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\71<|||>1<|||>2021-02-17 15:28:59|admin_aerodynamics|94|(select <{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>pva.fecha AS fecha,<{{{><}}}>pva.parada AS parada,<{{{><}}}>concat(c.refCurso,' ',c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador = 0,sum(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeNightVFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos = '' and rv.simulador = 0,time_to_sec(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos <> '' and rv.simulador =0,time_to_sec(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(sum(if(rv.tipoPiloto <> 'DUAL' and rv.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(sum(if(rv.tipoPiloto = 'DUAL' and rv.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(sum(if(rv.tipoPiloto = 'PIC' and rv.simulador = 0,time_to_sec(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(sum(if(rv.tipoPiloto ='CO-PILOT' and rv.simulador = 0,time_to_sec(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(sum(if(rv.tipoPiloto ='DUAL' and rv.simulador = 0,time_to_sec(pva.airborne),0)),0)) AS 'DUAL',<{{{><}}}>sec_to_time(ifnull(sum(if(rv.tipoPiloto ='INSTRUCTOR' and rv.simulador = 0,time_to_sec(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador = 1,sum(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSNIGHT <{{{><}}}>from personas_vuelos_automatizacion pva <{{{><}}}>left join reserva_vuelos rv on(pva.idreserva = rv.idReserva)<{{{><}}}>left join misiones m on(m.idMision = rv.idLeccion) <{{{><}}}>left join cursos c on(c.idCurso = m.idCurso)<{{{><}}}>left join aviones a on(a.idAvion = rv.idAvion) <{{{><}}}>group by rv.idPiloto,c.idCurso)<{{{><}}}>UNION<{{{><}}}>(select <{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>pva.fecha AS fecha,<{{{><}}}>pva.parada AS parada,<{{{><}}}>concat(c.refCurso,' ',c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador = 0,sum(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeNightVFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos = '' and rv.simulador = 0,time_to_sec(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos <> '' and rv.simulador =0,time_to_sec(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(sum(if(rv.tipoPiloto <> 'DUAL' and rv.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(sum(if(rv.tipoPiloto = 'DUAL' and rv.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(sum(if(rv.tipoPiloto = 'PIC' and rv.simulador = 0,time_to_sec(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(sum(if(rv.tipoPiloto ='CO-PILOT' and rv.simulador = 0,time_to_sec(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(sum(if(rv.tipoPiloto ='DUAL' and rv.simulador = 0,time_to_sec(pva.airborne),0)),0)) AS 'DUAL',<{{{><}}}>sec_to_time(ifnull(sum(if(rv.tipoPiloto ='INSTRUCTOR' and rv.simulador = 0,time_to_sec(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador = 1,sum(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSNIGHT <{{{><}}}>from personas_rutas_vuelos_automatizacion pva <{{{><}}}>left join reserva_vuelos rv on(pva.idreserva = rv.idReserva)<{{{><}}}>left join misiones m on(m.idMision = rv.idLeccion) <{{{><}}}>left join cursos c on(c.idCurso = m.idCurso)<{{{><}}}>left join aviones a on(a.idAvion = rv.idAvion) <{{{><}}}>group by rv.idPiloto,c.idCurso)<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\72<|||>1<|||>2021-02-17 15:32:22|admin_aerodynamics|360|(SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto!="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="PIC" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="CO-PILOT" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="INSTRUCTOR" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.idAvion=rv.idAvion<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto!="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="PIC" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="CO-PILOT" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="INSTRUCTOR" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.idAvion=rv.idAvion<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)
Servers\aerodynamics.com.es\QueryHistory\73<|||>1<|||>2021-02-17 15:32:50|admin_aerodynamics|359|(SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto!="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="PIC" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="CO-PILOT" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="INSTRUCTOR" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.idAvion=rv.idAvion<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto!="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="PIC" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="CO-PILOT" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="INSTRUCTOR" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.idAvion=rv.idAvion<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)
Servers\aerodynamics.com.es\QueryHistory\74<|||>1<|||>2021-02-17 15:35:14|admin_aerodynamics|297|(SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto!="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="PIC" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="CO-PILOT" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="INSTRUCTOR" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.idAvion=rv.idAvion<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>ifnull(date_format(pva.fecha,"%d-%m-%Y"),(SELECT date_format(fecha,"%d-%m-%Y") FROM personas_vuelos_automatizacion WHERE id=pva.idVuelo )) AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto!="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="PIC" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="CO-PILOT" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="INSTRUCTOR" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.idAvion=rv.idAvion<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)
Servers\aerodynamics.com.es\QueryHistory\75<|||>1<|||>2021-02-17 15:36:03|admin_aerodynamics|328|(SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto!="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="PIC" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="CO-PILOT" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="INSTRUCTOR" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.idAvion=rv.idAvion<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>ifnull(date_format(pva.fecha,"%d-%m-%Y"),(SELECT date_format(fecha,"%d-%m-%Y") FROM personas_vuelos_automatizacion p WHERE p.id=pva.idVuelo )) AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto!="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="PIC" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="CO-PILOT" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="INSTRUCTOR" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.idAvion=rv.idAvion<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)
Servers\aerodynamics.com.es\QueryHistory\76<|||>1<|||>2021-02-17 15:36:27|admin_aerodynamics|313|(SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto!="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="PIC" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="CO-PILOT" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="INSTRUCTOR" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.idAvion=rv.idAvion<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>ifnull(date_format(pva.fecha,"%d-%m-%Y"),(SELECT DATE_FORMAT(p.fecha,"%d-%m-%Y") FROM personas_vuelos_automatizacion p WHERE p.id=pva.idVuelo )) AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto!="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="PIC" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="CO-PILOT" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="INSTRUCTOR" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.idAvion=rv.idAvion<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)
Servers\aerodynamics.com.es\QueryHistory\77<|||>1<|||>2021-02-17 15:38:17|admin_aerodynamics|406|(SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto!="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="PIC" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="CO-PILOT" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="INSTRUCTOR" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.idAvion=rv.idAvion<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>if(date_format(pva.fecha,"%d-%m-%Y") IS NULL OR date_format(pva.fecha,"%d-%m-%Y")='00-00-0000',(SELECT DATE_FORMAT(p.fecha,"%d-%m-%Y") FROM personas_vuelos_automatizacion p WHERE p.id=pva.idVuelo ),date_format(pva.fecha,"%d-%m-%Y")) AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto!="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="PIC" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="CO-PILOT" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="INSTRUCTOR" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.idAvion=rv.idAvion<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)
Servers\aerodynamics.com.es\QueryHistory\78<|||>1<|||>2021-02-17 15:42:46|admin_aerodynamics|250|(SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto!="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="PIC" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="CO-PILOT" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="INSTRUCTOR" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.idAvion=rv.idAvion<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>(SELECT idcurso FROM personas_vuelos_automatizacion p WHERE p.id=pva.idVuelo ) AS idCurso,<{{{><}}}>if(date_format(pva.fecha,"%d-%m-%Y") IS NULL OR date_format(pva.fecha,"%d-%m-%Y")='00-00-0000',(SELECT DATE_FORMAT(p.fecha,"%d-%m-%Y") FROM personas_vuelos_automatizacion p WHERE p.id=pva.idVuelo ),date_format(pva.fecha,"%d-%m-%Y")) AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto!="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="PIC" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="CO-PILOT" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="INSTRUCTOR" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.idAvion=rv.idAvion<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)
Servers\aerodynamics.com.es\QueryHistory\79<|||>1<|||>2021-02-17 15:43:39|admin_aerodynamics|407|(SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto!="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="PIC" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="CO-PILOT" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="INSTRUCTOR" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.idAvion=rv.idAvion<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>(SELECT idreserva FROM personas_vuelos_automatizacion p WHERE p.id=pva.idVuelo ) AS idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>(SELECT idcurso FROM personas_vuelos_automatizacion p WHERE p.id=pva.idVuelo ) AS idCurso,<{{{><}}}>if(date_format(pva.fecha,"%d-%m-%Y") IS NULL OR date_format(pva.fecha,"%d-%m-%Y")='00-00-0000',(SELECT DATE_FORMAT(p.fecha,"%d-%m-%Y") FROM personas_vuelos_automatizacion p WHERE p.id=pva.idVuelo ),date_format(pva.fecha,"%d-%m-%Y")) AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto!="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="PIC" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="CO-PILOT" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="INSTRUCTOR" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.idAvion=rv.idAvion<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)
Servers\aerodynamics.com.es\QueryHistory\81<|||>1<|||>2021-02-17 15:50:32|admin_aerodynamics|812|(SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto!="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="PIC" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="CO-PILOT" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="INSTRUCTOR" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.idAvion=rv.idAvion<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>pa.idreserva AS idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>pa.idcurso AS idCurso,<{{{><}}}>if(date_format(pva.fecha,"%d-%m-%Y") IS NULL OR date_format(pva.fecha,"%d-%m-%Y")='00-00-0000',(SELECT DATE_FORMAT(p.fecha,"%d-%m-%Y") FROM personas_vuelos_automatizacion p WHERE p.id=pva.idVuelo ),date_format(pva.fecha,"%d-%m-%Y")) AS "DATE",<{{{><}}}>pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto!="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="PIC" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="CO-PILOT" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="INSTRUCTOR" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN reserva_vuelos rv ON pa.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.idAvion=rv.idAvion<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)
Servers\aerodynamics.com.es\QueryHistory\80<|||>1<|||>2021-02-17 15:50:57|admin_aerodynamics|313|(SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto!="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="PIC" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="CO-PILOT" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="INSTRUCTOR" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.idAvion=rv.idAvion<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>pa.idreserva AS idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>pa.idcurso AS idCurso,<{{{><}}}>if(date_format(pva.fecha,"%d-%m-%Y") IS NULL OR date_format(pva.fecha,"%d-%m-%Y")='00-00-0000',(SELECT DATE_FORMAT(p.fecha,"%d-%m-%Y") FROM personas_vuelos_automatizacion p WHERE p.id=pva.idVuelo ),date_format(pva.fecha,"%d-%m-%Y")) AS "DATE",<{{{><}}}>pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto!="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="PIC" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="CO-PILOT" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="INSTRUCTOR" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN reserva_vuelos rv ON pa.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion=pva.matricula<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)
Servers\aerodynamics.com.es\QueryHistory\82<|||>1<|||>2021-02-17 15:51:37|admin_aerodynamics|328|(SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto!="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="PIC" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="CO-PILOT" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="INSTRUCTOR" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.idAvion=rv.idAvion<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>pa.idreserva AS idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>pa.idcurso AS idCurso,<{{{><}}}>if(date_format(pva.fecha,"%d-%m-%Y") IS NULL OR date_format(pva.fecha,"%d-%m-%Y")='00-00-0000',(SELECT DATE_FORMAT(p.fecha,"%d-%m-%Y") FROM personas_vuelos_automatizacion p WHERE p.id=pva.idVuelo ),date_format(pva.fecha,"%d-%m-%Y")) AS "DATE",<{{{><}}}>pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto!="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="PIC" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="CO-PILOT" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="INSTRUCTOR" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN reserva_vuelos rv ON pa.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion=pa.matricula<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)
Servers\aerodynamics.com.es\QueryHistory\83<|||>1<|||>2021-02-17 15:53:32|admin_aerodynamics|344|(SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto!="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="PIC" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="CO-PILOT" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="INSTRUCTOR" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.idAvion=rv.idAvion<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>pa.idreserva AS idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>pa.idcurso AS idCurso,<{{{><}}}>if(date_format(pva.fecha,"%d-%m-%Y") IS NULL OR date_format(pva.fecha,"%d-%m-%Y")='00-00-0000',(SELECT DATE_FORMAT(p.fecha,"%d-%m-%Y") FROM personas_vuelos_automatizacion p WHERE p.id=pva.idVuelo ),date_format(pva.fecha,"%d-%m-%Y")) AS "DATE",<{{{><}}}>pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto!="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="PIC" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="CO-PILOT" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="INSTRUCTOR" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN reserva_vuelos rv ON pa.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion=pa.matricula<{{{><}}}>LEFT JOIN personas piloto ON pa.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pa.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)
Servers\aerodynamics.com.es\QueryHistory\84<|||>1<|||>2021-02-17 15:53:54|admin_aerodynamics|360|(SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto!="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="PIC" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="CO-PILOT" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="INSTRUCTOR" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.idAvion=rv.idAvion<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>pa.idreserva AS idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>pa.idcurso AS idCurso,<{{{><}}}>if(date_format(pva.fecha,"%d-%m-%Y") IS NULL OR date_format(pva.fecha,"%d-%m-%Y")='00-00-0000',(SELECT DATE_FORMAT(p.fecha,"%d-%m-%Y") FROM personas_vuelos_automatizacion p WHERE p.id=pva.idVuelo ),date_format(pva.fecha,"%d-%m-%Y")) AS "DATE",<{{{><}}}>pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>pa.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto!="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="PIC" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="CO-PILOT" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="INSTRUCTOR" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN reserva_vuelos rv ON pa.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion=pa.matricula<{{{><}}}>LEFT JOIN personas piloto ON pa.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pa.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)
Servers\aerodynamics.com.es\QueryHistory\85<|||>1<|||>2021-02-17 15:56:36|admin_aerodynamics|375|(SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto!="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="PIC" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="CO-PILOT" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="INSTRUCTOR" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.idAvion=rv.idAvion<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>pa.idreserva AS idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>pa.idcurso AS idCurso,<{{{><}}}>if(date_format(pva.fecha,"%d-%m-%Y") IS NULL OR date_format(pva.fecha,"%d-%m-%Y")='00-00-0000',(SELECT DATE_FORMAT(p.fecha,"%d-%m-%Y") FROM personas_vuelos_automatizacion p WHERE p.id=pva.idVuelo ),date_format(pva.fecha,"%d-%m-%Y")) AS "DATE",<{{{><}}}>pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>pa.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto!="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="PIC" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="CO-PILOT" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="INSTRUCTOR" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN reserva_vuelos rv ON pa.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion LIKE '%pa.matricula%'<{{{><}}}>LEFT JOIN personas piloto ON pa.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pa.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)
Servers\aerodynamics.com.es\QueryHistory\87<|||>1<|||>2021-02-17 15:57:17|admin_aerodynamics|282|(SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto!="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="PIC" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="CO-PILOT" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="INSTRUCTOR" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.idAvion=rv.idAvion<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>pa.idreserva AS idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>pa.idcurso AS idCurso,<{{{><}}}>if(date_format(pva.fecha,"%d-%m-%Y") IS NULL OR date_format(pva.fecha,"%d-%m-%Y")='00-00-0000',(SELECT DATE_FORMAT(p.fecha,"%d-%m-%Y") FROM personas_vuelos_automatizacion p WHERE p.id=pva.idVuelo ),date_format(pva.fecha,"%d-%m-%Y")) AS "DATE",<{{{><}}}>pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>pa.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto!="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="PIC" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="CO-PILOT" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="INSTRUCTOR" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN reserva_vuelos rv ON pa.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion = pva.matricula<{{{><}}}>LEFT JOIN personas piloto ON pa.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pa.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)
Servers\aerodynamics.com.es\QueryHistory\88<|||>1<|||>2021-02-17 15:57:28|admin_aerodynamics|265|(SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto!="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="PIC" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="CO-PILOT" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="INSTRUCTOR" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.idAvion=rv.idAvion<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>pa.idreserva AS idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>pa.idcurso AS idCurso,<{{{><}}}>if(date_format(pva.fecha,"%d-%m-%Y") IS NULL OR date_format(pva.fecha,"%d-%m-%Y")='00-00-0000',(SELECT DATE_FORMAT(p.fecha,"%d-%m-%Y") FROM personas_vuelos_automatizacion p WHERE p.id=pva.idVuelo ),date_format(pva.fecha,"%d-%m-%Y")) AS "DATE",<{{{><}}}>pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>pa.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto!="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="PIC" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="CO-PILOT" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="INSTRUCTOR" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN reserva_vuelos rv ON pa.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion = pa.matricula<{{{><}}}>LEFT JOIN personas piloto ON pa.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pa.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)
Servers\aerodynamics.com.es\QueryHistory\86<|||>1<|||>2021-02-17 15:58:53|admin_aerodynamics|562|(SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto!="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="PIC" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="CO-PILOT" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="INSTRUCTOR" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.idAvion=rv.idAvion<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>pa.idreserva AS idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>pa.idcurso AS idCurso,<{{{><}}}>if(date_format(pva.fecha,"%d-%m-%Y") IS NULL OR date_format(pva.fecha,"%d-%m-%Y")='00-00-0000',(SELECT DATE_FORMAT(p.fecha,"%d-%m-%Y") FROM personas_vuelos_automatizacion p WHERE p.id=pva.idVuelo ),date_format(pva.fecha,"%d-%m-%Y")) AS "DATE",<{{{><}}}>pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>pa.matricula AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>pa.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto!="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="PIC" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="CO-PILOT" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="INSTRUCTOR" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN reserva_vuelos rv ON pa.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion = pa.matricula<{{{><}}}>LEFT JOIN personas piloto ON pa.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pa.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)
Servers\aerodynamics.com.es\QueryHistory\89<|||>1<|||>2021-02-17 15:59:43|admin_aerodynamics|375|(SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto!="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="PIC" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="CO-PILOT" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="INSTRUCTOR" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.idAvion=rv.idAvion<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>pa.idreserva AS idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>pa.idcurso AS idCurso,<{{{><}}}>if(date_format(pva.fecha,"%d-%m-%Y") IS NULL OR date_format(pva.fecha,"%d-%m-%Y")='00-00-0000',pa.fecha,date_format(pva.fecha,"%d-%m-%Y")) AS "DATE",<{{{><}}}>pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>pa.matricula AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>pa.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto!="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="PIC" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="CO-PILOT" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="INSTRUCTOR" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN reserva_vuelos rv ON pa.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion = pa.matricula<{{{><}}}>LEFT JOIN personas piloto ON pa.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pa.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)
Servers\aerodynamics.com.es\QueryHistory\90<|||>1<|||>2021-02-17 16:00:10|admin_aerodynamics|516|(SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto!="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="PIC" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="CO-PILOT" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="INSTRUCTOR" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.idAvion=rv.idAvion<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>pa.idreserva AS idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>pa.idcurso AS idCurso,<{{{><}}}>if(date_format(pva.fecha,"%d-%m-%Y") IS NULL OR date_format(pva.fecha,"%d-%m-%Y")='00-00-0000',date_format(pa.fecha,"%d-%m-%Y"),date_format(pva.fecha,"%d-%m-%Y")) AS "DATE",<{{{><}}}>pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>pa.matricula AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>pa.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto!="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="PIC" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="CO-PILOT" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="INSTRUCTOR" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN reserva_vuelos rv ON pa.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion = pa.matricula<{{{><}}}>LEFT JOIN personas piloto ON pa.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pa.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)
Servers\aerodynamics.com.es\QueryHistory\91<|||>1<|||>2021-02-17 16:01:17|admin_aerodynamics|844|(SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto!="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="PIC" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="CO-PILOT" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="INSTRUCTOR" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.idAvion=rv.idAvion<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>pa.idreserva AS idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>pa.idcurso AS idCurso,<{{{><}}}>if(date_format(pva.fecha,"%d-%m-%Y") IS NULL OR date_format(pva.fecha,"%d-%m-%Y")='00-00-0000',date_format(pa.fecha,"%d-%m-%Y"),date_format(pva.fecha,"%d-%m-%Y")) AS "DATE",<{{{><}}}>pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>pa.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto!="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="PIC" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="CO-PILOT" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="INSTRUCTOR" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN reserva_vuelos rv ON pa.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion = pa.matricula<{{{><}}}>LEFT JOIN personas piloto ON pa.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pa.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)
Servers\aerodynamics.com.es\QueryHistory\92<|||>1<|||>2021-02-17 16:06:25|admin_aerodynamics|1172|(SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto!="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="PIC" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="CO-PILOT" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="INSTRUCTOR" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.idAvion=rv.idAvion<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>pa.idreserva AS idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>pa.idcurso AS idCurso,<{{{><}}}>if(date_format(pva.fecha,"%d-%m-%Y") IS NULL OR date_format(pva.fecha,"%d-%m-%Y")='00-00-0000',date_format(pa.fecha,"%d-%m-%Y"),date_format(pva.fecha,"%d-%m-%Y")) AS "DATE",<{{{><}}}>pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(pa.tipopiloto="PIC",piloto.nombre,if(pa.tipoinstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pa.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>pa.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto!="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="PIC" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="CO-PILOT" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="INSTRUCTOR" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN reserva_vuelos rv ON pa.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion = pa.matricula<{{{><}}}>LEFT JOIN personas piloto ON pa.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pa.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)
Servers\aerodynamics.com.es\QueryHistory\93<|||>1<|||>2021-02-17 16:07:52|admin_aerodynamics|1703|(SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto!="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="PIC" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="CO-PILOT" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(rv.tipoPiloto="INSTRUCTOR" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.idAvion=rv.idAvion<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>pa.idreserva AS idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>pa.idcurso AS idCurso,<{{{><}}}>if(date_format(pva.fecha,"%d-%m-%Y") IS NULL OR date_format(pva.fecha,"%d-%m-%Y")='00-00-0000',date_format(pa.fecha,"%d-%m-%Y"),date_format(pva.fecha,"%d-%m-%Y")) AS "DATE",<{{{><}}}>pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(pa.tipopiloto="PIC",piloto.nombre,if(pa.tipoinstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pa.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>pa.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto!="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="PIC" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="CO-PILOT" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="INSTRUCTOR" AND rv.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN reserva_vuelos rv ON pa.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pa.idleccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion = pa.matricula<{{{><}}}>LEFT JOIN personas piloto ON pa.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pa.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)
Servers\aerodynamics.com.es\QueryHistory\95<|||>1<|||>2021-02-17 17:06:04|admin_aerodynamics|47|UPDATE aviones SET nomInstructor = '',modelo= '', registracion = 'FNPT II',numRegistracion = '', asientos = '0', crucVelocidad = '0', rango = '0', tipo = '',motorUno = '',potmotorUno = '0', numseriemotorUno = '0', motorDos = '',potmotorDos = '0',numseriemotorDos = '0',propellerUno = '', numseriepropellerUno = '0', propellerDos = '',numseriepropellerDos = '0',tipoHobb = 'No hobbs meter', basePrincipal = '', baseTemporal = '', temporalInicio = '',temporalFin = '', combCapacidad = '0',conVuelo = '0', conSuelo= '0', capAceite = '0', consumo = '0', rastreadorVuelo = '', active='si' , simulador='0' WHERE idAvion = 26
Servers\aerodynamics.com.es\QueryHistory\94<|||>1<|||>2021-02-17 17:06:22|admin_aerodynamics|32|UPDATE aviones SET nomInstructor = '',modelo= '', registracion = 'FNPT II',numRegistracion = '', asientos = '0', crucVelocidad = '0', rango = '0', tipo = '',motorUno = '',potmotorUno = '0', numseriemotorUno = '0', motorDos = '',potmotorDos = '0',numseriemotorDos = '0',propellerUno = '', numseriepropellerUno = '0', propellerDos = '',numseriepropellerDos = '0',tipoHobb = 'No hobbs meter', basePrincipal = '', baseTemporal = '', temporalInicio = '',temporalFin = '', combCapacidad = '0',conVuelo = '0', conSuelo= '0', capAceite = '0', consumo = '0', rastreadorVuelo = '', active='si' , simulador='1' WHERE idAvion = 26
Servers\aerodynamics.com.es\QueryHistory\97<|||>1<|||>2021-02-17 22:18:59|admin_aerodynamics|437|(SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(a.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.idAvion=rv.idAvion<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>pa.idreserva AS idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>pa.idcurso AS idCurso,<{{{><}}}>if(date_format(pva.fecha,"%d-%m-%Y") IS NULL OR date_format(pva.fecha,"%d-%m-%Y")='00-00-0000',date_format(pa.fecha,"%d-%m-%Y"),date_format(pva.fecha,"%d-%m-%Y")) AS "DATE",<{{{><}}}>pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(pa.tipopiloto="PIC",piloto.nombre,if(pa.tipoinstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pa.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>pa.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN reserva_vuelos rv ON pa.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pa.idleccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion = pa.matricula<{{{><}}}>LEFT JOIN personas piloto ON pa.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pa.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)
Servers\aerodynamics.com.es\QueryHistory\96<|||>1<|||>2021-02-17 22:21:09|admin_aerodynamics|219|SELECT * FROM ((SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(a.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.idAvion=rv.idAvion<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>pa.idreserva AS idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>pa.idcurso AS idCurso,<{{{><}}}>if(date_format(pva.fecha,"%d-%m-%Y") IS NULL OR date_format(pva.fecha,"%d-%m-%Y")='00-00-0000',date_format(pa.fecha,"%d-%m-%Y"),date_format(pva.fecha,"%d-%m-%Y")) AS "DATE",<{{{><}}}>pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(pa.tipopiloto="PIC",piloto.nombre,if(pa.tipoinstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pa.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>pa.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN reserva_vuelos rv ON pa.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pa.idleccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion = pa.matricula<{{{><}}}>LEFT JOIN personas piloto ON pa.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pa.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)) vuelos ORDER BY vuelos.DATE DESC,vuelos.ARRIVALPLACE DESC
Servers\aerodynamics.com.es\QueryHistory\98<|||>1<|||>2021-02-17 22:22:02|admin_aerodynamics|203|SELECT * FROM ((SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(a.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.idAvion=rv.idAvion<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>pa.idreserva AS idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>pa.idcurso AS idCurso,<{{{><}}}>if(date_format(pva.fecha,"%d-%m-%Y") IS NULL OR date_format(pva.fecha,"%d-%m-%Y")='00-00-0000',date_format(pa.fecha,"%d-%m-%Y"),date_format(pva.fecha,"%d-%m-%Y")) AS "DATE",<{{{><}}}>pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(pa.tipopiloto="PIC",piloto.nombre,if(pa.tipoinstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pa.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>pa.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN reserva_vuelos rv ON pa.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pa.idleccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion = pa.matricula<{{{><}}}>LEFT JOIN personas piloto ON pa.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pa.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)) vuelos ORDER BY 'DATE' DESC,ARRIVALPLACE DESC
Servers\aerodynamics.com.es\QueryHistory\99<|||>1<|||>2021-02-17 22:22:34|admin_aerodynamics|203|SELECT * FROM ((SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(a.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.idAvion=rv.idAvion<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>pa.idreserva AS idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>pa.idcurso AS idCurso,<{{{><}}}>if(date_format(pva.fecha,"%d-%m-%Y") IS NULL OR date_format(pva.fecha,"%d-%m-%Y")='00-00-0000',date_format(pa.fecha,"%d-%m-%Y"),date_format(pva.fecha,"%d-%m-%Y")) AS "DATE",<{{{><}}}>pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(pa.tipopiloto="PIC",piloto.nombre,if(pa.tipoinstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pa.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>pa.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN reserva_vuelos rv ON pa.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pa.idleccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion = pa.matricula<{{{><}}}>LEFT JOIN personas piloto ON pa.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pa.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)) vuelos ORDER BY 'DATE' DESC
Servers\aerodynamics.com.es\QueryHistory\100<|||>1<|||>2021-02-17 22:23:24|admin_aerodynamics|203|SELECT * FROM ((SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(a.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.idAvion=rv.idAvion<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>pa.idreserva AS idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>pa.idcurso AS idCurso,<{{{><}}}>if(date_format(pva.fecha,"%d-%m-%Y") IS NULL OR date_format(pva.fecha,"%d-%m-%Y")='00-00-0000',date_format(pa.fecha,"%d-%m-%Y"),date_format(pva.fecha,"%d-%m-%Y")) AS "DATE",<{{{><}}}>pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(pa.tipopiloto="PIC",piloto.nombre,if(pa.tipoinstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pa.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>pa.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN reserva_vuelos rv ON pa.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pa.idleccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion = pa.matricula<{{{><}}}>LEFT JOIN personas piloto ON pa.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pa.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)) vuelos ORDER BY 'DATE' ASC
Servers\aerodynamics.com.es\QueryHistory\101<|||>1<|||>2021-02-17 22:23:48|admin_aerodynamics|63|SELECT DATE FROM ((SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(a.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.idAvion=rv.idAvion<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>pa.idreserva AS idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>pa.idcurso AS idCurso,<{{{><}}}>if(date_format(pva.fecha,"%d-%m-%Y") IS NULL OR date_format(pva.fecha,"%d-%m-%Y")='00-00-0000',date_format(pa.fecha,"%d-%m-%Y"),date_format(pva.fecha,"%d-%m-%Y")) AS "DATE",<{{{><}}}>pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(pa.tipopiloto="PIC",piloto.nombre,if(pa.tipoinstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pa.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>pa.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN reserva_vuelos rv ON pa.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pa.idleccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion = pa.matricula<{{{><}}}>LEFT JOIN personas piloto ON pa.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pa.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)) vuelos ORDER BY 'DATE' ASC
Servers\aerodynamics.com.es\QueryHistory\102<|||>1<|||>2021-02-17 22:24:00|admin_aerodynamics|78|SELECT DATE FROM ((SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(a.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.idAvion=rv.idAvion<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>pa.idreserva AS idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>pa.idcurso AS idCurso,<{{{><}}}>if(date_format(pva.fecha,"%d-%m-%Y") IS NULL OR date_format(pva.fecha,"%d-%m-%Y")='00-00-0000',date_format(pa.fecha,"%d-%m-%Y"),date_format(pva.fecha,"%d-%m-%Y")) AS "DATE",<{{{><}}}>pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(pa.tipopiloto="PIC",piloto.nombre,if(pa.tipoinstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pa.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>pa.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN reserva_vuelos rv ON pa.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pa.idleccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion = pa.matricula<{{{><}}}>LEFT JOIN personas piloto ON pa.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pa.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)) vuelos ORDER BY DATE DESC
Servers\aerodynamics.com.es\QueryHistory\103<|||>1<|||>2021-02-17 22:24:08|admin_aerodynamics|63|SELECT DATE FROM ((SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(a.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.idAvion=rv.idAvion<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>pa.idreserva AS idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>pa.idcurso AS idCurso,<{{{><}}}>if(date_format(pva.fecha,"%d-%m-%Y") IS NULL OR date_format(pva.fecha,"%d-%m-%Y")='00-00-0000',date_format(pa.fecha,"%d-%m-%Y"),date_format(pva.fecha,"%d-%m-%Y")) AS "DATE",<{{{><}}}>pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(pa.tipopiloto="PIC",piloto.nombre,if(pa.tipoinstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pa.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>pa.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN reserva_vuelos rv ON pa.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pa.idleccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion = pa.matricula<{{{><}}}>LEFT JOIN personas piloto ON pa.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pa.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)) vuelos ORDER BY DATE ASC
Servers\aerodynamics.com.es\QueryHistory\104<|||>1<|||>2021-02-17 22:25:10|admin_aerodynamics|219|SELECT * FROM ((SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(a.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.idAvion=rv.idAvion<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>pa.idreserva AS idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>pa.idcurso AS idCurso,<{{{><}}}>if(date_format(pva.fecha,"%d-%m-%Y") IS NULL OR date_format(pva.fecha,"%d-%m-%Y")='00-00-0000',date_format(pa.fecha,"%d-%m-%Y"),date_format(pva.fecha,"%d-%m-%Y")) AS "DATE",<{{{><}}}>pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(pa.tipopiloto="PIC",piloto.nombre,if(pa.tipoinstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pa.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>pa.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN reserva_vuelos rv ON pa.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pa.idleccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion = pa.matricula<{{{><}}}>LEFT JOIN personas piloto ON pa.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pa.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)) vuelos ORDER BY date_format(DATE,'%d-%m-%Y') ASC
Servers\aerodynamics.com.es\QueryHistory\105<|||>1<|||>2021-02-17 22:25:30|admin_aerodynamics|203|SELECT * FROM ((SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(a.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.idAvion=rv.idAvion<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>pa.idreserva AS idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>pa.idcurso AS idCurso,<{{{><}}}>if(date_format(pva.fecha,"%d-%m-%Y") IS NULL OR date_format(pva.fecha,"%d-%m-%Y")='00-00-0000',date_format(pa.fecha,"%d-%m-%Y"),date_format(pva.fecha,"%d-%m-%Y")) AS "DATE",<{{{><}}}>pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(pa.tipopiloto="PIC",piloto.nombre,if(pa.tipoinstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pa.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>pa.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN reserva_vuelos rv ON pa.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pa.idleccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion = pa.matricula<{{{><}}}>LEFT JOIN personas piloto ON pa.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pa.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)) vuelos ORDER BY date_format(DATE,'%d-%m-%Y') DESC
Servers\aerodynamics.com.es\QueryHistory\106<|||>1<|||>2021-02-17 22:26:49|admin_aerodynamics|421|SELECT * FROM ((SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(a.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.idAvion=rv.idAvion<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>pa.idreserva AS idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>pa.idcurso AS idCurso,<{{{><}}}>if(date_format(pva.fecha,"%d-%m-%Y") IS NULL OR date_format(pva.fecha,"%d-%m-%Y")='00-00-0000',date_format(pa.fecha,"%d-%m-%Y"),date_format(pva.fecha,"%d-%m-%Y")) AS "DATE",<{{{><}}}>pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(pa.tipopiloto="PIC",piloto.nombre,if(pa.tipoinstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pa.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>pa.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN reserva_vuelos rv ON pa.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pa.idleccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion = pa.matricula<{{{><}}}>LEFT JOIN personas piloto ON pa.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pa.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)) vuelos ORDER BY STR_TO_DATE(DATE, "%d-%m-%Y") DESC
Servers\aerodynamics.com.es\QueryHistory\107<|||>1<|||>2021-02-17 22:27:20|admin_aerodynamics|203|SELECT * FROM ((SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(rv.tipoPiloto="PIC",piloto.nombre,if(rv.tipoInstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(a.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.idAvion=rv.idAvion<{{{><}}}>LEFT JOIN personas piloto ON rv.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON rv.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>pa.idreserva AS idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>pa.idcurso AS idCurso,<{{{><}}}>if(date_format(pva.fecha,"%d-%m-%Y") IS NULL OR date_format(pva.fecha,"%d-%m-%Y")='00-00-0000',date_format(pa.fecha,"%d-%m-%Y"),date_format(pva.fecha,"%d-%m-%Y")) AS "DATE",<{{{><}}}>pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(pa.tipopiloto="PIC",piloto.nombre,if(pa.tipoinstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pa.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>pa.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(rv.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN reserva_vuelos rv ON pa.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pa.idleccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion = pa.matricula<{{{><}}}>LEFT JOIN personas piloto ON pa.idPiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pa.idInstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)) vuelos ORDER BY STR_TO_DATE(DATE, "%d-%m-%Y") DESC,ARRIVALTIME DESC
Servers\aerodynamics.com.es\QueryHistory\108<|||>1<|||>2021-02-17 22:30:58|admin_aerodynamics|219|SELECT * FROM ((SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(pva.tipopiloto="PIC",piloto.nombre,if(pva.tipoinstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>rv.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(a.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(a.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pva.idleccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion=pva.matricula<{{{><}}}>LEFT JOIN personas piloto ON pva.idpiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pva.idinstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>pa.idreserva AS idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>pa.idcurso AS idCurso,<{{{><}}}>if(date_format(pva.fecha,"%d-%m-%Y") IS NULL OR date_format(pva.fecha,"%d-%m-%Y")='00-00-0000',date_format(pa.fecha,"%d-%m-%Y"),date_format(pva.fecha,"%d-%m-%Y")) AS "DATE",<{{{><}}}>pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(pa.tipopiloto="PIC",piloto.nombre,if(pa.tipoinstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pa.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>pa.idPiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(a.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN reserva_vuelos rv ON pa.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pa.idleccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion = pa.matricula<{{{><}}}>LEFT JOIN personas piloto ON pa.idpiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pa.idinstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)) vuelos ORDER BY STR_TO_DATE(DATE, "%d-%m-%Y") DESC,ARRIVALTIME DESC
Servers\aerodynamics.com.es\QueryHistory\110<|||>1<|||>2021-02-17 22:35:51|admin_aerodynamics|47|CREATE VIEW vista_logbook_piloto_completo AS<{{{><}}}>SELECT * FROM ((SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(pva.tipopiloto="PIC",piloto.nombre,if(pva.tipoinstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>pva.idpiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(a.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(a.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pva.idleccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion=pva.matricula<{{{><}}}>LEFT JOIN personas piloto ON pva.idpiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pva.idinstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>pa.idreserva AS idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>pa.idcurso AS idCurso,<{{{><}}}>if(date_format(pva.fecha,"%d-%m-%Y") IS NULL OR date_format(pva.fecha,"%d-%m-%Y")='00-00-0000',date_format(pa.fecha,"%d-%m-%Y"),date_format(pva.fecha,"%d-%m-%Y")) AS "DATE",<{{{><}}}>pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(pa.tipopiloto="PIC",piloto.nombre,if(pa.tipoinstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pa.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>pa.idpiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(a.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN reserva_vuelos rv ON pa.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pa.idleccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion = pa.matricula<{{{><}}}>LEFT JOIN personas piloto ON pa.idpiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pa.idinstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)) vuelos ORDER BY STR_TO_DATE(DATE, "%d-%m-%Y") DESC,ARRIVALTIME DESC
Servers\aerodynamics.com.es\QueryHistory\111<|||>1<|||>2021-02-17 22:46:43|admin_aerodynamics|62|UPDATE personas_vuelos_automatizacion pva<{{{><}}}>LEFT JOIN reserva_vuelos rv ON rv.idReserva = pva.idreserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=rv.idLeccion<{{{><}}}>SET <{{{><}}}>pva.idpiloto=rv.idPiloto,<{{{><}}}>pva.tipopiloto=rv.tipoPiloto,<{{{><}}}>pva.idinstructor=rv.idInstructor,<{{{><}}}>pva.tipoinstructor=rv.tipoInstructor,<{{{><}}}>pva.idleccion=rv.idLeccion,<{{{><}}}>pva.idcurso=m.idCurso<{{{><}}}>WHERE pva.idreserva IS NOT NULL AND pva.idcurso IS NULL<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\109<|||>1<|||>2021-02-17 22:51:48|admin_aerodynamics|531|SELECT * FROM ((SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(pva.tipopiloto="PIC",piloto.nombre,if(pva.tipoinstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>pva.idpiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(a.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(a.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pva.idleccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion=pva.matricula<{{{><}}}>LEFT JOIN personas piloto ON pva.idpiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pva.idinstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>pa.idreserva AS idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>pa.idcurso AS idCurso,<{{{><}}}>if(date_format(pva.fecha,"%d-%m-%Y") IS NULL OR date_format(pva.fecha,"%d-%m-%Y")='00-00-0000',date_format(pa.fecha,"%d-%m-%Y"),date_format(pva.fecha,"%d-%m-%Y")) AS "DATE",<{{{><}}}>pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(pa.tipopiloto="PIC",piloto.nombre,if(pa.tipoinstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pa.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(piloto.segundoNombre," ",piloto.apellido)))) AS REMARKS,<{{{><}}}>pa.idpiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(a.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN reserva_vuelos rv ON pa.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pa.idleccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion = pa.matricula<{{{><}}}>LEFT JOIN personas piloto ON pa.idpiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pa.idinstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)) vuelos ORDER BY STR_TO_DATE(DATE, "%d-%m-%Y") DESC,ARRIVALTIME DESC
Servers\aerodynamics.com.es\QueryHistory\112<|||>1<|||>2021-02-17 22:53:52|admin_aerodynamics|422|SELECT * FROM ((SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(pva.tipopiloto="PIC",piloto.nombre,if(pva.tipoinstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(ifnull(piloto.segundoNombre,"")," ",ifnull(piloto.apellido,""))))) AS REMARKS,<{{{><}}}>pva.idpiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(a.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(a.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pva.idleccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion=pva.matricula<{{{><}}}>LEFT JOIN personas piloto ON pva.idpiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pva.idinstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>pa.idreserva AS idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>pa.idcurso AS idCurso,<{{{><}}}>if(date_format(pva.fecha,"%d-%m-%Y") IS NULL OR date_format(pva.fecha,"%d-%m-%Y")='00-00-0000',date_format(pa.fecha,"%d-%m-%Y"),date_format(pva.fecha,"%d-%m-%Y")) AS "DATE",<{{{><}}}>pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(pa.tipopiloto="PIC",piloto.nombre,if(pa.tipoinstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pa.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,piloto.apellido,CONCAT(ifnull(piloto.segundoNombre,"")," ",ifnull(piloto.apellido,""))))) AS REMARKS,<{{{><}}}>pa.idpiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(a.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN reserva_vuelos rv ON pa.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pa.idleccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion = pa.matricula<{{{><}}}>LEFT JOIN personas piloto ON pa.idpiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pa.idinstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)) vuelos ORDER BY STR_TO_DATE(DATE, "%d-%m-%Y") DESC,ARRIVALTIME DESC
Servers\aerodynamics.com.es\QueryHistory\113<|||>1<|||>2021-02-17 22:54:34|admin_aerodynamics|328|SELECT * FROM ((SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(pva.tipopiloto="PIC",piloto.nombre,if(pva.tipoinstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pva.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,ifnull(piloto.apellido,""),CONCAT(ifnull(piloto.segundoNombre,"")," ",ifnull(piloto.apellido,""))))) AS REMARKS,<{{{><}}}>pva.idpiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(a.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(a.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pva.idleccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion=pva.matricula<{{{><}}}>LEFT JOIN personas piloto ON pva.idpiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pva.idinstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>pa.idreserva AS idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>pa.idcurso AS idCurso,<{{{><}}}>if(date_format(pva.fecha,"%d-%m-%Y") IS NULL OR date_format(pva.fecha,"%d-%m-%Y")='00-00-0000',date_format(pa.fecha,"%d-%m-%Y"),date_format(pva.fecha,"%d-%m-%Y")) AS "DATE",<{{{><}}}>pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(pa.tipopiloto="PIC",piloto.nombre,if(pa.tipoinstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(pa.comentarios," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,ifnull(piloto.apellido,""),CONCAT(ifnull(piloto.segundoNombre,"")," ",ifnull(piloto.apellido,""))))) AS REMARKS,<{{{><}}}>pa.idpiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(a.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN reserva_vuelos rv ON pa.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pa.idleccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion = pa.matricula<{{{><}}}>LEFT JOIN personas piloto ON pa.idpiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pa.idinstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)) vuelos ORDER BY STR_TO_DATE(DATE, "%d-%m-%Y") DESC,ARRIVALTIME DESC
Servers\aerodynamics.com.es\QueryHistory\114<|||>1<|||>2021-02-17 22:55:21|admin_aerodynamics|531|SELECT * FROM ((SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(pva.tipopiloto="PIC",piloto.nombre,if(pva.tipoinstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(ifnull(pva.comentarios,"")," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,ifnull(piloto.apellido,""),CONCAT(ifnull(piloto.segundoNombre,"")," ",ifnull(piloto.apellido,""))))) AS REMARKS,<{{{><}}}>pva.idpiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(a.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(a.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pva.idleccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion=pva.matricula<{{{><}}}>LEFT JOIN personas piloto ON pva.idpiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pva.idinstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>pa.idreserva AS idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>pa.idcurso AS idCurso,<{{{><}}}>if(date_format(pva.fecha,"%d-%m-%Y") IS NULL OR date_format(pva.fecha,"%d-%m-%Y")='00-00-0000',date_format(pa.fecha,"%d-%m-%Y"),date_format(pva.fecha,"%d-%m-%Y")) AS "DATE",<{{{><}}}>pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(pa.tipopiloto="PIC",piloto.nombre,if(pa.tipoinstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(ifnull(pa.comentarios,"")," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,ifnull(piloto.apellido,""),CONCAT(ifnull(piloto.segundoNombre,"")," ",ifnull(piloto.apellido,""))))) AS REMARKS,<{{{><}}}>pa.idpiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(a.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN reserva_vuelos rv ON pa.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pa.idleccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion = pa.matricula<{{{><}}}>LEFT JOIN personas piloto ON pa.idpiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pa.idinstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)) vuelos ORDER BY STR_TO_DATE(DATE, "%d-%m-%Y") DESC,ARRIVALTIME DESC
Servers\aerodynamics.com.es\QueryHistory\115<|||>1<|||>2021-02-17 22:57:01|admin_aerodynamics|63|CREATE VIEW vista_logbook_piloto_completo AS<{{{><}}}>SELECT * FROM ((SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(pva.tipopiloto="PIC",piloto.nombre,if(pva.tipoinstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(ifnull(pva.comentarios,"")," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,ifnull(piloto.apellido,""),CONCAT(ifnull(piloto.segundoNombre,"")," ",ifnull(piloto.apellido,""))))) AS REMARKS,<{{{><}}}>pva.idpiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(a.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(a.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pva.idleccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion=pva.matricula<{{{><}}}>LEFT JOIN personas piloto ON pva.idpiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pva.idinstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>pa.idreserva AS idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>pa.idcurso AS idCurso,<{{{><}}}>if(date_format(pva.fecha,"%d-%m-%Y") IS NULL OR date_format(pva.fecha,"%d-%m-%Y")='00-00-0000',date_format(pa.fecha,"%d-%m-%Y"),date_format(pva.fecha,"%d-%m-%Y")) AS "DATE",<{{{><}}}>pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(pa.tipopiloto="PIC",piloto.nombre,if(pa.tipoinstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(ifnull(pa.comentarios,"")," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,ifnull(piloto.apellido,""),CONCAT(ifnull(piloto.segundoNombre,"")," ",ifnull(piloto.apellido,""))))) AS REMARKS,<{{{><}}}>pa.idpiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(a.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN reserva_vuelos rv ON pa.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pa.idleccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion = pa.matricula<{{{><}}}>LEFT JOIN personas piloto ON pa.idpiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pa.idinstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)) vuelos ORDER BY STR_TO_DATE(DATE, "%d-%m-%Y") DESC,ARRIVALTIME DESC
Servers\aerodynamics.com.es\QueryHistory\116<|||>1<|||>2021-02-17 23:57:53|admin_aerodynamics|63|CREATE VIEW vista_logbook_instructor_completo AS<{{{><}}}>SELECT * FROM ((SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(pva.tipopiloto="PIC",piloto.nombre,if(pva.tipoinstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(ifnull(pva.comentarios,"")," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,ifnull(piloto.apellido,""),CONCAT(ifnull(piloto.segundoNombre,"")," ",ifnull(piloto.apellido,""))))) AS REMARKS,<{{{><}}}>pva.idinstructor AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(a.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipoinstructor!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipoinstructor="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipoinstructor="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipoinstructor="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipoinstructor="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipoinstructor="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(a.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pva.idleccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion=pva.matricula<{{{><}}}>LEFT JOIN personas piloto ON pva.idpiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pva.idinstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>pa.idreserva AS idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>pa.idcurso AS idCurso,<{{{><}}}>if(date_format(pva.fecha,"%d-%m-%Y") IS NULL OR date_format(pva.fecha,"%d-%m-%Y")='00-00-0000',date_format(pa.fecha,"%d-%m-%Y"),date_format(pva.fecha,"%d-%m-%Y")) AS "DATE",<{{{><}}}>pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(pa.tipopiloto="PIC",piloto.nombre,if(pa.tipoinstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(ifnull(pa.comentarios,"")," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,ifnull(piloto.apellido,""),CONCAT(ifnull(piloto.segundoNombre,"")," ",ifnull(piloto.apellido,""))))) AS REMARKS,<{{{><}}}>pa.idinstructor AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipoinstructor!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipoinstructor="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipoinstructor="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipoinstructor="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipoinstructor="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipoinstructor="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(a.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN reserva_vuelos rv ON pa.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pa.idleccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion = pa.matricula<{{{><}}}>LEFT JOIN personas piloto ON pa.idpiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pa.idinstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)) vuelos ORDER BY STR_TO_DATE(DATE, "%d-%m-%Y") DESC,ARRIVALTIME DESC
Servers\aerodynamics.com.es\QueryHistory\117<|||>1<|||>2021-02-18 00:06:44|admin_aerodynamics|328|<{{{><}}}><{{{><}}}>(SELECT * FROM vista_logbook_instructor_completo)<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\118<|||>1<|||>2021-02-18 00:07:45|admin_aerodynamics|891|<{{{><}}}><{{{><}}}>(SELECT * FROM vista_logbook_instructor_completo)<{{{><}}}>UNION<{{{><}}}>(SELECT * FROM vista_logbook_piloto_completo)<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\120<|||>1<|||>2021-02-18 00:08:18|admin_aerodynamics|469|<{{{><}}}><{{{><}}}><{{{><}}}>(SELECT * FROM vista_logbook_piloto_completo)<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\121<|||>1<|||>2021-02-18 00:08:36|admin_aerodynamics|922|<{{{><}}}><{{{><}}}><{{{><}}}>(SELECT * FROM vista_logbook_piloto_completo)<{{{><}}}>UNION<{{{><}}}>(SELECT * FROM vista_logbook_instructor_completo)<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\123<|||>1<|||>2021-02-18 00:19:12|admin_aerodynamics|62|CREATE VIEW vista_logbook_instructor_completo AS<{{{><}}}>SELECT * FROM ((SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(pva.tipopiloto="PIC",piloto.nombre,if(pva.tipoinstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(ifnull(pva.comentarios,"")," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,ifnull(piloto.apellido,""),CONCAT(ifnull(piloto.segundoNombre,"")," ",ifnull(piloto.apellido,""))))) AS REMARKS,<{{{><}}}>pva.idinstructor AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(a.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipoinstructor!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipoinstructor="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipoinstructor="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipoinstructor="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipoinstructor="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(sum(pva.airborne)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(a.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pva.idleccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion=pva.matricula<{{{><}}}>LEFT JOIN personas piloto ON pva.idpiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pva.idinstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>pa.idreserva AS idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>pa.idcurso AS idCurso,<{{{><}}}>if(date_format(pva.fecha,"%d-%m-%Y") IS NULL OR date_format(pva.fecha,"%d-%m-%Y")='00-00-0000',date_format(pa.fecha,"%d-%m-%Y"),date_format(pva.fecha,"%d-%m-%Y")) AS "DATE",<{{{><}}}>pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(pa.tipopiloto="PIC",piloto.nombre,if(pa.tipoinstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(ifnull(pa.comentarios,"")," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,ifnull(piloto.apellido,""),CONCAT(ifnull(piloto.segundoNombre,"")," ",ifnull(piloto.apellido,""))))) AS REMARKS,<{{{><}}}>pa.idinstructor AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipoinstructor!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipoinstructor="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipoinstructor="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipoinstructor="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipoinstructor="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(sum(pva.airborne)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(a.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN reserva_vuelos rv ON pa.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pa.idleccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion = pa.matricula<{{{><}}}>LEFT JOIN personas piloto ON pa.idpiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pa.idinstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)) vuelos ORDER BY STR_TO_DATE(DATE, "%d-%m-%Y") DESC,ARRIVALTIME DESC
Servers\aerodynamics.com.es\QueryHistory\124<|||>1<|||>2021-02-18 00:19:17|admin_aerodynamics|1203|<{{{><}}}><{{{><}}}><{{{><}}}>SELECT * FROM ((SELECT * FROM vista_logbook_piloto_completo)<{{{><}}}>	UNION<{{{><}}}>(SELECT * FROM vista_logbook_instructor_completo)) vuelos ORDER BY STR_TO_DATE(DATE, "%d-%m-%Y") DESC,ARRIVALTIME DESC<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\122<|||>1<|||>2021-02-18 00:20:34|admin_aerodynamics|47|<{{{><}}}><{{{><}}}>CREATE VIEW vista_logbook_personas_completo as<{{{><}}}>SELECT * FROM ((SELECT * FROM vista_logbook_piloto_completo)<{{{><}}}>	UNION<{{{><}}}>(SELECT * FROM vista_logbook_instructor_completo)) vuelos ORDER BY STR_TO_DATE(DATE, "%d-%m-%Y") DESC,ARRIVALTIME DESC<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\125<|||>1<|||>2021-02-18 00:32:59|admin_aerodynamics|78|CREATE VIEW vista_logbook_instructor_completo_resumen AS<{{{><}}}>SELECT * FROM ((SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(pva.tipopiloto="PIC",piloto.nombre,if(pva.tipoinstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(ifnull(pva.comentarios,"")," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,ifnull(piloto.apellido,""),CONCAT(ifnull(piloto.segundoNombre,"")," ",ifnull(piloto.apellido,""))))) AS REMARKS,<{{{><}}}>pva.idinstructor AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(a.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipoinstructor!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipoinstructor="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipoinstructor="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipoinstructor="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipoinstructor="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(sum(pva.airborne)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(a.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pva.idleccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion=pva.matricula<{{{><}}}>LEFT JOIN personas piloto ON pva.idpiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pva.idinstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>pa.idreserva AS idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>pa.idcurso AS idCurso,<{{{><}}}>if(date_format(pva.fecha,"%d-%m-%Y") IS NULL OR date_format(pva.fecha,"%d-%m-%Y")='00-00-0000',date_format(pa.fecha,"%d-%m-%Y"),date_format(pva.fecha,"%d-%m-%Y")) AS "DATE",<{{{><}}}>pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(pa.tipopiloto="PIC",piloto.nombre,if(pa.tipoinstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(ifnull(pa.comentarios,"")," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,ifnull(piloto.apellido,""),CONCAT(ifnull(piloto.segundoNombre,"")," ",ifnull(piloto.apellido,""))))) AS REMARKS,<{{{><}}}>pa.idinstructor AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipoinstructor!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipoinstructor="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipoinstructor="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipoinstructor="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipoinstructor="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(sum(pva.airborne)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(a.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN reserva_vuelos rv ON pa.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pa.idleccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion = pa.matricula<{{{><}}}>LEFT JOIN personas piloto ON pa.idpiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pa.idinstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)) vuelos GROUP BY PILOTO,idCurso
Servers\aerodynamics.com.es\QueryHistory\126<|||>1<|||>2021-02-18 00:39:43|admin_aerodynamics|62|CREATE VIEW vista_logbook_piloto_completo_resumen AS<{{{><}}}>SELECT * FROM ((SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(pva.tipopiloto="PIC",piloto.nombre,if(pva.tipoinstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(ifnull(pva.comentarios,"")," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,ifnull(piloto.apellido,""),CONCAT(ifnull(piloto.segundoNombre,"")," ",ifnull(piloto.apellido,""))))) AS REMARKS,<{{{><}}}>pva.idpiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(a.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(a.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pva.idleccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion=pva.matricula<{{{><}}}>LEFT JOIN personas piloto ON pva.idpiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pva.idinstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>pa.idreserva AS idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>pa.idcurso AS idCurso,<{{{><}}}>if(date_format(pva.fecha,"%d-%m-%Y") IS NULL OR date_format(pva.fecha,"%d-%m-%Y")='00-00-0000',date_format(pa.fecha,"%d-%m-%Y"),date_format(pva.fecha,"%d-%m-%Y")) AS "DATE",<{{{><}}}>pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(pa.tipopiloto="PIC",piloto.nombre,if(pa.tipoinstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(ifnull(pa.comentarios,"")," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,ifnull(piloto.apellido,""),CONCAT(ifnull(piloto.segundoNombre,"")," ",ifnull(piloto.apellido,""))))) AS REMARKS,<{{{><}}}>pa.idpiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(a.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN reserva_vuelos rv ON pa.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pa.idleccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion = pa.matricula<{{{><}}}>LEFT JOIN personas piloto ON pa.idpiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pa.idinstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)) vuelos group by vuelos.PILOTO,vuelos.idCurso
Servers\aerodynamics.com.es\QueryHistory\127<|||>1<|||>2021-02-18 00:41:09|admin_aerodynamics|62|<{{{><}}}><{{{><}}}>CREATE VIEW vista_logbook_personas_completo_resumen as<{{{><}}}>SELECT * FROM ((SELECT * FROM vista_logbook_piloto_completo_resumen)<{{{><}}}>	UNION<{{{><}}}>(SELECT * FROM vista_logbook_instructor_completo_resumen)) vuelos group by vuelos.PILOTO,vuelos.idCurso<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\128<|||>1<|||>2021-02-18 00:42:11|admin_aerodynamics|62|<{{{><}}}><{{{><}}}>CREATE VIEW vista_logbook_personas_completo_total as<{{{><}}}>SELECT * FROM ((SELECT * FROM vista_logbook_piloto_completo_resumen)<{{{><}}}>	UNION<{{{><}}}>(SELECT * FROM vista_logbook_instructor_completo_resumen)) vuelos group by vuelos.PILOTO<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\129<|||>1<|||>2021-02-18 00:48:11|admin_aerodynamics|531|SELECT * FROM ((SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(pva.tipopiloto="PIC",piloto.nombre,if(pva.tipoinstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(ifnull(pva.comentarios,"")," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,ifnull(piloto.apellido,""),CONCAT(ifnull(piloto.segundoNombre,"")," ",ifnull(piloto.apellido,""))))) AS REMARKS,<{{{><}}}>pva.idpiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(a.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(a.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pva.idleccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion=pva.matricula<{{{><}}}>LEFT JOIN personas piloto ON pva.idpiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pva.idinstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>pa.idreserva AS idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>pa.idcurso AS idCurso,<{{{><}}}>if(date_format(pva.fecha,"%d-%m-%Y") IS NULL OR date_format(pva.fecha,"%d-%m-%Y")='00-00-0000',date_format(pa.fecha,"%d-%m-%Y"),date_format(pva.fecha,"%d-%m-%Y")) AS "DATE",<{{{><}}}>pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(pa.tipopiloto="PIC",piloto.nombre,if(pa.tipoinstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(ifnull(pa.comentarios,"")," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,ifnull(piloto.apellido,""),CONCAT(ifnull(piloto.segundoNombre,"")," ",ifnull(piloto.apellido,""))))) AS REMARKS,<{{{><}}}>pa.idpiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(a.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN reserva_vuelos rv ON pa.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pa.idleccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion = pa.matricula<{{{><}}}>LEFT JOIN personas piloto ON pa.idpiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pa.idinstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)) vuelos
Servers\aerodynamics.com.es\QueryHistory\130<|||>1<|||>2021-02-18 00:48:53|admin_aerodynamics|156|SELECT * FROM ((SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(pva.tipopiloto="PIC",piloto.nombre,if(pva.tipoinstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(ifnull(pva.comentarios,"")," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,ifnull(piloto.apellido,""),CONCAT(ifnull(piloto.segundoNombre,"")," ",ifnull(piloto.apellido,""))))) AS REMARKS,<{{{><}}}>pva.idpiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(a.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(a.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pva.idleccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion=pva.matricula<{{{><}}}>LEFT JOIN personas piloto ON pva.idpiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pva.idinstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>pa.idreserva AS idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>pa.idcurso AS idCurso,<{{{><}}}>if(date_format(pva.fecha,"%d-%m-%Y") IS NULL OR date_format(pva.fecha,"%d-%m-%Y")='00-00-0000',date_format(pa.fecha,"%d-%m-%Y"),date_format(pva.fecha,"%d-%m-%Y")) AS "DATE",<{{{><}}}>pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(pa.tipopiloto="PIC",piloto.nombre,if(pa.tipoinstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(ifnull(pa.comentarios,"")," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,ifnull(piloto.apellido,""),CONCAT(ifnull(piloto.segundoNombre,"")," ",ifnull(piloto.apellido,""))))) AS REMARKS,<{{{><}}}>pa.idpiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(a.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN reserva_vuelos rv ON pa.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pa.idleccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion = pa.matricula<{{{><}}}>LEFT JOIN personas piloto ON pa.idpiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pa.idinstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)) vuelos group by vuelos.PILOTO,vuelos.idCurso
Servers\aerodynamics.com.es\QueryHistory\131<|||>1<|||>2021-02-18 00:50:28|admin_aerodynamics|141|SELECT * FROM ((SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(pva.tipopiloto="PIC",piloto.nombre,if(pva.tipoinstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(ifnull(pva.comentarios,"")," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,ifnull(piloto.apellido,""),CONCAT(ifnull(piloto.segundoNombre,"")," ",ifnull(piloto.apellido,""))))) AS REMARKS,<{{{><}}}>pva.idinstructor AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(a.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(a.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pva.idleccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion=pva.matricula<{{{><}}}>LEFT JOIN personas piloto ON pva.idpiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pva.idinstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>pa.idreserva AS idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>pa.idcurso AS idCurso,<{{{><}}}>if(date_format(pva.fecha,"%d-%m-%Y") IS NULL OR date_format(pva.fecha,"%d-%m-%Y")='00-00-0000',date_format(pa.fecha,"%d-%m-%Y"),date_format(pva.fecha,"%d-%m-%Y")) AS "DATE",<{{{><}}}>pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(pa.tipopiloto="PIC",piloto.nombre,if(pa.tipoinstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(ifnull(pa.comentarios,"")," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,ifnull(piloto.apellido,""),CONCAT(ifnull(piloto.segundoNombre,"")," ",ifnull(piloto.apellido,""))))) AS REMARKS,<{{{><}}}>pa.idinstructor AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(a.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN reserva_vuelos rv ON pa.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pa.idleccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion = pa.matricula<{{{><}}}>LEFT JOIN personas piloto ON pa.idpiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pa.idinstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)) vuelos group by vuelos.PILOTO,vuelos.idCurso<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\132<|||>1<|||>2021-02-18 00:51:13|admin_aerodynamics|62|SELECT * FROM ((SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(pva.tipopiloto="PIC",piloto.nombre,if(pva.tipoinstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(ifnull(pva.comentarios,"")," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,ifnull(piloto.apellido,""),CONCAT(ifnull(piloto.segundoNombre,"")," ",ifnull(piloto.apellido,""))))) AS REMARKS,<{{{><}}}>pva.idinstructor AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(a.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(a.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pva.idleccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion=pva.matricula<{{{><}}}>LEFT JOIN personas piloto ON pva.idpiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pva.idinstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>pa.idreserva AS idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>pa.idcurso AS idCurso,<{{{><}}}>if(date_format(pva.fecha,"%d-%m-%Y") IS NULL OR date_format(pva.fecha,"%d-%m-%Y")='00-00-0000',date_format(pa.fecha,"%d-%m-%Y"),date_format(pva.fecha,"%d-%m-%Y")) AS "DATE",<{{{><}}}>pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(pa.tipopiloto="PIC",piloto.nombre,if(pa.tipoinstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(ifnull(pa.comentarios,"")," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,ifnull(piloto.apellido,""),CONCAT(ifnull(piloto.segundoNombre,"")," ",ifnull(piloto.apellido,""))))) AS REMARKS,<{{{><}}}>pa.idinstructor AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(a.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN reserva_vuelos rv ON pa.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pa.idleccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion = pa.matricula<{{{><}}}>LEFT JOIN personas piloto ON pa.idpiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pa.idinstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)) vuelos group by vuelos.PILOTO<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\134<|||>1<|||>2021-02-18 11:57:51|admin_aerodynamics|125|SELECT * FROM ((SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(pva.tipopiloto="PIC",piloto.nombre,if(pva.tipoinstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(ifnull(pva.comentarios,"")," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,ifnull(piloto.apellido,""),CONCAT(ifnull(piloto.segundoNombre,"")," ",ifnull(piloto.apellido,""))))) AS REMARKS,<{{{><}}}>pva.idpiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(a.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(a.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pva.idleccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion=pva.matricula<{{{><}}}>LEFT JOIN personas piloto ON pva.idpiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pva.idinstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>pa.idreserva AS idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>pa.idcurso AS idCurso,<{{{><}}}>if(date_format(pva.fecha,"%d-%m-%Y") IS NULL OR date_format(pva.fecha,"%d-%m-%Y")='00-00-0000',date_format(pa.fecha,"%d-%m-%Y"),date_format(pva.fecha,"%d-%m-%Y")) AS "DATE",<{{{><}}}>pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(pa.tipopiloto="PIC",piloto.nombre,if(pa.tipoinstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(ifnull(pa.comentarios,"")," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,ifnull(piloto.apellido,""),CONCAT(ifnull(piloto.segundoNombre,"")," ",ifnull(piloto.apellido,""))))) AS REMARKS,<{{{><}}}>pa.idpiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(a.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN reserva_vuelos rv ON pa.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pa.idleccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion = pa.matricula<{{{><}}}>LEFT JOIN personas piloto ON pa.idpiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pa.idinstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.id ORDER BY pva.fecha DESC,pva.parada DESC)) vuelos group by vuelos.PILOTO
Servers\aerodynamics.com.es\QueryHistory\133<|||>1<|||>2021-02-18 11:59:16|admin_aerodynamics|109|SELECT * FROM ((SELECT <{{{><}}}>rv.idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>c.idCurso AS idCurso,<{{{><}}}>date_format(pva.fecha,"%d-%m-%Y") AS "DATE",<{{{><}}}>lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(pva.tipopiloto="PIC",piloto.nombre,if(pva.tipoinstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(ifnull(pva.comentarios,"")," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,ifnull(piloto.apellido,""),CONCAT(ifnull(piloto.segundoNombre,"")," ",ifnull(piloto.apellido,""))))) AS REMARKS,<{{{><}}}>pva.idpiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(a.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pva.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(a.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(totalaterrizajes IS NULL ,0,totalaterrizajes-IFNULL(aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN reserva_vuelos rv ON pva.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pva.idleccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion=pva.matricula<{{{><}}}>LEFT JOIN personas piloto ON pva.idpiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pva.idinstructor=instructor.idPersona<{{{><}}}>GROUP BY pva.idpiloto)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>pa.idreserva AS idReserva,<{{{><}}}>pva.idVuelo AS idVuelo,<{{{><}}}>pa.idcurso AS idCurso,<{{{><}}}>if(date_format(pva.fecha,"%d-%m-%Y") IS NULL OR date_format(pva.fecha,"%d-%m-%Y")='00-00-0000',date_format(pa.fecha,"%d-%m-%Y"),date_format(pva.fecha,"%d-%m-%Y")) AS "DATE",<{{{><}}}>pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>if(pa.tipopiloto="PIC",piloto.nombre,if(pa.tipoinstructor="PIC",instructor.nombre,"")) AS PICNAME,<{{{><}}}>concat(ifnull(pa.comentarios,"")," PILOT NAME: ",CONCAT(piloto.nombre," ",if(piloto.segundoNombre IS NULL,ifnull(piloto.apellido,""),CONCAT(ifnull(piloto.segundoNombre,"")," ",ifnull(piloto.apellido,""))))) AS REMARKS,<{{{><}}}>pa.idpiloto AS PILOTO,<{{{><}}}>CONCAT(c.refCurso," ",c.nombre) AS CURSO,<{{{><}}}>sec_to_time(if(rv.simulador=0,SUM(pva.airborne),0)) AS TOTALVUELO,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(ifnull(if(rv.simulador=0,SUM(TIME_TO_SEC(pva.timeNightVFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS SE,<{{{><}}}>sec_to_time(ifnull(SUM(if(a.motorUno!="" AND a.motorDos!="" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS ME,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto!="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayVFR))+SUM(TIME_TO_SEC(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeDayIFR))+SUM(TIME_TO_SEC(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>sec_to_time(ifnull(if(a.simulador=0,SUM(TIME_TO_SEC(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="PIC" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS PIC,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="CO-PILOT" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS COPILOT,<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="DUAL" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS "DUAL",<{{{><}}}>sec_to_time(ifnull(SUM(if(pa.tipopiloto="INSTRUCTOR" AND a.simulador=0,TIME_TO_SEC(pva.airborne),0)),0)) AS INSTRUCTOR,<{{{><}}}>sec_to_time(if(a.simulador=1,SUM(pva.airborne),0)) AS FSTD,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(IF(pva.totalaterrizajes IS NULL ,0,pva.totalaterrizajes-IFNULL(pva.aterrizajevisual,0))) AS LANDINGSNIGHT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva <{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN reserva_vuelos rv ON pa.idreserva=rv.idReserva<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pa.idleccion<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=m.idCurso<{{{><}}}>LEFT JOIN aviones a ON a.registracion = pa.matricula<{{{><}}}>LEFT JOIN personas piloto ON pa.idpiloto=piloto.idPersona<{{{><}}}>LEFT JOIN personas instructor ON pa.idinstructor=instructor.idPersona<{{{><}}}>GROUP BY pa.idpiloto )) vuelos group by vuelos.PILOTO
Servers\aerodynamics.com.es\QueryHistory\135<|||>1<|||>2021-02-18 12:12:17|admin_aerodynamics|172|CREATE VIEW vista_logbook_piloto_completo_total as<{{{><}}}>SELECT  `vuelos`.`idReserva`            AS `idReserva`<{{{><}}}>       ,`vuelos`.`idVuelo`              AS `idVuelo`<{{{><}}}>       ,`vuelos`.`idCurso`              AS `idCurso`<{{{><}}}>       ,`vuelos`.`DATE`                 AS `DATE`<{{{><}}}>       ,`vuelos`.`DEPARTUREPLACE`       AS `DEPARTUREPLACE`<{{{><}}}>       ,`vuelos`.`DEPARTURETIME`        AS `DEPARTURETIME`<{{{><}}}>       ,`vuelos`.`ARRIVALPLACE`         AS `ARRIVALPLACE`<{{{><}}}>       ,`vuelos`.`ARRIVALTIME`          AS `ARRIVALTIME`<{{{><}}}>       ,`vuelos`.`AIRCRAFTMODEL`        AS `AIRCRAFTMODEL`<{{{><}}}>       ,`vuelos`.`AIRCRAFTREGISTRATION` AS `AIRCRAFTREGISTRATION`<{{{><}}}>       ,`vuelos`.`PICNAME`              AS `PICNAME`<{{{><}}}>       ,`vuelos`.`REMARKS`              AS `REMARKS`<{{{><}}}>       ,`vuelos`.`PILOTO`               AS `PILOTO`<{{{><}}}>       ,`vuelos`.`CURSO`                AS `CURSO`<{{{><}}}>       ,`vuelos`.`TOTALVUELO`           AS `TOTALVUELO`<{{{><}}}>       ,`vuelos`.`TOTALVUELODAY`        AS `TOTALVUELODAY`<{{{><}}}>       ,`vuelos`.`TOTALVUELONIGHT`      AS `TOTALVUELONIGHT`<{{{><}}}>       ,`vuelos`.`SE`                   AS `SE`<{{{><}}}>       ,`vuelos`.`ME`                   AS `ME`<{{{><}}}>       ,`vuelos`.`XCSOLO`               AS `XCSOLO`<{{{><}}}>       ,`vuelos`.`XCDUAL`               AS `XCDUAL`<{{{><}}}>       ,`vuelos`.`VFR`                  AS `VFR`<{{{><}}}>       ,`vuelos`.`IFR`                  AS `IFR`<{{{><}}}>       ,`vuelos`.`IFRSIM`               AS `IFRSIM`<{{{><}}}>       ,`vuelos`.`PIC`                  AS `PIC`<{{{><}}}>       ,`vuelos`.`COPILOT`              AS `COPILOT`<{{{><}}}>       ,`vuelos`.`DUAL`                 AS `DUAL`<{{{><}}}>       ,`vuelos`.`INSTRUCTOR`           AS `INSTRUCTOR`<{{{><}}}>       ,`vuelos`.`FSTD`                 AS `FSTD`<{{{><}}}>       ,`vuelos`.`LANDINGSDAY`          AS `LANDINGSDAY`<{{{><}}}>       ,`vuelos`.`LANDINGSNIGHT`        AS `LANDINGSNIGHT`<{{{><}}}>FROM <{{{><}}}>((<{{{><}}}>	SELECT  `rv`.`idReserva`                                                                                                                      AS `idReserva`<{{{><}}}>	       ,`pva`.`id`                                                                                                                            AS `idVuelo`<{{{><}}}>	       ,`c`.`idCurso`                                                                                                                         AS `idCurso`<{{{><}}}>	       ,date_format(`pva`.`fecha`,'%d-%m-%Y')                                                                                                 AS `DATE`<{{{><}}}>	       ,`pva`.`lugarsalida`                                                                                                                   AS `DEPARTUREPLACE`<{{{><}}}>	       ,`pva`.`despegue`                                                                                                                      AS `DEPARTURETIME`<{{{><}}}>	       ,`pva`.`lugarllegada`                                                                                                                  AS `ARRIVALPLACE`<{{{><}}}>	       ,`pva`.`aterrizaje`                                                                                                                    AS `ARRIVALTIME`<{{{><}}}>	       ,`a`.`modelo`                                                                                                                          AS `AIRCRAFTMODEL`<{{{><}}}>	       ,`a`.`registracion`                                                                                                                    AS `AIRCRAFTREGISTRATION`<{{{><}}}>	       ,if(`pva`.`tipopiloto` = 'PIC',`piloto`.`nombre`,if(`pva`.`tipoinstructor` = 'PIC',`instructor`.`nombre`,''))                          AS `PICNAME`<{{{><}}}>	       ,concat(ifnull(`pva`.`comentarios`,''),' PILOT NAME: ',concat(`piloto`.`nombre`,' ',if(`piloto`.`segundoNombre` is null,ifnull(`piloto`.`apellido`,''),concat(ifnull(`piloto`.`segundoNombre`,''),' ',ifnull(`piloto`.`apellido`,''))))) AS `REMARKS`<{{{><}}}>	       ,`pva`.`idpiloto`                                                                                                                      AS `PILOTO`<{{{><}}}>	       ,concat(`c`.`refCurso`,' ',`c`.`nombre`)                                                                                               AS `CURSO`<{{{><}}}>	       ,sec_to_time(if(`a`.`simulador` = 0,SUM(`pva`.`airborne`),0))                                                                          AS `TOTALVUELO`<{{{><}}}>	       ,sec_to_time(ifnull(if(`a`.`simulador` = 0,SUM(time_to_sec(`pva`.`timeDayVFR`)) + SUM(time_to_sec(`pva`.`timeDayIFR`)) + SUM(time_to_sec(`pva`.`timeSimulatedIFR`)),0),0)) AS `TOTALVUELODAY`<{{{><}}}>	       ,sec_to_time(ifnull(if(`a`.`simulador` = 0,SUM(time_to_sec(`pva`.`timeNightVFR`)) + SUM(time_to_sec(`pva`.`timeNightIFR`)),0),0))      AS `TOTALVUELONIGHT`<{{{><}}}>	       ,sec_to_time(ifnull(SUM(if(`a`.`motorUno` <> '' AND `a`.`motorDos` = '' AND `a`.`simulador` = 0,time_to_sec(`pva`.`airborne`),0)),0))  AS `SE`<{{{><}}}>	       ,sec_to_time(ifnull(SUM(if(`a`.`motorUno` <> '' AND `a`.`motorDos` <> '' AND `a`.`simulador` = 0,time_to_sec(`pva`.`airborne`),0)),0)) AS `ME`<{{{><}}}>	       ,sec_to_time(ifnull(SUM(if(`pva`.`tipopiloto` <> 'DUAL' AND `a`.`simulador` = 0,time_to_sec(`pva`.`timeXC`),0)),0))                    AS `XCSOLO`<{{{><}}}>	       ,sec_to_time(ifnull(SUM(if(`pva`.`tipopiloto` = 'DUAL' AND `a`.`simulador` = 0,time_to_sec(`pva`.`timeXC`),0)),0))                     AS `XCDUAL`<{{{><}}}>	       ,sec_to_time(ifnull(if(`a`.`simulador` = 0,SUM(time_to_sec(`pva`.`timeDayVFR`)) + SUM(time_to_sec(`pva`.`timeNightVFR`)),0),0))        AS `VFR`<{{{><}}}>	       ,sec_to_time(ifnull(if(`a`.`simulador` = 0,SUM(time_to_sec(`pva`.`timeDayIFR`)) + SUM(time_to_sec(`pva`.`timeNightIFR`)),0),0))        AS `IFR`<{{{><}}}>	       ,sec_to_time(ifnull(if(`a`.`simulador` = 0,SUM(time_to_sec(`pva`.`timeSimulatedIFR`)),0),0))                                           AS `IFRSIM`<{{{><}}}>	       ,sec_to_time(ifnull(SUM(if(`pva`.`tipopiloto` = 'PIC' AND `a`.`simulador` = 0,time_to_sec(`pva`.`airborne`),0)),0))                    AS `PIC`<{{{><}}}>	       ,sec_to_time(ifnull(SUM(if(`pva`.`tipopiloto` = 'CO-PILOT' AND `a`.`simulador` = 0,time_to_sec(`pva`.`airborne`),0)),0))               AS `COPILOT`<{{{><}}}>	       ,sec_to_time(ifnull(SUM(if(`pva`.`tipopiloto` = 'DUAL' AND `a`.`simulador` = 0,time_to_sec(`pva`.`airborne`),0)),0))                   AS `DUAL`<{{{><}}}>	       ,sec_to_time(ifnull(SUM(if(`pva`.`tipopiloto` = 'INSTRUCTOR' AND `a`.`simulador` = 0,time_to_sec(`pva`.`airborne`),0)),0))             AS `INSTRUCTOR`<{{{><}}}>	       ,sec_to_time(if(`a`.`simulador` = 1,SUM(`pva`.`airborne`),0))                                                                          AS `FSTD`<{{{><}}}>	       ,SUM(if(`pva`.`totalaterrizajes` is null,0,`pva`.`totalaterrizajes` - ifnull(`pva`.`aterrizajevisual`,0)))                             AS `LANDINGSDAY`<{{{><}}}>	       ,SUM(if(`pva`.`totalaterrizajes` is null,0,`pva`.`totalaterrizajes` - ifnull(`pva`.`aterrizajevisual`,0)))                             AS `LANDINGSNIGHT`<{{{><}}}>	FROM <{{{><}}}>	((((((`admin_aerodynamics`.`personas_vuelos_automatizacion` `pva`<{{{><}}}>		LEFT JOIN `admin_aerodynamics`.`reserva_vuelos` `rv` on<{{{><}}}>		(`pva`.`idreserva` = `rv`.`idReserva`<{{{><}}}>		))<{{{><}}}>		LEFT JOIN `admin_aerodynamics`.`misiones` `m` on<{{{><}}}>		(`m`.`idMision` = `pva`.`idleccion`<{{{><}}}>		))<{{{><}}}>		LEFT JOIN `admin_aerodynamics`.`cursos` `c` on<{{{><}}}>		(`c`.`idCurso` = `m`.`idCurso`<{{{><}}}>		))<{{{><}}}>		LEFT JOIN `admin_aerodynamics`.`aviones` `a` on<{{{><}}}>		(`a`.`registracion` = `pva`.`matricula`<{{{><}}}>		))<{{{><}}}>		LEFT JOIN `admin_aerodynamics`.`personas` `piloto` on<{{{><}}}>		(`pva`.`idpiloto` = `piloto`.`idPersona`<{{{><}}}>		))<{{{><}}}>		LEFT JOIN `admin_aerodynamics`.`personas` `instructor` on<{{{><}}}>		(`pva`.`idinstructor` = `instructor`.`idPersona`<{{{><}}}>		)<{{{><}}}>	)<{{{><}}}>	GROUP BY  `pva`.`idpiloto`) union (<{{{><}}}>	SELECT  `pa`.`idreserva`                                                                                                                      AS `idReserva`<{{{><}}}>	       ,`pva`.`idVuelo`                                                                                                                       AS `idVuelo`<{{{><}}}>	       ,`pa`.`idcurso`                                                                                                                        AS `idCurso`<{{{><}}}>	       ,if(date_format(`pva`.`fecha`,'%d-%m-%Y') is null or date_format(`pva`.`fecha`,'%d-%m-%Y') = '00-00-0000',date_format(`pa`.`fecha`,'%d-%m-%Y'),date_format(`pva`.`fecha`,'%d-%m-%Y')) AS `DATE`<{{{><}}}>	       ,`pva`.`lugarsalida`                                                                                                                   AS `DEPARTUREPLACE`<{{{><}}}>	       ,`pva`.`despegue`                                                                                                                      AS `DEPARTURETIME`<{{{><}}}>	       ,`pva`.`lugarllegada`                                                                                                                  AS `ARRIVALPLACE`<{{{><}}}>	       ,`pva`.`aterrizaje`                                                                                                                    AS `ARRIVALTIME`<{{{><}}}>	       ,`a`.`modelo`                                                                                                                          AS `AIRCRAFTMODEL`<{{{><}}}>	       ,`a`.`registracion`                                                                                                                    AS `AIRCRAFTREGISTRATION`<{{{><}}}>	       ,if(`pa`.`tipopiloto` = 'PIC',`piloto`.`nombre`,if(`pa`.`tipoinstructor` = 'PIC',`instructor`.`nombre`,''))                            AS `PICNAME`<{{{><}}}>	       ,concat(ifnull(`pa`.`comentarios`,''),' PILOT NAME:\r\n ',concat(`piloto`.`nombre`,' ',if(`piloto`.`segundoNombre` is null,ifnull(`piloto`.`apellido`,''),concat(ifnull(`piloto`.`segundoNombre`,''),'\r\n ',ifnull(`piloto`.`apellido`,''))))) AS `REMARKS`<{{{><}}}>	       ,`pa`.`idpiloto`                                                                                                                       AS `PILOTO`<{{{><}}}>	       ,concat(`c`.`refCurso`,'\r\n ',`c`.`nombre`)                                                                                           AS `CURSO`<{{{><}}}>	       ,sec_to_time(if(`rv`.`simulador` = 0,SUM(`pva`.`airborne`),0))                                                                         AS `TOTALVUELO`<{{{><}}}>	       ,sec_to_time(ifnull(if(`rv`.`simulador` = 0,SUM(time_to_sec(`pva`.`timeDayVFR`)) + SUM(time_to_sec(`pva`.`timeDayIFR`)) + SUM(time_to_sec(`pva`.`timeSimulatedIFR`)),0),0)) AS `TOTALVUELODAY`<{{{><}}}>	       ,sec_to_time(ifnull(if(`rv`.`simulador` = 0,SUM(time_to_sec(`pva`.`timeNightVFR`)) + SUM(time_to_sec(`pva`.`timeNightIFR`)),0),0))     AS `TOTALVUELONIGHT`<{{{><}}}>	       ,sec_to_time(ifnull(SUM(if(`a`.`motorUno` <> '' AND `a`.`motorDos` = '' AND `a`.`simulador` = 0,time_to_sec(`pva`.`airborne`),0)),0))  AS `SE`<{{{><}}}>	       ,sec_to_time(ifnull(SUM(if(`a`.`motorUno` <> '' AND `a`.`motorDos` <> '' AND `a`.`simulador` = 0,time_to_sec(`pva`.`airborne`),0)),0)) AS `ME`<{{{><}}}>	       ,sec_to_time(ifnull(SUM(if(`pa`.`tipopiloto` <> 'DUAL' AND `a`.`simulador` = 0,time_to_sec(`pva`.`timeXC`),0)),0))                     AS `XCSOLO`<{{{><}}}>	       ,sec_to_time(ifnull(SUM(if(`pa`.`tipopiloto` = 'DUAL' AND `a`.`simulador` = 0,time_to_sec(`pva`.`timeXC`),0)),0))                      AS `XCDUAL`<{{{><}}}>	       ,sec_to_time(ifnull(if(`a`.`simulador` = 0,SUM(time_to_sec(`pva`.`timeDayVFR`)) + SUM(time_to_sec(`pva`.`timeNightVFR`)),0),0))        AS `VFR`<{{{><}}}>	       ,sec_to_time(ifnull(if(`a`.`simulador` = 0,SUM(time_to_sec(`pva`.`timeDayIFR`)) + SUM(time_to_sec(`pva`.`timeNightIFR`)),0),0))        AS `IFR`<{{{><}}}>	       ,sec_to_time(ifnull(if(`a`.`simulador` = 0,SUM(time_to_sec(`pva`.`timeSimulatedIFR`)),0),0))                                           AS `IFRSIM`<{{{><}}}>	       ,sec_to_time(ifnull(SUM(if(`pa`.`tipopiloto` = 'PIC' AND `a`.`simulador` = 0,time_to_sec(`pva`.`airborne`),0)),0))                     AS `PIC`<{{{><}}}>	       ,sec_to_time(ifnull(SUM(if(`pa`.`tipopiloto` = 'CO-PILOT' AND `a`.`simulador` = 0,time_to_sec(`pva`.`airborne`),0)),0))                AS `COPILOT`<{{{><}}}>	       ,sec_to_time(ifnull(SUM(if(`pa`.`tipopiloto` = 'DUAL' AND `a`.`simulador` = 0,time_to_sec(`pva`.`airborne`),0)),0))                    AS `DUAL`<{{{><}}}>	       ,sec_to_time(ifnull(SUM(if(`pa`.`tipopiloto` = 'INSTRUCTOR' AND `a`.`simulador` = 0,time_to_sec(`pva`.`airborne`),0)),0))              AS `INSTRUCTOR`<{{{><}}}>	       ,sec_to_time(if(`a`.`simulador` = 1,SUM(`pva`.`airborne`),0))                                                                          AS `FSTD`<{{{><}}}>	       ,SUM(if(`pva`.`totalaterrizajes` is null,0,`pva`.`totalaterrizajes` - ifnull(`pva`.`aterrizajevisual`,0)))                             AS `LANDINGSDAY`<{{{><}}}>	       ,SUM(if(`pva`.`totalaterrizajes` is null,0,`pva`.`totalaterrizajes` - ifnull(`pva`.`aterrizajevisual`,0)))                             AS `LANDINGSNIGHT`<{{{><}}}>	FROM <{{{><}}}>	(((((((`admin_aerodynamics`.`personas_rutas_vuelos_automatizacion` `pva`<{{{><}}}>		LEFT JOIN `admin_aerodynamics`.`personas_vuelos_automatizacion` `pa` on<{{{><}}}>		(`pa`.`id` = `pva`.`idVuelo`<{{{><}}}>		))<{{{><}}}>		LEFT JOIN `admin_aerodynamics`.`reserva_vuelos` `rv` on<{{{><}}}>		(`pa`.`idreserva` = `rv`.`idReserva`<{{{><}}}>		))<{{{><}}}>		LEFT JOIN `admin_aerodynamics`.`misiones` `m` on<{{{><}}}>		(`m`.`idMision` = `pa`.`idleccion`<{{{><}}}>		))<{{{><}}}>		LEFT JOIN `admin_aerodynamics`.`cursos` `c` on<{{{><}}}>		(`c`.`idCurso` = `m`.`idCurso`<{{{><}}}>		))<{{{><}}}>		LEFT JOIN `admin_aerodynamics`.`aviones` `a` on<{{{><}}}>		(`a`.`registracion` = `pa`.`matricula`<{{{><}}}>		))<{{{><}}}>		LEFT JOIN `admin_aerodynamics`.`personas` `piloto` on<{{{><}}}>		(`pa`.`idpiloto` = `piloto`.`idPersona`<{{{><}}}>		))<{{{><}}}>		LEFT JOIN `admin_aerodynamics`.`personas` `instructor` on<{{{><}}}>		(`pa`.`idinstructor` = `instructor`.`idPersona`<{{{><}}}>		)<{{{><}}}>	)<{{{><}}}>	GROUP BY  `pva`.`idpiloto`)<{{{><}}}>) `vuelos`<{{{><}}}>GROUP BY  `vuelos`.`PILOTO`
Servers\aerodynamics.com.es\QueryHistory\136<|||>1<|||>2021-02-18 12:14:07|admin_aerodynamics|62|CREATE VIEW vista_logbook_instructor_completo_total as<{{{><}}}>SELECT  `vuelos`.`idReserva`            AS `idReserva`<{{{><}}}>       ,`vuelos`.`idVuelo`              AS `idVuelo`<{{{><}}}>       ,`vuelos`.`idCurso`              AS `idCurso`<{{{><}}}>       ,`vuelos`.`DATE`                 AS `DATE`<{{{><}}}>       ,`vuelos`.`DEPARTUREPLACE`       AS `DEPARTUREPLACE`<{{{><}}}>       ,`vuelos`.`DEPARTURETIME`        AS `DEPARTURETIME`<{{{><}}}>       ,`vuelos`.`ARRIVALPLACE`         AS `ARRIVALPLACE`<{{{><}}}>       ,`vuelos`.`ARRIVALTIME`          AS `ARRIVALTIME`<{{{><}}}>       ,`vuelos`.`AIRCRAFTMODEL`        AS `AIRCRAFTMODEL`<{{{><}}}>       ,`vuelos`.`AIRCRAFTREGISTRATION` AS `AIRCRAFTREGISTRATION`<{{{><}}}>       ,`vuelos`.`PICNAME`              AS `PICNAME`<{{{><}}}>       ,`vuelos`.`REMARKS`              AS `REMARKS`<{{{><}}}>       ,`vuelos`.`PILOTO`               AS `PILOTO`<{{{><}}}>       ,`vuelos`.`CURSO`                AS `CURSO`<{{{><}}}>       ,`vuelos`.`TOTALVUELO`           AS `TOTALVUELO`<{{{><}}}>       ,`vuelos`.`TOTALVUELODAY`        AS `TOTALVUELODAY`<{{{><}}}>       ,`vuelos`.`TOTALVUELONIGHT`      AS `TOTALVUELONIGHT`<{{{><}}}>       ,`vuelos`.`SE`                   AS `SE`<{{{><}}}>       ,`vuelos`.`ME`                   AS `ME`<{{{><}}}>       ,`vuelos`.`XCSOLO`               AS `XCSOLO`<{{{><}}}>       ,`vuelos`.`XCDUAL`               AS `XCDUAL`<{{{><}}}>       ,`vuelos`.`VFR`                  AS `VFR`<{{{><}}}>       ,`vuelos`.`IFR`                  AS `IFR`<{{{><}}}>       ,`vuelos`.`IFRSIM`               AS `IFRSIM`<{{{><}}}>       ,`vuelos`.`PIC`                  AS `PIC`<{{{><}}}>       ,`vuelos`.`COPILOT`              AS `COPILOT`<{{{><}}}>       ,`vuelos`.`DUAL`                 AS `DUAL`<{{{><}}}>       ,`vuelos`.`INSTRUCTOR`           AS `INSTRUCTOR`<{{{><}}}>       ,`vuelos`.`FSTD`                 AS `FSTD`<{{{><}}}>       ,`vuelos`.`LANDINGSDAY`          AS `LANDINGSDAY`<{{{><}}}>       ,`vuelos`.`LANDINGSNIGHT`        AS `LANDINGSNIGHT`<{{{><}}}>FROM <{{{><}}}>((<{{{><}}}>	SELECT  `rv`.`idReserva`                                                                                                                      AS `idReserva`<{{{><}}}>	       ,`pva`.`id`                                                                                                                            AS `idVuelo`<{{{><}}}>	       ,`c`.`idCurso`                                                                                                                         AS `idCurso`<{{{><}}}>	       ,date_format(`pva`.`fecha`,'%d-%m-%Y')                                                                                                 AS `DATE`<{{{><}}}>	       ,`pva`.`lugarsalida`                                                                                                                   AS `DEPARTUREPLACE`<{{{><}}}>	       ,`pva`.`despegue`                                                                                                                      AS `DEPARTURETIME`<{{{><}}}>	       ,`pva`.`lugarllegada`                                                                                                                  AS `ARRIVALPLACE`<{{{><}}}>	       ,`pva`.`aterrizaje`                                                                                                                    AS `ARRIVALTIME`<{{{><}}}>	       ,`a`.`modelo`                                                                                                                          AS `AIRCRAFTMODEL`<{{{><}}}>	       ,`a`.`registracion`                                                                                                                    AS `AIRCRAFTREGISTRATION`<{{{><}}}>	       ,if(`pva`.`tipopiloto` = 'PIC',`piloto`.`nombre`,if(`pva`.`tipoinstructor` = 'PIC',`instructor`.`nombre`,''))                          AS `PICNAME`<{{{><}}}>	       ,concat(ifnull(`pva`.`comentarios`,''),' PILOT NAME: ',concat(`piloto`.`nombre`,' ',if(`piloto`.`segundoNombre` is null,ifnull(`piloto`.`apellido`,''),concat(ifnull(`piloto`.`segundoNombre`,''),' ',ifnull(`piloto`.`apellido`,''))))) AS `REMARKS`<{{{><}}}>	       ,`pva`.`idinstructor`                                                                                                                  AS `PILOTO`<{{{><}}}>	       ,concat(`c`.`refCurso`,' ',`c`.`nombre`)                                                                                               AS `CURSO`<{{{><}}}>	       ,sec_to_time(if(`a`.`simulador` = 0,SUM(`pva`.`airborne`),0))                                                                          AS `TOTALVUELO`<{{{><}}}>	       ,sec_to_time(ifnull(if(`a`.`simulador` = 0,SUM(time_to_sec(`pva`.`timeDayVFR`)) + SUM(time_to_sec(`pva`.`timeDayIFR`)) + SUM(time_to_sec(`pva`.`timeSimulatedIFR`)),0),0)) AS `TOTALVUELODAY`<{{{><}}}>	       ,sec_to_time(ifnull(if(`a`.`simulador` = 0,SUM(time_to_sec(`pva`.`timeNightVFR`)) + SUM(time_to_sec(`pva`.`timeNightIFR`)),0),0))      AS `TOTALVUELONIGHT`<{{{><}}}>	       ,sec_to_time(ifnull(SUM(if(`a`.`motorUno` <> '' AND `a`.`motorDos` = '' AND `a`.`simulador` = 0,time_to_sec(`pva`.`airborne`),0)),0))  AS `SE`<{{{><}}}>	       ,sec_to_time(ifnull(SUM(if(`a`.`motorUno` <> '' AND `a`.`motorDos` <> '' AND `a`.`simulador` = 0,time_to_sec(`pva`.`airborne`),0)),0)) AS `ME`<{{{><}}}>	       ,sec_to_time(ifnull(SUM(if(`pva`.`tipoinstructor` <> 'DUAL' AND `a`.`simulador` = 0,time_to_sec(`pva`.`timeXC`),0)),0))                AS `XCSOLO`<{{{><}}}>	       ,sec_to_time(ifnull(SUM(if(`pva`.`tipoinstructor` = 'DUAL' AND `a`.`simulador` = 0,time_to_sec(`pva`.`timeXC`),0)),0))                 AS `XCDUAL`<{{{><}}}>	       ,sec_to_time(ifnull(if(`a`.`simulador` = 0,SUM(time_to_sec(`pva`.`timeDayVFR`)) + SUM(time_to_sec(`pva`.`timeNightVFR`)),0),0))        AS `VFR`<{{{><}}}>	       ,sec_to_time(ifnull(if(`a`.`simulador` = 0,SUM(time_to_sec(`pva`.`timeDayIFR`)) + SUM(time_to_sec(`pva`.`timeNightIFR`)),0),0))        AS `IFR`<{{{><}}}>	       ,sec_to_time(ifnull(if(`a`.`simulador` = 0,SUM(time_to_sec(`pva`.`timeSimulatedIFR`)),0),0))                                           AS `IFRSIM`<{{{><}}}>	       ,sec_to_time(ifnull(SUM(if(`pva`.`tipoinstructor` = 'INSTRUCTOR' AND `a`.`simulador` = 0,time_to_sec(`pva`.`airborne`),0)),0))         AS `PIC`<{{{><}}}>	       ,sec_to_time(ifnull(SUM(if(`pva`.`tipoinstructor` = 'INSTRUCTOR' AND `a`.`simulador` = 0,time_to_sec(`pva`.`airborne`),0)),0))         AS `COPILOT`<{{{><}}}>	       ,sec_to_time(ifnull(SUM(if(`pva`.`tipoinstructor` = 'INSTRUCTOR' AND `a`.`simulador` = 0,time_to_sec(`pva`.`airborne`),0)),0))         AS `DUAL`<{{{><}}}>	       ,sec_to_time(SUM(`pva`.`airborne`))                                                                                                    AS `INSTRUCTOR`<{{{><}}}>	       ,sec_to_time(if(`a`.`simulador` = 1,SUM(`pva`.`airborne`),0))                                                                          AS `FSTD`<{{{><}}}>	       ,SUM(if(`pva`.`totalaterrizajes` is null,0,`pva`.`totalaterrizajes` - ifnull(`pva`.`aterrizajevisual`,0)))                             AS `LANDINGSDAY`<{{{><}}}>	       ,SUM(if(`pva`.`totalaterrizajes` is null,0,`pva`.`totalaterrizajes` - ifnull(`pva`.`aterrizajevisual`,0)))                             AS `LANDINGSNIGHT`<{{{><}}}>	FROM <{{{><}}}>	((((((`admin_aerodynamics`.`personas_vuelos_automatizacion` `pva`<{{{><}}}>		LEFT JOIN `admin_aerodynamics`.`reserva_vuelos` `rv` on<{{{><}}}>		(`pva`.`idreserva` = `rv`.`idReserva`<{{{><}}}>		))<{{{><}}}>		LEFT JOIN `admin_aerodynamics`.`misiones` `m` on<{{{><}}}>		(`m`.`idMision` = `pva`.`idleccion`<{{{><}}}>		))<{{{><}}}>		LEFT JOIN `admin_aerodynamics`.`cursos` `c` on<{{{><}}}>		(`c`.`idCurso` = `m`.`idCurso`<{{{><}}}>		))<{{{><}}}>		LEFT JOIN `admin_aerodynamics`.`aviones` `a` on<{{{><}}}>		(`a`.`registracion` = `pva`.`matricula`<{{{><}}}>		))<{{{><}}}>		LEFT JOIN `admin_aerodynamics`.`personas` `piloto` on<{{{><}}}>		(`pva`.`idpiloto` = `piloto`.`idPersona`<{{{><}}}>		))<{{{><}}}>		LEFT JOIN `admin_aerodynamics`.`personas` `instructor` on<{{{><}}}>		(`pva`.`idinstructor` = `instructor`.`idPersona`<{{{><}}}>		)<{{{><}}}>	)<{{{><}}}>	GROUP BY  `pva`.`idpiloto`) union (<{{{><}}}>	SELECT  `pa`.`idreserva`                                                                                                                      AS `idReserva`<{{{><}}}>	       ,`pva`.`idVuelo`                                                                                                                       AS `idVuelo`<{{{><}}}>	       ,`pa`.`idcurso`                                                                                                                        AS `idCurso`<{{{><}}}>	       ,if(date_format(`pva`.`fecha`,'%d-%m-%Y') is null or date_format(`pva`.`fecha`,'%d-%m-%Y') = '00-00-0000',date_format(`pa`.`fecha`,'%d-%m-%Y'),date_format(`pva`.`fecha`,'%d-%m-%Y')) AS `DATE`<{{{><}}}>	       ,`pva`.`lugarsalida`                                                                                                                   AS `DEPARTUREPLACE`<{{{><}}}>	       ,`pva`.`despegue`                                                                                                                      AS `DEPARTURETIME`<{{{><}}}>	       ,`pva`.`lugarllegada`                                                                                                                  AS `ARRIVALPLACE`<{{{><}}}>	       ,`pva`.`aterrizaje`                                                                                                                    AS `ARRIVALTIME`<{{{><}}}>	       ,`a`.`modelo`                                                                                                                          AS `AIRCRAFTMODEL`<{{{><}}}>	       ,`a`.`registracion`                                                                                                                    AS `AIRCRAFTREGISTRATION`<{{{><}}}>	       ,if(`pa`.`tipopiloto` = 'PIC',`piloto`.`nombre`,if(`pa`.`tipoinstructor` = 'PIC',`instructor`.`nombre`,''))                            AS `PICNAME`<{{{><}}}>	       ,concat(ifnull(`pa`.`comentarios`,''),' PILOT NAME: ',concat(`piloto`.`nombre`,' ',if(`piloto`.`segundoNombre` is null,ifnull(`piloto`.`apellido`,''),concat(ifnull(`piloto`.`segundoNombre`,''),' ',ifnull(`piloto`.`apellido`,''))))) AS `REMARKS`<{{{><}}}>	       ,`pa`.`idinstructor`                                                                                                                   AS `PILOTO`<{{{><}}}>	       ,concat(`c`.`refCurso`,' ',`c`.`nombre`)                                                                                               AS `CURSO`<{{{><}}}>	       ,sec_to_time(if(`rv`.`simulador` = 0,SUM(`pva`.`airborne`),0))                                                                         AS `TOTALVUELO`<{{{><}}}>	       ,sec_to_time(ifnull(if(`rv`.`simulador` = 0,SUM(time_to_sec(`pva`.`timeDayVFR`)) + SUM(time_to_sec(`pva`.`timeDayIFR`)) + SUM(time_to_sec(`pva`.`timeSimulatedIFR`)),0),0)) AS `TOTALVUELODAY`<{{{><}}}>	       ,sec_to_time(ifnull(if(`rv`.`simulador` = 0,SUM(time_to_sec(`pva`.`timeNightVFR`)) + SUM(time_to_sec(`pva`.`timeNightIFR`)),0),0))     AS `TOTALVUELONIGHT`<{{{><}}}>	       ,sec_to_time(ifnull(SUM(if(`a`.`motorUno` <> '' AND `a`.`motorDos` = '' AND `a`.`simulador` = 0,time_to_sec(`pva`.`airborne`),0)),0))  AS `SE`<{{{><}}}>	       ,sec_to_time(ifnull(SUM(if(`a`.`motorUno` <> '' AND `a`.`motorDos` <> '' AND `a`.`simulador` = 0,time_to_sec(`pva`.`airborne`),0)),0)) AS `ME`<{{{><}}}>	       ,sec_to_time(ifnull(SUM(if(`pa`.`tipoinstructor` <> 'DUAL' AND `a`.`simulador` = 0,time_to_sec(`pva`.`timeXC`),0)),0))                 AS `XCSOLO`<{{{><}}}>	       ,sec_to_time(ifnull(SUM(if(`pa`.`tipoinstructor` = 'DUAL' AND `a`.`simulador` = 0,time_to_sec(`pva`.`timeXC`),0)),0))                  AS `XCDUAL`<{{{><}}}>	       ,sec_to_time(ifnull(if(`a`.`simulador` = 0,SUM(time_to_sec(`pva`.`timeDayVFR`)) + SUM(time_to_sec(`pva`.`timeNightVFR`)),0),0))        AS `VFR`<{{{><}}}>	       ,sec_to_time(ifnull(if(`a`.`simulador` = 0,SUM(time_to_sec(`pva`.`timeDayIFR`)) + SUM(time_to_sec(`pva`.`timeNightIFR`)),0),0))        AS `IFR`<{{{><}}}>	       ,sec_to_time(ifnull(if(`a`.`simulador` = 0,SUM(time_to_sec(`pva`.`timeSimulatedIFR`)),0),0))                                           AS `IFRSIM`<{{{><}}}>	       ,sec_to_time(ifnull(SUM(if(`pa`.`tipoinstructor` = 'INSTRUCTOR' AND `a`.`simulador` = 0,time_to_sec(`pva`.`airborne`),0)),0))          AS `PIC`<{{{><}}}>	       ,sec_to_time(ifnull(SUM(if(`pa`.`tipoinstructor` = 'INSTRUCTOR' AND `a`.`simulador` = 0,time_to_sec(`pva`.`airborne`),0)),0))          AS `COPILOT`<{{{><}}}>	       ,sec_to_time(ifnull(SUM(if(`pa`.`tipoinstructor` = 'INSTRUCTOR' AND `a`.`simulador` = 0,time_to_sec(`pva`.`airborne`),0)),0))          AS `DUAL`<{{{><}}}>	       ,sec_to_time(SUM(`pva`.`airborne`))                                                                                                    AS `INSTRUCTOR`<{{{><}}}>	       ,sec_to_time(if(`a`.`simulador` = 1,SUM(`pva`.`airborne`),0))                                                                          AS `FSTD`<{{{><}}}>	       ,SUM(if(`pva`.`totalaterrizajes` is null,0,`pva`.`totalaterrizajes` - ifnull(`pva`.`aterrizajevisual`,0)))                             AS `LANDINGSDAY`<{{{><}}}>	       ,SUM(if(`pva`.`totalaterrizajes` is null,0,`pva`.`totalaterrizajes` - ifnull(`pva`.`aterrizajevisual`,0)))                             AS `LANDINGSNIGHT`<{{{><}}}>	FROM <{{{><}}}>	(((((((`admin_aerodynamics`.`personas_rutas_vuelos_automatizacion` `pva`<{{{><}}}>		LEFT JOIN `admin_aerodynamics`.`personas_vuelos_automatizacion` `pa` on<{{{><}}}>		(`pa`.`id` = `pva`.`idVuelo`<{{{><}}}>		))<{{{><}}}>		LEFT JOIN `admin_aerodynamics`.`reserva_vuelos` `rv` on<{{{><}}}>		(`pa`.`idreserva` = `rv`.`idReserva`<{{{><}}}>		))<{{{><}}}>		LEFT JOIN `admin_aerodynamics`.`misiones` `m` on<{{{><}}}>		(`m`.`idMision` = `pa`.`idleccion`<{{{><}}}>		))<{{{><}}}>		LEFT JOIN `admin_aerodynamics`.`cursos` `c` on<{{{><}}}>		(`c`.`idCurso` = `m`.`idCurso`<{{{><}}}>		))<{{{><}}}>		LEFT JOIN `admin_aerodynamics`.`aviones` `a` on<{{{><}}}>		(`a`.`registracion` = `pa`.`matricula`<{{{><}}}>		))<{{{><}}}>		LEFT JOIN `admin_aerodynamics`.`personas` `piloto` on<{{{><}}}>		(`pa`.`idpiloto` = `piloto`.`idPersona`<{{{><}}}>		))<{{{><}}}>		LEFT JOIN `admin_aerodynamics`.`personas` `instructor` on<{{{><}}}>		(`pa`.`idinstructor` = `instructor`.`idPersona`<{{{><}}}>		)<{{{><}}}>	)<{{{><}}}>	GROUP BY  `pva`.`idpiloto`)<{{{><}}}>) `vuelos`<{{{><}}}>GROUP BY  `vuelos`.`PILOTO`
Servers\aerodynamics.com.es\QueryHistory\137<|||>1<|||>2021-02-18 12:15:33|admin_aerodynamics|453|<{{{><}}}><{{{><}}}>CREATE VIEW vista_logbook_personas_completo_total as<{{{><}}}>SELECT * FROM ((SELECT * FROM vista_logbook_piloto_completo_total)<{{{><}}}>	UNION<{{{><}}}>(SELECT * FROM vista_logbook_instructor_completo_total)) vuelos group by vuelos.PILOTO<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\138<|||>1<|||>2021-02-18 12:17:10|admin_aerodynamics|218|SELECT * FROM vista_logbook_personas_completo_total
Servers\aerodynamics.com.es\QueryHistory\139<|||>1<|||>2021-02-18 12:17:44|admin_aerodynamics|62|SELECT * FROM vista_logbook_personas_completo_total WHERE PILOTO=3483
Servers\aerodynamics.com.es\QueryHistory\140<|||>1<|||>2021-02-19 13:56:44|admin_aerodynamics|47|SELECT SUM(totalProforma) FROM personas_proformas GROUP BY idPersona
Servers\aerodynamics.com.es\QueryHistory\141<|||>1<|||>2021-02-19 13:57:30|admin_aerodynamics|93|SELECT SUM(totalProforma) FROM personas_proformas GROUP BY idPersona;<{{{><}}}><{{{><}}}>SELECT SUM(totalFactura) FROM personas_facturas GROUP BY idPersona;<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\142<|||>1<|||>2021-02-19 13:57:57|admin_aerodynamics|375|SELECT SUM(totalProforma) FROM personas_proformas GROUP BY idPersona;<{{{><}}}><{{{><}}}>SELECT SUM(totalFactura) FROM personas_facturas GROUP BY idPersona;<{{{><}}}><{{{><}}}>SELECT SUM(totalCobro) FROM personas_cobros GROUP BY idPersona;<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\143<|||>1<|||>2021-02-19 13:59:46|admin_aerodynamics|157|SELECT pp.idProforma FROM personas_proformas pp GROUP BY pp.idPersona,pp.idProforma;<{{{><}}}><{{{><}}}><{{{><}}}>SELECT SUM(totalProforma) FROM personas_proformas GROUP BY idPersona;<{{{><}}}><{{{><}}}>SELECT SUM(totalFactura) FROM personas_facturas GROUP BY idPersona;<{{{><}}}><{{{><}}}>SELECT SUM(totalCobro) FROM personas_cobros GROUP BY idPersona;<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\144<|||>1<|||>2021-02-19 15:34:52|admin_aerodynamics|251|SELECT p.idPersona FROM personas p<{{{><}}}>LEFT JOIN personas_facturas pf ON pf.idPersona=p.idPersona <{{{><}}}>LEFT JOIN personas_cobros pc ON pc.idProforma = pf.idProforma  <{{{><}}}>LEFT JOIN personas_proformas pp ON pp.idProforma = pf.idProforma<{{{><}}}>GROUP BY p.idPersona,pf.idFactura,pp.idProforma,pc.idCobro;<{{{><}}}><{{{><}}}><{{{><}}}>SELECT SUM(totalProforma) FROM personas_proformas GROUP BY idPersona;<{{{><}}}><{{{><}}}>SELECT SUM(totalFactura) FROM personas_facturas GROUP BY idPersona;<{{{><}}}><{{{><}}}>SELECT SUM(totalCobro) FROM personas_cobros GROUP BY idPersona;<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\145<|||>1<|||>2021-02-19 15:35:04|admin_aerodynamics|249|SELECT p.idPersona,pf.idFactura,pp.idProforma,pc.idCobro FROM personas p<{{{><}}}>LEFT JOIN personas_facturas pf ON pf.idPersona=p.idPersona <{{{><}}}>LEFT JOIN personas_cobros pc ON pc.idProforma = pf.idProforma  <{{{><}}}>LEFT JOIN personas_proformas pp ON pp.idProforma = pf.idProforma<{{{><}}}>GROUP BY p.idPersona,pf.idFactura,pp.idProforma,pc.idCobro;<{{{><}}}><{{{><}}}><{{{><}}}>SELECT SUM(totalProforma) FROM personas_proformas GROUP BY idPersona;<{{{><}}}><{{{><}}}>SELECT SUM(totalFactura) FROM personas_facturas GROUP BY idPersona;<{{{><}}}><{{{><}}}>SELECT SUM(totalCobro) FROM personas_cobros GROUP BY idPersona;<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\146<|||>1<|||>2021-02-19 15:36:17|admin_aerodynamics|282|SELECT p.idPersona,pf.idFactura,pf.totalFactura,pp.idProforma,pp.totalProforma,pc.idCobro,pc.totalCobro FROM personas p<{{{><}}}>LEFT JOIN personas_facturas pf ON pf.idPersona=p.idPersona <{{{><}}}>LEFT JOIN personas_cobros pc ON pc.idProforma = pf.idProforma  <{{{><}}}>LEFT JOIN personas_proformas pp ON pp.idProforma = pf.idProforma<{{{><}}}>GROUP BY p.idPersona,pf.idFactura,pp.idProforma,pc.idCobro;<{{{><}}}><{{{><}}}><{{{><}}}>SELECT SUM(totalProforma) FROM personas_proformas GROUP BY idPersona;<{{{><}}}><{{{><}}}>SELECT SUM(totalFactura) FROM personas_facturas GROUP BY idPersona;<{{{><}}}><{{{><}}}>SELECT SUM(totalCobro) FROM personas_cobros GROUP BY idPersona;<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\147<|||>1<|||>2021-02-19 15:36:48|admin_aerodynamics|279|SELECT p.idPersona,pp.idProforma,pp.totalProforma,pf.idFactura,pf.totalFactura,pc.idCobro,pc.totalCobro FROM personas p<{{{><}}}>LEFT JOIN personas_facturas pf ON pf.idPersona=p.idPersona <{{{><}}}>LEFT JOIN personas_cobros pc ON pc.idProforma = pf.idProforma  <{{{><}}}>LEFT JOIN personas_proformas pp ON pp.idProforma = pf.idProforma<{{{><}}}>GROUP BY p.idPersona,pf.idFactura,pp.idProforma,pc.idCobro;<{{{><}}}><{{{><}}}><{{{><}}}>SELECT SUM(totalProforma) FROM personas_proformas GROUP BY idPersona;<{{{><}}}><{{{><}}}>SELECT SUM(totalFactura) FROM personas_facturas GROUP BY idPersona;<{{{><}}}><{{{><}}}>SELECT SUM(totalCobro) FROM personas_cobros GROUP BY idPersona;<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\148<|||>1<|||>2021-02-19 15:42:50|admin_aerodynamics|235|SELECT p.idPersona,<{{{><}}}>pp.idProforma,(pp.totalProforma*(-1)) AS totalProforma,<{{{><}}}>pf.idFactura,pf.totalFactura,<{{{><}}}>pc.idCobro,pc.totalCobro<{{{><}}}><{{{><}}}>FROM personas p<{{{><}}}>LEFT JOIN personas_facturas pf ON pf.idPersona=p.idPersona <{{{><}}}>LEFT JOIN personas_cobros pc ON pc.idProforma = pf.idProforma  <{{{><}}}>LEFT JOIN personas_proformas pp ON pp.idProforma = pf.idProforma<{{{><}}}>GROUP BY p.idPersona,pf.idFactura,pp.idProforma,pc.idCobro;<{{{><}}}><{{{><}}}><{{{><}}}>SELECT SUM(totalProforma) FROM personas_proformas GROUP BY idPersona;<{{{><}}}><{{{><}}}>SELECT SUM(totalFactura) FROM personas_facturas GROUP BY idPersona;<{{{><}}}><{{{><}}}>SELECT SUM(totalCobro) FROM personas_cobros GROUP BY idPersona;<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\149<|||>1<|||>2021-02-19 15:46:00|admin_aerodynamics|266|SELECT p.idPersona,<{{{><}}}>pp.idProforma,(pp.totalProforma*(-1)) AS totalProforma,<{{{><}}}>pf.idFactura,pf.totalFactura,<{{{><}}}>pc.idCobro,pc.totalCobro<{{{><}}}><{{{><}}}>FROM personas p<{{{><}}}>LEFT JOIN personas_facturas pf ON pf.idPersona=p.idPersona <{{{><}}}>LEFT JOIN personas_cobros pc ON pc.idProforma = pf.idProforma  <{{{><}}}>LEFT JOIN personas_proformas pp ON pp.idProforma = pf.idProforma<{{{><}}}>GROUP BY p.idPersona,pf.idFactura,pp.idProforma,pc.idCobro;<{{{><}}}><{{{><}}}>SELECT SUM(totalProforma) AS totalProformas FROM personas_proformas GROUP BY idPersona;<{{{><}}}><{{{><}}}><{{{><}}}>SELECT SUM(totalProforma) FROM personas_proformas GROUP BY idPersona;<{{{><}}}><{{{><}}}>SELECT SUM(totalFactura) FROM personas_facturas GROUP BY idPersona;<{{{><}}}><{{{><}}}>SELECT SUM(totalCobro) FROM personas_cobros GROUP BY idPersona;<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\150<|||>1<|||>2021-02-19 15:53:15|admin_aerodynamics|343|SELECT p.idPersona,<{{{><}}}>pp.idProforma,(pp.totalProforma*(-1)) AS totalProforma,<{{{><}}}>pf.idFactura,pf.totalFactura,<{{{><}}}>pc.idCobro,pc.totalCobro<{{{><}}}><{{{><}}}>FROM personas p<{{{><}}}>LEFT JOIN personas_facturas pf ON pf.idPersona=p.idPersona <{{{><}}}>LEFT JOIN personas_cobros pc ON pc.idProforma = pf.idProforma  <{{{><}}}>LEFT JOIN personas_proformas pp ON pp.idProforma = pf.idProforma<{{{><}}}>GROUP BY p.idPersona,pf.idFactura,pp.idProforma,pc.idCobro;<{{{><}}}><{{{><}}}><{{{><}}}>SELECT p.idPersona,<{{{><}}}>(SELECT SUM(totalProforma) AS totalProformas FROM personas_proformas WHERE personas_proformas.idPersona=p.idPersona) AS Proformas,<{{{><}}}>(SELECT SUM(totalFactura) AS totalFacturas FROM personas_facturas WHERE idProforma IS NULL AND personas_facturas.idPersona=p.idPersona) AS Facturas,<{{{><}}}>(SELECT SUM(totalCobro) AS totalCobros FROM personas_cobros WHERE personas_cobros.idPersona=p.idPersona) AS Cobros <{{{><}}}>FROM personas p;<{{{><}}}><{{{><}}}>SELECT SUM(totalProforma) FROM personas_proformas GROUP BY idPersona;<{{{><}}}><{{{><}}}>SELECT SUM(totalFactura) FROM personas_facturas GROUP BY idPersona;<{{{><}}}><{{{><}}}>SELECT SUM(totalCobro) FROM personas_cobros GROUP BY idPersona;<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\151<|||>1<|||>2021-02-19 15:54:43|admin_aerodynamics|296|SELECT p.idPersona,<{{{><}}}>pp.idProforma,(pp.totalProforma*(-1)) AS totalProforma,<{{{><}}}>pf.idFactura,pf.totalFactura,<{{{><}}}>pc.idCobro,pc.totalCobro<{{{><}}}><{{{><}}}>FROM personas p<{{{><}}}>LEFT JOIN personas_facturas pf ON pf.idPersona=p.idPersona <{{{><}}}>LEFT JOIN personas_cobros pc ON pc.idProforma = pf.idProforma  <{{{><}}}>LEFT JOIN personas_proformas pp ON pp.idProforma = pf.idProforma<{{{><}}}>GROUP BY p.idPersona,pf.idFactura,pp.idProforma,pc.idCobro;<{{{><}}}><{{{><}}}><{{{><}}}>SELECT p.idPersona,<{{{><}}}>(SELECT SUM(totalProforma) AS totalProformas FROM personas_proformas WHERE personas_proformas.idPersona=p.idPersona) AS Proformas,<{{{><}}}>(SELECT SUM(totalFactura) AS totalFacturas FROM personas_facturas WHERE numProforma IS NULL AND personas_facturas.idPersona=p.idPersona) AS Facturas,<{{{><}}}>(SELECT SUM(totalCobro) AS totalCobros FROM personas_cobros WHERE personas_cobros.idPersona=p.idPersona) AS Cobros <{{{><}}}>FROM personas p;<{{{><}}}><{{{><}}}>SELECT SUM(totalProforma) FROM personas_proformas GROUP BY idPersona;<{{{><}}}><{{{><}}}>SELECT SUM(totalFactura) FROM personas_facturas GROUP BY idPersona;<{{{><}}}><{{{><}}}>SELECT SUM(totalCobro) FROM personas_cobros GROUP BY idPersona;<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\152<|||>1<|||>2021-02-19 15:55:21|admin_aerodynamics|282|SELECT p.idPersona,<{{{><}}}>pp.idProforma,(pp.totalProforma*(-1)) AS totalProforma,<{{{><}}}>pf.idFactura,pf.totalFactura,<{{{><}}}>pc.idCobro,pc.totalCobro<{{{><}}}><{{{><}}}>FROM personas p<{{{><}}}>LEFT JOIN personas_facturas pf ON pf.idPersona=p.idPersona <{{{><}}}>LEFT JOIN personas_cobros pc ON pc.idProforma = pf.idProforma  <{{{><}}}>LEFT JOIN personas_proformas pp ON pp.idProforma = pf.idProforma<{{{><}}}>GROUP BY p.idPersona,pf.idFactura,pp.idProforma,pc.idCobro;<{{{><}}}><{{{><}}}><{{{><}}}>SELECT p.idPersona,<{{{><}}}>(SELECT SUM(totalProforma) AS totalProformas FROM personas_proformas WHERE personas_proformas.idPersona=p.idPersona) AS Proformas,<{{{><}}}>(SELECT SUM(totalFactura) AS totalFacturas FROM personas_facturas WHERE idProforma=0 AND personas_facturas.idPersona=p.idPersona) AS Facturas,<{{{><}}}>(SELECT SUM(totalCobro) AS totalCobros FROM personas_cobros WHERE personas_cobros.idPersona=p.idPersona) AS Cobros <{{{><}}}>FROM personas p;<{{{><}}}><{{{><}}}>SELECT SUM(totalProforma) FROM personas_proformas GROUP BY idPersona;<{{{><}}}><{{{><}}}>SELECT SUM(totalFactura) FROM personas_facturas GROUP BY idPersona;<{{{><}}}><{{{><}}}>SELECT SUM(totalCobro) FROM personas_cobros GROUP BY idPersona;<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\153<|||>1<|||>2021-02-19 15:58:28|admin_aerodynamics|344|SELECT p.idPersona,<{{{><}}}>pp.idProforma,(pp.totalProforma*(-1)) AS totalProforma,<{{{><}}}>pf.idFactura,pf.totalFactura,<{{{><}}}>pc.idCobro,pc.totalCobro<{{{><}}}><{{{><}}}>FROM personas p<{{{><}}}>LEFT JOIN personas_facturas pf ON pf.idPersona=p.idPersona <{{{><}}}>LEFT JOIN personas_cobros pc ON pc.idProforma = pf.idProforma  <{{{><}}}>LEFT JOIN personas_proformas pp ON pp.idProforma = pf.idProforma<{{{><}}}>GROUP BY p.idPersona,pf.idFactura,pp.idProforma,pc.idCobro;<{{{><}}}><{{{><}}}><{{{><}}}>SELECT p.idPersona,<{{{><}}}>(SELECT SUM(totalProforma) AS totalProformas FROM personas_proformas WHERE personas_proformas.idPersona=p.idPersona) AS Proformas,<{{{><}}}>(SELECT SUM(totalFactura) AS totalFacturas FROM personas_facturas WHERE idProforma=0 AND personas_facturas.idPersona=p.idPersona) AS Facturas,<{{{><}}}>(SELECT SUM(totalCobro) AS totalCobros FROM personas_cobros WHERE personas_cobros.idPersona=p.idPersona) AS Cobros,<{{{><}}}>(((SELECT SUM(totalProforma) AS totalProformas FROM personas_proformas WHERE personas_proformas.idPersona=p.idPersona)*(-1))-(SELECT SUM(totalFactura) AS totalFacturas FROM personas_facturas WHERE idProforma=0 AND personas_facturas.idPersona=p.idPersona)+(SELECT SUM(totalCobro) AS totalCobros FROM personas_cobros WHERE personas_cobros.idPersona=p.idPersona)) AS Balance <{{{><}}}>FROM personas p;<{{{><}}}><{{{><}}}>SELECT SUM(totalProforma) FROM personas_proformas GROUP BY idPersona;<{{{><}}}><{{{><}}}>SELECT SUM(totalFactura) FROM personas_facturas GROUP BY idPersona;<{{{><}}}><{{{><}}}>SELECT SUM(totalCobro) FROM personas_cobros GROUP BY idPersona;<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\154<|||>1<|||>2021-02-19 15:59:14|admin_aerodynamics|344|SELECT p.idPersona,<{{{><}}}>pp.idProforma,(pp.totalProforma*(-1)) AS totalProforma,<{{{><}}}>pf.idFactura,pf.totalFactura,<{{{><}}}>pc.idCobro,pc.totalCobro<{{{><}}}><{{{><}}}>FROM personas p<{{{><}}}>LEFT JOIN personas_facturas pf ON pf.idPersona=p.idPersona <{{{><}}}>LEFT JOIN personas_cobros pc ON pc.idProforma = pf.idProforma  <{{{><}}}>LEFT JOIN personas_proformas pp ON pp.idProforma = pf.idProforma<{{{><}}}>GROUP BY p.idPersona,pf.idFactura,pp.idProforma,pc.idCobro;<{{{><}}}><{{{><}}}><{{{><}}}>SELECT p.idPersona,<{{{><}}}>IFNULL((SELECT SUM(totalProforma) AS totalProformas FROM personas_proformas WHERE personas_proformas.idPersona=p.idPersona),0) AS Proformas,<{{{><}}}>IFNULL((SELECT SUM(totalFactura) AS totalFacturas FROM personas_facturas WHERE idProforma=0 AND personas_facturas.idPersona=p.idPersona),0) AS Facturas,<{{{><}}}>IFNULL((SELECT SUM(totalCobro) AS totalCobros FROM personas_cobros WHERE personas_cobros.idPersona=p.idPersona),0) AS Cobros,<{{{><}}}>IFNULL((((SELECT SUM(totalProforma) AS totalProformas FROM personas_proformas WHERE personas_proformas.idPersona=p.idPersona)*(-1))-(SELECT SUM(totalFactura) AS totalFacturas FROM personas_facturas WHERE idProforma=0 AND personas_facturas.idPersona=p.idPersona)+(SELECT SUM(totalCobro) AS totalCobros FROM personas_cobros WHERE personas_cobros.idPersona=p.idPersona)),0) AS Balance <{{{><}}}>FROM personas p;<{{{><}}}><{{{><}}}>SELECT SUM(totalProforma) FROM personas_proformas GROUP BY idPersona;<{{{><}}}><{{{><}}}>SELECT SUM(totalFactura) FROM personas_facturas GROUP BY idPersona;<{{{><}}}><{{{><}}}>SELECT SUM(totalCobro) FROM personas_cobros GROUP BY idPersona;<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\155<|||>1<|||>2021-02-19 16:01:21|admin_aerodynamics|578|SELECT p.idPersona,<{{{><}}}>pp.idProforma,(pp.totalProforma*(-1)) AS totalProforma,<{{{><}}}>pf.idFactura,pf.totalFactura,<{{{><}}}>pc.idCobro,pc.totalCobro<{{{><}}}><{{{><}}}>FROM personas p<{{{><}}}>LEFT JOIN personas_facturas pf ON pf.idPersona=p.idPersona <{{{><}}}>LEFT JOIN personas_cobros pc ON pc.idProforma = pf.idProforma  <{{{><}}}>LEFT JOIN personas_proformas pp ON pp.idProforma = pf.idProforma<{{{><}}}>GROUP BY p.idPersona,pf.idFactura,pp.idProforma,pc.idCobro;<{{{><}}}><{{{><}}}><{{{><}}}>SELECT p.idPersona,<{{{><}}}>IFNULL((SELECT SUM(totalProforma) AS totalProformas FROM personas_proformas WHERE personas_proformas.idPersona=p.idPersona)*(-1),0) AS Proformas,<{{{><}}}>IFNULL((SELECT SUM(totalFactura) AS totalFacturas FROM personas_facturas WHERE idProforma=0 AND personas_facturas.idPersona=p.idPersona)*(-1),0) AS Facturas,<{{{><}}}>IFNULL((SELECT SUM(totalCobro) AS totalCobros FROM personas_cobros WHERE personas_cobros.idPersona=p.idPersona),0) AS Cobros,<{{{><}}}>IFNULL((((SELECT SUM(totalProforma) AS totalProformas FROM personas_proformas WHERE personas_proformas.idPersona=p.idPersona)*(-1))-(SELECT SUM(totalFactura) AS totalFacturas FROM personas_facturas WHERE idProforma=0 AND personas_facturas.idPersona=p.idPersona)+(SELECT SUM(totalCobro) AS totalCobros FROM personas_cobros WHERE personas_cobros.idPersona=p.idPersona)),0) AS Balance <{{{><}}}>FROM personas p;<{{{><}}}><{{{><}}}>SELECT SUM(totalProforma) FROM personas_proformas GROUP BY idPersona;<{{{><}}}><{{{><}}}>SELECT SUM(totalFactura) FROM personas_facturas GROUP BY idPersona;<{{{><}}}><{{{><}}}>SELECT SUM(totalCobro) FROM personas_cobros GROUP BY idPersona;<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\156<|||>1<|||>2021-02-19 16:02:58|admin_aerodynamics|47|CREATE VIEW vista_balances_persona AS<{{{><}}}>SELECT p.idPersona,<{{{><}}}>IFNULL((SELECT SUM(totalProforma) AS totalProformas FROM personas_proformas WHERE personas_proformas.idPersona=p.idPersona)*(-1),0) AS Proformas,<{{{><}}}>IFNULL((SELECT SUM(totalFactura) AS totalFacturas FROM personas_facturas WHERE idProforma=0 AND personas_facturas.idPersona=p.idPersona)*(-1),0) AS Facturas,<{{{><}}}>IFNULL((SELECT SUM(totalCobro) AS totalCobros FROM personas_cobros WHERE personas_cobros.idPersona=p.idPersona),0) AS Cobros,<{{{><}}}>IFNULL((((SELECT SUM(totalProforma) AS totalProformas FROM personas_proformas WHERE personas_proformas.idPersona=p.idPersona)*(-1))-(SELECT SUM(totalFactura) AS totalFacturas FROM personas_facturas WHERE idProforma=0 AND personas_facturas.idPersona=p.idPersona)+(SELECT SUM(totalCobro) AS totalCobros FROM personas_cobros WHERE personas_cobros.idPersona=p.idPersona)),0) AS Balance <{{{><}}}>FROM personas p;
Servers\aerodynamics.com.es\QueryHistory\159<|||>1<|||>2021-02-20 12:46:01|admin_aerodynamics|204|/*create temporary table t1*/<{{{><}}}>select * from personas_vuelos_automatizacion group by fecha,matricula,despegue,idleccion,idinstructor,idpiloto;<{{{><}}}><{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\157<|||>1<|||>2021-02-20 12:46:12|admin_aerodynamics|188|/*create temporary table t1*/<{{{><}}}>select * from personas_vuelos_automatizacion group by fecha,matricula,despegue,aterrizaje,idleccion,idinstructor,idpiloto;<{{{><}}}><{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\158<|||>1<|||>2021-02-20 12:48:41|admin_aerodynamics|188|create temporary table t1<{{{><}}}>select * from personas_vuelos_automatizacion group by fecha,matricula,despegue,aterrizaje,idleccion,idinstructor,idpiloto;<{{{><}}}><{{{><}}}>DELETE FROM personas_vuelos_automatizacion<{{{><}}}>WHERE id NOT IN ( SELECT id FROM t1 );<{{{><}}}><{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\160<|||>1<|||>2021-02-23 10:27:50|admin_aerodynamics|32|SELECT case when round(SUM(balance),2) IS NULL then 0 ELSE round(SUM(balance),2) end AS totalBalance FROM personas_facturas
Servers\aerodynamics.com.es\QueryHistory\161<|||>1<|||>2021-02-23 10:28:00|admin_aerodynamics|32|SELECT case when round(SUM(balance),2) IS NULL then 0 ELSE round(SUM(balance),2) end AS totalBalance FROM personas_facturas GROUP BY idPersona
Servers\aerodynamics.com.es\QueryHistory\162<|||>1<|||>2021-02-23 10:35:41|admin_aerodynamics|46|SELECT idPersona FROM personas
Servers\aerodynamics.com.es\QueryHistory\163<|||>1<|||>2021-02-23 10:36:01|admin_aerodynamics|47|SELECT distinct(idPersona) FROM personas
Servers\aerodynamics.com.es\QueryHistory\164<|||>1<|||>2021-02-23 10:38:08|admin_aerodynamics|47|SELECT p.idPersona,pp.idProforma FROM personas p<{{{><}}}>LEFT JOIN personas_proformas pp ON pp.idPersona=p.idPersona<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\165<|||>1<|||>2021-02-23 10:38:38|admin_aerodynamics|47|SELECT p.idPersona,pp.idProforma FROM personas p<{{{><}}}>LEFT JOIN personas_proformas pp ON pp.idPersona=p.idPersona<{{{><}}}>GROUP BY idPersona,idProforma<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\166<|||>1<|||>2021-02-23 10:40:22|admin_aerodynamics|62|SELECT p.idPersona,pp.idProforma,pf.idFactura FROM personas p<{{{><}}}>LEFT JOIN personas_proformas pp ON pp.idPersona=p.idPersona<{{{><}}}>LEFT JOIN personas_facturas pf ON pf.idProforma=pp.idProforma<{{{><}}}>GROUP BY idPersona,idProforma<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\167<|||>1<|||>2021-02-23 10:40:43|admin_aerodynamics|47|SELECT p.idPersona,pp.idProforma,pf.idFactura FROM personas p<{{{><}}}>LEFT JOIN personas_proformas pp ON pp.idPersona=p.idPersona<{{{><}}}>LEFT JOIN personas_facturas pf ON pf.idProforma=pp.idProforma<{{{><}}}>GROUP BY idPersona,idProforma,idFactura<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\168<|||>1<|||>2021-02-23 10:41:28|admin_aerodynamics|31|SELECT p.idPersona,pp.idProforma,pf.idFactura FROM personas p<{{{><}}}>LEFT JOIN personas_proformas pp ON pp.idPersona=p.idPersona<{{{><}}}>JOIN personas_facturas pf ON pf.idProforma=pp.idProforma <{{{><}}}>GROUP BY idPersona,idProforma,idFactura<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\169<|||>1<|||>2021-02-23 10:41:38|admin_aerodynamics|47|SELECT p.idPersona,pp.idProforma,pf.idFactura FROM personas p<{{{><}}}>LEFT JOIN personas_proformas pp ON pp.idPersona=p.idPersona<{{{><}}}>RIGHT JOIN personas_facturas pf ON pf.idProforma=pp.idProforma <{{{><}}}>GROUP BY idPersona,idProforma,idFactura<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\170<|||>1<|||>2021-02-23 10:41:54|admin_aerodynamics|47|SELECT p.idPersona,pp.idProforma,pf.idFactura FROM personas p<{{{><}}}>LEFT JOIN personas_proformas pp ON pp.idPersona=p.idPersona<{{{><}}}>LEFT JOIN personas_facturas pf ON pf.idProforma=pp.idProforma <{{{><}}}>GROUP BY idPersona,idProforma,idFactura<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\171<|||>1<|||>2021-02-23 10:46:02|admin_aerodynamics|47|SELECT p.idPersona,pp.idProforma,pf.idFactura FROM personas p<{{{><}}}>LEFT JOIN personas_proformas pp ON pp.idPersona=p.idPersona<{{{><}}}>LEFT JOIN personas_facturas pf ON pf.idProforma=pp.idProforma<{{{><}}}>LEFT JOIN personas_cobros pc ON pc.numFactura=pf.numFactura  <{{{><}}}>GROUP BY idPersona,idProforma,idFactura<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\172<|||>1<|||>2021-02-23 10:46:17|admin_aerodynamics|78|SELECT p.idPersona,pp.idProforma,pf.idFactura,pc.idCobro FROM personas p<{{{><}}}>LEFT JOIN personas_proformas pp ON pp.idPersona=p.idPersona<{{{><}}}>LEFT JOIN personas_facturas pf ON pf.idProforma=pp.idProforma<{{{><}}}>LEFT JOIN personas_cobros pc ON pc.numFactura=pf.numFactura  <{{{><}}}>GROUP BY idPersona,idProforma,idFactura<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\173<|||>1<|||>2021-02-23 10:46:41|admin_aerodynamics|94|SELECT p.idPersona,pp.idProforma,pf.idFactura,pc.idCobro FROM personas p<{{{><}}}>LEFT JOIN personas_proformas pp ON pp.idPersona=p.idPersona<{{{><}}}>LEFT JOIN personas_facturas pf ON pf.idProforma=pp.idProforma<{{{><}}}>LEFT JOIN personas_cobros pc ON pc.numFactura=pf.numFactura  <{{{><}}}>GROUP BY idPersona,idProforma,idFactura,idCobro<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\174<|||>1<|||>2021-02-23 10:48:31|admin_aerodynamics|78|(SELECT p.idPersona,pp.idProforma,pf.idFactura,pc.idCobro FROM personas p<{{{><}}}>LEFT JOIN personas_proformas pp ON pp.idPersona=p.idPersona<{{{><}}}>LEFT JOIN personas_facturas pf ON pf.idProforma=pp.idProforma<{{{><}}}>LEFT JOIN personas_cobros pc ON pc.numFactura=pf.numFactura  <{{{><}}}>GROUP BY idPersona,idProforma,idFactura,idCobro)<{{{><}}}>UNION<{{{><}}}>(SELECT p.idPersona,pp.idProforma,pf.idFactura,pc.idCobro FROM personas p<{{{><}}}>LEFT JOIN personas_facturas pf ON pf.idPersona=p.idPersona<{{{><}}}>LEFT JOIN personas_cobros pc ON pc.numFactura=pf.numFactura<{{{><}}}>LEFT JOIN personas_proformas pp ON pp.idProforma=pf.idProforma  <{{{><}}}>GROUP BY idPersona,idFactura,idCobro,idProforma)<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\175<|||>1<|||>2021-02-23 10:50:03|admin_aerodynamics|94|(SELECT p.idPersona,pp.idProforma,pf.idFactura,pc.idCobro FROM personas p<{{{><}}}>LEFT JOIN personas_proformas pp ON pp.idPersona=p.idPersona<{{{><}}}>LEFT JOIN personas_facturas pf ON pf.idProforma=pp.idProforma<{{{><}}}>LEFT JOIN personas_cobros pc ON pc.numFactura=pf.numFactura  <{{{><}}}>GROUP BY idPersona,idProforma,idFactura,idCobro)<{{{><}}}>UNION<{{{><}}}>(SELECT p.idPersona,pp.idProforma,pf.idFactura,pc.idCobro FROM personas p<{{{><}}}>LEFT JOIN personas_facturas pf ON pf.idPersona=p.idPersona<{{{><}}}>LEFT JOIN personas_cobros pc ON pc.numFactura=pf.numFactura<{{{><}}}>LEFT JOIN personas_proformas pp ON pp.idProforma=pf.idProforma  <{{{><}}}>GROUP BY idPersona,idFactura,idCobro,idProforma)<{{{><}}}>UNION<{{{><}}}>(SELECT p.idPersona,pp.idProforma,pf.idFactura,pc.idCobro FROM personas p<{{{><}}}>LEFT JOIN personas_cobros pc ON pc.idPersona=p.idPersona<{{{><}}}>LEFT JOIN personas_facturas pf ON pf.numFactura=pc.numFactura<{{{><}}}>LEFT JOIN personas_proformas pp ON pp.idProforma=pf.idProforma  <{{{><}}}>GROUP BY idPersona,idFactura,idCobro,idProforma)<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\176<|||>1<|||>2021-02-23 10:53:00|admin_aerodynamics|110|(SELECT p.idPersona,pp.idProforma,pf.idFactura,pc.idCobro FROM personas p<{{{><}}}>LEFT JOIN personas_proformas pp ON pp.idPersona=p.idPersona<{{{><}}}>LEFT JOIN personas_facturas pf ON pf.idProforma=pp.idProforma<{{{><}}}>LEFT JOIN personas_cobros pc ON pc.numFactura=pf.numFactura  <{{{><}}}>GROUP BY idPersona,idProforma,idFactura,idCobro)<{{{><}}}>UNION<{{{><}}}>(SELECT p.idPersona,pp.idProforma,pf.idFactura,pc.idCobro FROM personas p<{{{><}}}>LEFT JOIN personas_facturas pf ON pf.idPersona=p.idPersona<{{{><}}}>LEFT JOIN personas_cobros pc ON pc.numFactura=pf.numFactura<{{{><}}}>LEFT JOIN personas_proformas pp ON pp.idProforma=pf.idProforma  <{{{><}}}>GROUP BY idPersona,idFactura,idCobro,idProforma)<{{{><}}}>UNION<{{{><}}}>(SELECT p.idPersona,pp.idProforma,pf.idFactura,pc.idCobro FROM personas p<{{{><}}}>LEFT JOIN personas_cobros pc ON pc.idPersona=p.idPersona<{{{><}}}>LEFT JOIN personas_facturas pf ON pf.numFactura=pc.numFactura<{{{><}}}>LEFT JOIN personas_proformas pp ON pp.idProforma=pf.idProforma  <{{{><}}}>GROUP BY idPersona,idFactura,idCobro,idProforma)<{{{><}}}><{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\178<|||>1<|||>2021-02-23 10:54:12|admin_aerodynamics|47|SELECT * FROM ((SELECT p.idPersona,pp.idProforma,pf.idFactura,pc.idCobro FROM personas p<{{{><}}}>LEFT JOIN personas_proformas pp ON pp.idPersona=p.idPersona<{{{><}}}>LEFT JOIN personas_facturas pf ON pf.idProforma=pp.idProforma<{{{><}}}>LEFT JOIN personas_cobros pc ON pc.numFactura=pf.numFactura  <{{{><}}}>GROUP BY idPersona,idProforma,idFactura,idCobro)<{{{><}}}>UNION<{{{><}}}>(SELECT p.idPersona,pp.idProforma,pf.idFactura,pc.idCobro FROM personas p<{{{><}}}>LEFT JOIN personas_facturas pf ON pf.idPersona=p.idPersona<{{{><}}}>LEFT JOIN personas_cobros pc ON pc.numFactura=pf.numFactura<{{{><}}}>LEFT JOIN personas_proformas pp ON pp.idProforma=pf.idProforma  <{{{><}}}>GROUP BY idPersona,idFactura,idCobro,idProforma)<{{{><}}}>UNION<{{{><}}}>(SELECT p.idPersona,pp.idProforma,pf.idFactura,pc.idCobro FROM personas p<{{{><}}}>LEFT JOIN personas_cobros pc ON pc.idPersona=p.idPersona<{{{><}}}>LEFT JOIN personas_facturas pf ON pf.numFactura=pc.numFactura<{{{><}}}>LEFT JOIN personas_proformas pp ON pp.idProforma=pf.idProforma  <{{{><}}}>GROUP BY idPersona,idFactura,idCobro,idProforma)) movimientos WHERE (idProforma IS NOT NULL AND idFactura IS NOT NULL AND idCobro IS NOT NULL)<{{{><}}}><{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\179<|||>1<|||>2021-02-23 10:54:43|admin_aerodynamics|62|SELECT * FROM ((SELECT p.idPersona,pp.idProforma,pf.idFactura,pc.idCobro FROM personas p<{{{><}}}>LEFT JOIN personas_proformas pp ON pp.idPersona=p.idPersona<{{{><}}}>LEFT JOIN personas_facturas pf ON pf.idProforma=pp.idProforma<{{{><}}}>LEFT JOIN personas_cobros pc ON pc.numFactura=pf.numFactura  <{{{><}}}>GROUP BY idPersona,idProforma,idFactura,idCobro)<{{{><}}}>UNION<{{{><}}}>(SELECT p.idPersona,pp.idProforma,pf.idFactura,pc.idCobro FROM personas p<{{{><}}}>LEFT JOIN personas_facturas pf ON pf.idPersona=p.idPersona<{{{><}}}>LEFT JOIN personas_cobros pc ON pc.numFactura=pf.numFactura<{{{><}}}>LEFT JOIN personas_proformas pp ON pp.idProforma=pf.idProforma  <{{{><}}}>GROUP BY idPersona,idFactura,idCobro,idProforma)<{{{><}}}>UNION<{{{><}}}>(SELECT p.idPersona,pp.idProforma,pf.idFactura,pc.idCobro FROM personas p<{{{><}}}>LEFT JOIN personas_cobros pc ON pc.idPersona=p.idPersona<{{{><}}}>LEFT JOIN personas_facturas pf ON pf.numFactura=pc.numFactura<{{{><}}}>LEFT JOIN personas_proformas pp ON pp.idProforma=pf.idProforma  <{{{><}}}>GROUP BY idPersona,idFactura,idCobro,idProforma)) movimientos WHERE idProforma IS NOT NULL AND idFactura IS NOT NULL AND idCobro IS NOT NULL<{{{><}}}><{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\180<|||>1<|||>2021-02-23 10:55:02|admin_aerodynamics|141|SELECT * FROM ((SELECT p.idPersona,pp.idProforma,pf.idFactura,pc.idCobro FROM personas p<{{{><}}}>LEFT JOIN personas_proformas pp ON pp.idPersona=p.idPersona<{{{><}}}>LEFT JOIN personas_facturas pf ON pf.idProforma=pp.idProforma<{{{><}}}>LEFT JOIN personas_cobros pc ON pc.numFactura=pf.numFactura  <{{{><}}}>GROUP BY idPersona,idProforma,idFactura,idCobro)<{{{><}}}>UNION<{{{><}}}>(SELECT p.idPersona,pp.idProforma,pf.idFactura,pc.idCobro FROM personas p<{{{><}}}>LEFT JOIN personas_facturas pf ON pf.idPersona=p.idPersona<{{{><}}}>LEFT JOIN personas_cobros pc ON pc.numFactura=pf.numFactura<{{{><}}}>LEFT JOIN personas_proformas pp ON pp.idProforma=pf.idProforma  <{{{><}}}>GROUP BY idPersona,idFactura,idCobro,idProforma)<{{{><}}}>UNION<{{{><}}}>(SELECT p.idPersona,pp.idProforma,pf.idFactura,pc.idCobro FROM personas p<{{{><}}}>LEFT JOIN personas_cobros pc ON pc.idPersona=p.idPersona<{{{><}}}>LEFT JOIN personas_facturas pf ON pf.numFactura=pc.numFactura<{{{><}}}>LEFT JOIN personas_proformas pp ON pp.idProforma=pf.idProforma  <{{{><}}}>GROUP BY idPersona,idFactura,idCobro,idProforma)) movimientos<{{{><}}}><{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\177<|||>1<|||>2021-02-23 10:56:50|admin_aerodynamics|94|SELECT * FROM ((SELECT p.idPersona,pp.idProforma,pf.idFactura,pc.idCobro FROM personas p<{{{><}}}>LEFT JOIN personas_proformas pp ON pp.idPersona=p.idPersona<{{{><}}}>LEFT JOIN personas_facturas pf ON pf.idProforma=pp.idProforma<{{{><}}}>LEFT JOIN personas_cobros pc ON pc.numFactura=pf.numFactura  <{{{><}}}>GROUP BY idPersona,idProforma,idFactura,idCobro)<{{{><}}}>UNION<{{{><}}}>(SELECT p.idPersona,pp.idProforma,pf.idFactura,pc.idCobro FROM personas p<{{{><}}}>LEFT JOIN personas_facturas pf ON pf.idPersona=p.idPersona<{{{><}}}>LEFT JOIN personas_cobros pc ON pc.numFactura=pf.numFactura<{{{><}}}>LEFT JOIN personas_proformas pp ON pp.idProforma=pf.idProforma  <{{{><}}}>GROUP BY idPersona,idFactura,idCobro,idProforma)<{{{><}}}>UNION<{{{><}}}>(SELECT p.idPersona,pp.idProforma,pf.idFactura,pc.idCobro FROM personas p<{{{><}}}>LEFT JOIN personas_cobros pc ON pc.idPersona=p.idPersona<{{{><}}}>LEFT JOIN personas_facturas pf ON pf.numFactura=pc.numFactura<{{{><}}}>LEFT JOIN personas_proformas pp ON pp.idProforma=pf.idProforma  <{{{><}}}>GROUP BY idPersona,idFactura,idCobro,idProforma)) enlace_facturas ORDER BY idPersona<{{{><}}}><{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\181<|||>1<|||>2021-02-23 10:58:14|admin_aerodynamics|94|SELECT * FROM ((SELECT p.idPersona,pp.idProforma,pp.totalProforma,pf.idFactura,pf.totalFactura,pc.idCobro,pc.totalCobro FROM personas p<{{{><}}}>LEFT JOIN personas_proformas pp ON pp.idPersona=p.idPersona<{{{><}}}>LEFT JOIN personas_facturas pf ON pf.idProforma=pp.idProforma<{{{><}}}>LEFT JOIN personas_cobros pc ON pc.numFactura=pf.numFactura  <{{{><}}}>GROUP BY idPersona,idProforma,idFactura,idCobro)<{{{><}}}>UNION<{{{><}}}>(SELECT p.idPersona,pp.idProforma,pp.totalProforma,pf.idFactura,pf.totalFactura,pc.idCobro,pc.totalCobro  FROM personas p<{{{><}}}>LEFT JOIN personas_facturas pf ON pf.idPersona=p.idPersona<{{{><}}}>LEFT JOIN personas_cobros pc ON pc.numFactura=pf.numFactura<{{{><}}}>LEFT JOIN personas_proformas pp ON pp.idProforma=pf.idProforma  <{{{><}}}>GROUP BY idPersona,idFactura,idCobro,idProforma)<{{{><}}}>UNION<{{{><}}}>(SELECT p.idPersona,pp.idProforma,pp.totalProforma,pf.idFactura,pf.totalFactura,pc.idCobro,pc.totalCobro  FROM personas p<{{{><}}}>LEFT JOIN personas_cobros pc ON pc.idPersona=p.idPersona<{{{><}}}>LEFT JOIN personas_facturas pf ON pf.numFactura=pc.numFactura<{{{><}}}>LEFT JOIN personas_proformas pp ON pp.idProforma=pf.idProforma  <{{{><}}}>GROUP BY idPersona,idFactura,idCobro,idProforma)) enlace_facturas ORDER BY idPersona<{{{><}}}><{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\182<|||>1<|||>2021-02-23 11:00:28|admin_aerodynamics|485|SELECT * FROM personas_proformas 
Servers\aerodynamics.com.es\QueryHistory\183<|||>1<|||>2021-02-23 11:02:11|admin_aerodynamics|47|SELECT * FROM personas_proformas <{{{><}}}>LEFT JOIN personas_facturas ON personas_facturas.idProforma=personas_proformas.idProforma
Servers\aerodynamics.com.es\QueryHistory\184<|||>1<|||>2021-02-23 11:25:55|admin_aerodynamics|31|SELECT SUM(pc.totalCobro) FROM personas_cobros pc GROUP BY numFactura
Servers\aerodynamics.com.es\QueryHistory\185<|||>1<|||>2021-02-23 11:26:20|admin_aerodynamics|31|SELECT numFactura,SUM(pc.totalCobro) AS cobrado FROM personas_cobros pc GROUP BY numFactura
Servers\aerodynamics.com.es\QueryHistory\186<|||>1<|||>2021-02-23 11:27:07|admin_aerodynamics|32|SELECT idProforma,numFactura,SUM(pc.totalCobro) AS cobrado FROM personas_cobros pc GROUP BY numFactura
Servers\aerodynamics.com.es\QueryHistory\187<|||>1<|||>2021-02-23 11:30:20|admin_aerodynamics|47|UPDATE personas_facturas pf<{{{><}}}>        LEFT JOIN (SELECT idProforma,numFactura,SUM(pc.totalCobro) AS cobrado FROM personas_cobros pc GROUP BY numFactura) cobros ON cobros.numFactura = pf.numFactura<{{{><}}}>        SET <{{{><}}}>        pf.debito=cobros.cobrado;
Servers\aerodynamics.com.es\QueryHistory\188<|||>1<|||>2021-02-23 11:31:05|admin_aerodynamics|47|UPDATE personas_facturas pf<{{{><}}}>        LEFT JOIN (SELECT idProforma,numFactura,SUM(ifnull(pc.totalCobro,0)) AS cobrado FROM personas_cobros pc GROUP BY numFactura) cobros ON cobros.numFactura = pf.numFactura<{{{><}}}>        SET <{{{><}}}>        pf.debito=cobros.cobrado;
Servers\aerodynamics.com.es\QueryHistory\189<|||>1<|||>2021-02-23 11:31:45|admin_aerodynamics|47|UPDATE personas_facturas pf<{{{><}}}>        LEFT JOIN (SELECT idProforma,numFactura,ifnull(SUM(ifnull(pc.totalCobro,0)),0) AS cobrado FROM personas_cobros pc GROUP BY numFactura) cobros ON cobros.numFactura = pf.numFactura<{{{><}}}>        SET <{{{><}}}>        pf.debito=cobros.cobrado;
Servers\aerodynamics.com.es\QueryHistory\190<|||>1<|||>2021-02-23 11:33:39|admin_aerodynamics|47|UPDATE personas_facturas pf<{{{><}}}>        LEFT JOIN (SELECT idProforma,numFactura,ifnull(SUM(ifnull(pc.totalCobro,0)),0) AS cobrado FROM personas_cobros pc GROUP BY numFactura) cobros ON cobros.numFactura = pf.numFactura<{{{><}}}>        SET <{{{><}}}>        pf.debito=cobros.cobrado,<{{{><}}}>		  pf.balance=(pf.balance*(-1))+cobros.cobrado;
Servers\aerodynamics.com.es\QueryHistory\191<|||>1<|||>2021-02-23 11:34:15|admin_aerodynamics|485|UPDATE personas_facturas pf<{{{><}}}>        LEFT JOIN (SELECT idProforma,numFactura,ifnull(SUM(ifnull(pc.totalCobro,0)),0) AS cobrado FROM personas_cobros pc GROUP BY numFactura) cobros ON cobros.numFactura = pf.numFactura<{{{><}}}>        SET <{{{><}}}>        pf.debito=cobros.cobrado,<{{{><}}}>		  pf.balance=(pf.credito*(-1))+cobros.cobrado;
Servers\aerodynamics.com.es\QueryHistory\192<|||>1<|||>2021-02-23 11:37:36|admin_aerodynamics|31|SELECT idProforma,numFactura,ifnull(SUM(ifnull(pc.totalCobro,0)),0) AS cobrado FROM personas_cobros pc WHERE idProforma>0 GROUP BY idProforma
Servers\aerodynamics.com.es\QueryHistory\193<|||>1<|||>2021-02-23 11:37:49|admin_aerodynamics|47|SELECT idProforma,ifnull(SUM(ifnull(pc.totalCobro,0)),0) AS cobrado FROM personas_cobros pc WHERE idProforma>0 GROUP BY idProforma
Servers\aerodynamics.com.es\QueryHistory\194<|||>1<|||>2021-02-23 11:39:36|admin_aerodynamics|78|UPDATE personas_facturas pf<{{{><}}}>        LEFT JOIN (SELECT idProforma,numFactura,ifnull(SUM(ifnull(pc.totalCobro,0)),0) AS cobrado FROM personas_cobros pc GROUP BY numFactura) cobros ON cobros.numFactura = pf.numFactura<{{{><}}}>        SET <{{{><}}}>        pf.debito=cobros.cobrado,<{{{><}}}>		  pf.balance=(pf.credito*(-1))+cobros.cobrado;<{{{><}}}>		  <{{{><}}}>UPDATE personas_proformas pp<{{{><}}}>        LEFT JOIN (SELECT idProforma,ifnull(SUM(ifnull(pc.totalCobro,0)),0) AS cobrado FROM personas_cobros pc WHERE idProforma>0 GROUP BY idProforma) cobros ON cobros.idProforma = pp.idProforma<{{{><}}}>        SET <{{{><}}}>        pp.debito=cobros.cobrado,<{{{><}}}>		  pp.balance=(pp.credito*(-1))+cobros.cobrado;		  
Servers\aerodynamics.com.es\QueryHistory\195<|||>1<|||>2021-02-23 11:40:34|admin_aerodynamics|359|UPDATE personas_facturas pf<{{{><}}}>        LEFT JOIN (SELECT idProforma,numFactura,ifnull(SUM(ifnull(pc.totalCobro,0)),0) AS cobrado FROM personas_cobros pc GROUP BY numFactura) cobros ON cobros.numFactura = pf.numFactura<{{{><}}}>        SET <{{{><}}}>        pf.debito=ifnull(cobros.cobrado,0),<{{{><}}}>		  pf.balance=(pf.credito*(-1))+ifnull(cobros.cobrado,0);<{{{><}}}>		  <{{{><}}}>UPDATE personas_proformas pp<{{{><}}}>        LEFT JOIN (SELECT idProforma,ifnull(SUM(ifnull(pc.totalCobro,0)),0) AS cobrado FROM personas_cobros pc WHERE idProforma>0 GROUP BY idProforma) cobros ON cobros.idProforma = pp.idProforma<{{{><}}}>        SET <{{{><}}}>        pp.debito=ifnull(cobros.cobrado,0),<{{{><}}}>		  pp.balance=(pp.credito*(-1))+ifnull(cobros.cobrado,0);		  
Servers\aerodynamics.com.es\QueryHistory\196<|||>1<|||>2021-02-23 12:26:45|admin_aerodynamics|46|SELECT <{{{><}}}>        concat(tipoVuelo," \n\n",refCurso,"/",refMision) as leccion,<{{{><}}}>        piloto.nombre as nombrePiloto,<{{{><}}}>        instructor.nombre as nombreInstructor,<{{{><}}}>        observaciones as comentario,<{{{><}}}>        DATE_FORMAT(concat(diaReserva," ",sec_to_time(time_to_sec(horaInicio))), "%m-%d-%Y %H:%i:%s") as inicioClase,<{{{><}}}>        concat(DATE_FORMAT(sec_to_time(time_to_sec(horaInicio)+(preBriefing*60)), "%H:%i:%s")," to ",DATE_FORMAT(sec_to_time(time_to_sec(horaFin)-(postBriefing*60)), "%H:%i:%s")) as inicioFinVuelo,<{{{><}}}>        reserva_vuelos.idReserva as idReserva,<{{{><}}}>        instructor.idPersona as idInstructor,<{{{><}}}>        piloto.idPersona as idPiloto,<{{{><}}}>        piloto.email1 as emailPiloto,<{{{><}}}>        instructor.email1 as emailInstructor,<{{{><}}}>        concat(a.nomInstructor," ",a.modelo," (",a.registracion,") ") as avion,<{{{><}}}>        DATE_FORMAT(diaReserva, "%m-%d-%Y") as fecha<{{{><}}}>        FROM reserva_vuelos <{{{><}}}>        LEFT JOIN personas piloto on piloto.idPersona=reserva_vuelos.idPiloto<{{{><}}}>        LEFT JOIN personas instructor on instructor.idPersona=reserva_vuelos.idInstructor<{{{><}}}>        LEFT JOIN misiones m on m.idMision=reserva_vuelos.idLeccion<{{{><}}}>        LEFT JOIN cursos c on c.idCurso=m.idCurso<{{{><}}}>        LEFT JOIN aviones a on a.idAvion=reserva_vuelos.idAvion<{{{><}}}>        where reserva_vuelos.confirmado=0 group by idReserva
Servers\aerodynamics.com.es\QueryHistory\197<|||>1<|||>2021-02-23 12:53:07|admin_aerodynamics|47|SELECT * FROM personas_proformas<{{{><}}}><{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\198<|||>1<|||>2021-02-23 12:53:50|admin_aerodynamics|31|SELECT titulo,descripcion,totalProforma AS importe FROM personas_proformas<{{{><}}}><{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\199<|||>1<|||>2021-02-23 12:54:18|admin_aerodynamics|47|SELECT numProforma,titulo,descripcion,totalProforma AS importe FROM personas_proformas<{{{><}}}><{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\200<|||>1<|||>2021-02-23 12:55:25|admin_aerodynamics|32|SELECT CONCAT('Proforma :',numProforma) AS referencia,titulo,descripcion,(totalProforma*(-1)) AS importe FROM personas_proformas<{{{><}}}><{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\201<|||>1<|||>2021-02-23 12:55:34|admin_aerodynamics|31|SELECT CONCAT('Proforma: ',numProforma) AS referencia,titulo,descripcion,(totalProforma*(-1)) AS importe FROM personas_proformas<{{{><}}}><{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\202<|||>1<|||>2021-02-23 12:55:52|admin_aerodynamics|31|SELECT idPersona,CONCAT('Proforma: ',numProforma) AS referencia,titulo,descripcion,(totalProforma*(-1)) AS importe FROM personas_proformas<{{{><}}}><{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\203<|||>1<|||>2021-02-23 12:56:02|admin_aerodynamics|63|SELECT idPersona,fecha,CONCAT('Proforma: ',numProforma) AS referencia,titulo,descripcion,(totalProforma*(-1)) AS importe FROM personas_proformas<{{{><}}}><{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\204<|||>1<|||>2021-02-23 12:57:12|admin_aerodynamics|47|SELECT idPersona,fecha,CONCAT('Proforma: ',numProforma) AS referencia,titulo,descripcion,(totalProforma*(-1)) AS importe FROM personas_proformas<{{{><}}}>UNION<{{{><}}}>SELECT idPersona,fecha,CONCAT('Factura: ',numFactura) AS referencia,titulo,descripcion,(totalFactura*(-1)) AS importe FROM personas_facturas<{{{><}}}><{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\205<|||>1<|||>2021-02-23 12:58:26|admin_aerodynamics|31|SELECT idPersona,fecha,CONCAT('Proforma: ',numProforma) AS referencia,titulo,descripcion,totalProforma AS importe,(totalProforma*(-1)) AS sobreBalance FROM personas_proformas<{{{><}}}>UNION<{{{><}}}>SELECT idPersona,fecha,CONCAT('Factura: ',numFactura) AS referencia,titulo,descripcion,totalFactura AS importe,(totalFactura*(-1)) AS sobreBalance FROM personas_facturas<{{{><}}}><{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\206<|||>1<|||>2021-02-23 13:00:57|admin_aerodynamics|46|SELECT idPersona,fecha,CONCAT('Proforma: ',numProforma) AS referencia,titulo,descripcion,totalProforma AS importe,(totalProforma*(-1)) AS sobreBalance FROM personas_proformas<{{{><}}}>UNION<{{{><}}}>SELECT idPersona,fecha,CONCAT('Invoice: ',numFactura,if(numProforma IS NOT NULL,CONCAT(' to Proforma',numProforma),'')) AS referencia,titulo,descripcion,totalFactura AS importe,(totalFactura*(-1)) AS sobreBalance FROM personas_facturas<{{{><}}}><{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\207<|||>1<|||>2021-02-23 13:01:04|admin_aerodynamics|63|SELECT idPersona,fecha,CONCAT('Proforma: ',numProforma) AS referencia,titulo,descripcion,totalProforma AS importe,(totalProforma*(-1)) AS sobreBalance FROM personas_proformas<{{{><}}}>UNION<{{{><}}}>SELECT idPersona,fecha,CONCAT('Invoice: ',numFactura,if(numProforma IS NOT NULL,CONCAT(' to Proforma: ',numProforma),'')) AS referencia,titulo,descripcion,totalFactura AS importe,(totalFactura*(-1)) AS sobreBalance FROM personas_facturas<{{{><}}}><{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\208<|||>1<|||>2021-02-23 13:01:53|admin_aerodynamics|46|SELECT idPersona,fecha,CONCAT('Proforma: ',numProforma) AS referencia,titulo,descripcion,totalProforma AS importe,(totalProforma*(-1)) AS sobreBalance FROM personas_proformas<{{{><}}}>UNION<{{{><}}}>SELECT idPersona,fecha,CONCAT('Invoice: ',numFactura,if(numProforma IS NOT NULL,CONCAT(' to Proforma: ',numProforma),'')) AS referencia,titulo,descripcion,totalFactura AS importe,if(numProforma IS NOT NULL,0,(totalFactura*(-1))) AS sobreBalance FROM personas_facturas<{{{><}}}><{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\209<|||>1<|||>2021-02-23 13:03:41|admin_aerodynamics|47|SELECT idPersona,fecha,CONCAT('Proforma: ',numProforma) AS referencia,titulo,descripcion,totalProforma AS importe,(totalProforma*(-1)) AS sobreBalance FROM personas_proformas<{{{><}}}>UNION<{{{><}}}>SELECT idPersona,fecha,CONCAT('Invoice: ',numFactura,if(numProforma IS NOT NULL AND numProforma!='',CONCAT(' to Proforma: ',numProforma),'')) AS referencia,titulo,descripcion,totalFactura AS importe,if(numProforma IS NOT NULL AND numProforma!='',0,(totalFactura*(-1))) AS sobreBalance FROM personas_facturas<{{{><}}}><{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\210<|||>1<|||>2021-02-23 13:08:03|admin_aerodynamics|31|SELECT idPersona,fecha,CONCAT('Proforma: ',numProforma) AS referencia,titulo,descripcion,totalProforma AS importe,(totalProforma*(-1)) AS sobreBalance FROM personas_proformas<{{{><}}}>UNION<{{{><}}}>SELECT idPersona,fecha,CONCAT('Invoice: ',numFactura,if(numProforma IS NOT NULL AND numProforma!='',CONCAT(' to Proforma: ',numProforma),'')) AS referencia,titulo,descripcion,totalFactura AS importe,if(numProforma IS NOT NULL AND numProforma!='',0,(totalFactura*(-1))) AS sobreBalance FROM personas_facturas<{{{><}}}>UNION<{{{><}}}>SELECT idPersona,fecha,CONCAT('Payment: ',idCobro,if(numFactura IS NOT NULL AND numFactura!='',CONCAT(' to Invoice: ',numFactura),'')) AS referencia,titulo,descripcion,totalCobro AS importe,totalCobro AS sobreBalance FROM personas_cobros<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\211<|||>1<|||>2021-02-23 13:08:25|admin_aerodynamics|31|SELECT idPersona,fecha,CONCAT('Proforma: ',numProforma) AS referencia,titulo,descripcion,totalProforma AS importe,(totalProforma*(-1)) AS sobreBalance FROM personas_proformas<{{{><}}}>UNION<{{{><}}}>SELECT idPersona,fecha,CONCAT('Invoice: ',numFactura,if(numProforma IS NOT NULL AND numProforma!='',CONCAT(' to Proforma: ',numProforma),'')) AS referencia,titulo,descripcion,totalFactura AS importe,if(numProforma IS NOT NULL AND numProforma!='',0,(totalFactura*(-1))) AS sobreBalance FROM personas_facturas<{{{><}}}>UNION<{{{><}}}>SELECT idPersona,fecha,CONCAT('Payment' ,if(numFactura IS NOT NULL AND numFactura!='',CONCAT(' to Invoice: ',numFactura),'')) AS referencia,titulo,descripcion,totalCobro AS importe,totalCobro AS sobreBalance FROM personas_cobros<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\212<|||>1<|||>2021-02-23 13:12:33|admin_aerodynamics|62|SELECT * FROM (SELECT idPersona,fecha,CONCAT('Proforma: ',numProforma) AS referencia,titulo,descripcion,totalProforma AS importe,(totalProforma*(-1)) AS sobreBalance, '0' AS orden FROM personas_proformas<{{{><}}}>UNION<{{{><}}}>SELECT idPersona,fecha,CONCAT('Invoice: ',numFactura,if(numProforma IS NOT NULL AND numProforma!='',CONCAT(' to Proforma: ',numProforma),'')) AS referencia,titulo,descripcion,totalFactura AS importe,if(numProforma IS NOT NULL AND numProforma!='',0,(totalFactura*(-1))) AS sobreBalance, '1' AS orden FROM personas_facturas<{{{><}}}>UNION<{{{><}}}>SELECT idPersona,fecha,CONCAT('Payment' ,if(numFactura IS NOT NULL AND numFactura!='',CONCAT(' to Invoice: ',numFactura),'')) AS referencia,titulo,descripcion,totalCobro AS importe,totalCobro AS sobreBalance, '2' AS orden FROM personas_cobros ) movimientos<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\213<|||>1<|||>2021-02-23 13:13:11|admin_aerodynamics|31|SELECT * FROM (SELECT idPersona,fecha,CONCAT('Proforma: ',numProforma) AS referencia,titulo,descripcion,totalProforma AS importe,(totalProforma*(-1)) AS sobreBalance, '0' AS orden FROM personas_proformas<{{{><}}}>UNION<{{{><}}}>SELECT idPersona,fecha,CONCAT('Invoice: ',numFactura,if(numProforma IS NOT NULL AND numProforma!='',CONCAT(' to Proforma: ',numProforma),'')) AS referencia,titulo,descripcion,totalFactura AS importe,if(numProforma IS NOT NULL AND numProforma!='',0,(totalFactura*(-1))) AS sobreBalance, '1' AS orden FROM personas_facturas<{{{><}}}>UNION<{{{><}}}>SELECT idPersona,fecha,CONCAT('Payment' ,if(numFactura IS NOT NULL AND numFactura!='',CONCAT(' to Invoice: ',numFactura),'')) AS referencia,titulo,descripcion,totalCobro AS importe,totalCobro AS sobreBalance, '2' AS orden FROM personas_cobros ) movimientos ORDER BY fecha DESC,orden DESC<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\214<|||>1<|||>2021-02-23 13:15:38|admin_aerodynamics|172|CREATE VIEW vista_personas_movimientos as<{{{><}}}>SELECT * FROM (SELECT idPersona,fecha,CONCAT('Proforma: ',numProforma) AS referencia,titulo,descripcion,totalProforma AS importe,(totalProforma*(-1)) AS sobreBalance, '0' AS orden FROM personas_proformas<{{{><}}}>UNION<{{{><}}}>SELECT idPersona,fecha,CONCAT('Invoice: ',numFactura,if(numProforma IS NOT NULL AND numProforma!='',CONCAT(' to Proforma: ',numProforma),'')) AS referencia,titulo,descripcion,totalFactura AS importe,if(numProforma IS NOT NULL AND numProforma!='',0,(totalFactura*(-1))) AS sobreBalance, '1' AS orden FROM personas_facturas<{{{><}}}>UNION<{{{><}}}>SELECT idPersona,fecha,CONCAT('Payment' ,if(numFactura IS NOT NULL AND numFactura!='',CONCAT(' to Invoice: ',numFactura),'')) AS referencia,titulo,descripcion,totalCobro AS importe,totalCobro AS sobreBalance, '2' AS orden FROM personas_cobros ) movimientos ORDER BY fecha DESC,orden DESC<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\216<|||>1<|||>2021-02-23 16:18:18|admin_aerodynamics|32|SELECT * from vista_personas_movimientos 
Servers\aerodynamics.com.es\QueryHistory\215<|||>1<|||>2021-02-23 22:17:15|admin_aerodynamics|219|SELECT * from vista_vuelos_avion_reservas
Servers\aerodynamics.com.es\QueryHistory\217<|||>1<|||>2021-02-23 22:23:24|admin_aerodynamics|219|SELECT * FROM personas_vuelos_automatizacion
Servers\aerodynamics.com.es\QueryHistory\218<|||>1<|||>2021-02-23 22:43:02|admin_aerodynamics|1516|SELECT <{{{><}}}>pva.idReserva AS idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>pva.idcurso AS idCurso,<{{{><}}}>a.idAvion AS idAvion,<{{{><}}}>date_format(pva.fecha,'%d-%m-%Y') AS 'DATE',<{{{><}}}>pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>pva.matricula AS AIRCRAFTREGISTRATION,<{{{><}}}>timediff(pva.aterrizaje,pva.despegue) AS TOTALVUELO,<{{{><}}}>ifnull(sec_to_time(a.nextMainteanceHours * 3600 - (select sum(if(aviones.idAvion = a.idAvion,(select time_to_sec(timediff(pva2.aterrizaje,pva2.despegue)) from personas_vuelos_automatizacion pva2 where pva2.hobbsout > aviones.lastMainteanceHobbs and<{{{><}}}>aviones.idAvion = a.idAvion),0)) AS hastaMantenimiento from aviones)),'no data') AS<{{{><}}}>HASTAMANTENIMIENTO,<{{{><}}}>sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS ACERCAMIENTOS<{{{><}}}>,'0' AS PAX,<{{{><}}}>concat('<b>',pva.tipopiloto,'</b>:',piloto.nombre,'/','<b>',pva.tipoinstructor,'</b>:',instructor.nombre) AS CREW,<{{{><}}}>pva.repostajedespuesvuelo AS FUEL,<{{{><}}}>pva.comentarios AS REMARKS,<{{{><}}}>pva.hobbsin AS HOBBSIN,<{{{><}}}>pva.hobbsout AS HOBBSOUT<{{{><}}}>FROM personas_vuelos_automatizacion pva<{{{><}}}>left join misiones m on m.idMision = pva.idleccion  <{{{><}}}>left join cursos c on c.idCurso = m.idCurso<{{{><}}}>left join aviones a on a.registracion = pva.matricula  <{{{><}}}>left join personas piloto on pva.idpiloto = piloto.idPersona  <{{{><}}}>left join personas instructor on pva.idinstructor = instructor.idPersona <{{{><}}}>group by pva.id
Servers\aerodynamics.com.es\QueryHistory\219<|||>1<|||>2021-02-23 22:47:54|admin_aerodynamics|485|(SELECT <{{{><}}}>pva.idReserva AS idReserva,<{{{><}}}>pva.id AS idVuelo,<{{{><}}}>pva.idcurso AS idCurso,<{{{><}}}>a.idAvion AS idAvion,<{{{><}}}>date_format(pva.fecha,'%d-%m-%Y') AS 'DATE',<{{{><}}}>pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>pva.matricula AS AIRCRAFTREGISTRATION,<{{{><}}}>timediff(pva.aterrizaje,pva.despegue) AS TOTALVUELO,<{{{><}}}>ifnull(sec_to_time(a.nextMainteanceHours * 3600 - (select sum(if(aviones.idAvion = a.idAvion,(select time_to_sec(timediff(pva2.aterrizaje,pva2.despegue)) from personas_vuelos_automatizacion pva2 where pva2.hobbsout > aviones.lastMainteanceHobbs and<{{{><}}}>aviones.idAvion = a.idAvion),0)) AS hastaMantenimiento from aviones)),'no data') AS<{{{><}}}>HASTAMANTENIMIENTO,<{{{><}}}>sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS ACERCAMIENTOS<{{{><}}}>,'0' AS PAX,<{{{><}}}>concat('<b>',pva.tipopiloto,'</b>:',piloto.nombre,'/','<b>',pva.tipoinstructor,'</b>:',instructor.nombre) AS CREW,<{{{><}}}>pva.repostajedespuesvuelo AS FUEL,<{{{><}}}>pva.comentarios AS REMARKS,<{{{><}}}>pva.hobbsin AS HOBBSIN,<{{{><}}}>pva.hobbsout AS HOBBSOUT<{{{><}}}>FROM personas_vuelos_automatizacion pva<{{{><}}}>left join misiones m on m.idMision = pva.idleccion  <{{{><}}}>left join cursos c on c.idCurso = m.idCurso<{{{><}}}>left join aviones a on a.registracion = pva.matricula  <{{{><}}}>left join personas piloto on pva.idpiloto = piloto.idPersona  <{{{><}}}>left join personas instructor on pva.idinstructor = instructor.idPersona <{{{><}}}>group by pva.id,pva.despegue)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>pa.idReserva AS idReserva,<{{{><}}}>pa.id AS idVuelo,<{{{><}}}>pa.idcurso AS idCurso,<{{{><}}}>a.idAvion AS idAvion,<{{{><}}}>date_format(pva.fecha,'%d-%m-%Y') AS 'DATE',<{{{><}}}>pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>pva.despegue AS DEPARTURETIME,<{{{><}}}>pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>a.modelo AS AIRCRAFTMODEL,<{{{><}}}>pa.matricula AS AIRCRAFTREGISTRATION,<{{{><}}}>timediff(pva.aterrizaje,pva.despegue) AS TOTALVUELO,<{{{><}}}>ifnull(sec_to_time(a.nextMainteanceHours * 3600 - (select sum(if(aviones.idAvion = a.idAvion,(select time_to_sec(timediff(pva2.aterrizaje,pva2.despegue)) from personas_vuelos_automatizacion pva2 where pva2.hobbsout > aviones.lastMainteanceHobbs and<{{{><}}}>aviones.idAvion = a.idAvion),0)) AS hastaMantenimiento from aviones)),'no data') AS<{{{><}}}>HASTAMANTENIMIENTO,<{{{><}}}>sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS ACERCAMIENTOS<{{{><}}}>,'0' AS PAX,<{{{><}}}>concat('<b>',pva.tipopiloto,'</b>:',piloto.nombre,'/','<b>',pva.tipoinstructor,'</b>:',instructor.nombre) AS CREW,<{{{><}}}>pva.repostajedespuesvuelo AS FUEL,<{{{><}}}>pva.comentarios AS REMARKS,<{{{><}}}>pva.hobbsin AS HOBBSIN,<{{{><}}}>pva.hobbsout AS HOBBSOUT<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.id<{{{><}}}>left join misiones m on m.idMision = pa.idleccion  <{{{><}}}>left join cursos c on c.idCurso = m.idCurso<{{{><}}}>left join aviones a on a.registracion = pa.matricula  <{{{><}}}>left join personas piloto on pa.idpiloto = piloto.idPersona  <{{{><}}}>left join personas instructor on pa.idinstructor = instructor.idPersona <{{{><}}}>group by pa.id,pva.despegue)
Servers\aerodynamics.com.es\QueryHistory\220<|||>1<|||>2021-02-23 23:00:31|admin_aerodynamics|125|SELECT * FROM vista_vuelos_avion_reservas where idAvion =20 GROUP BY idVuelo,DEPARTURETIME ORDER BY STR_TO_DATE(DATE,'%d-%m-%Y') DESC
Servers\aerodynamics.com.es\QueryHistory\221<|||>1<|||>2021-02-24 08:40:53|admin_aerodynamics|47|SELECT cp.id as id,<{{{><}}}>    cp.idCurso as idCurso, <{{{><}}}>    c.nombre as Course , <{{{><}}}>    (select count(idMision) from misiones where idCurso=cp.idCurso) as Modules,<{{{><}}}>    sum(if(rv.superado=1 and rv.idPiloto =37827,1,0)) as 'Modules Completed' ,<{{{><}}}>    concat(ROUND((sum(if(rv.superado=1 and rv.idPiloto =37827,1,0))/(select count(idMision) from misiones where idCurso=cp.idCurso))*100,0),' %') as Progress<{{{><}}}>    from personas_curso cp<{{{><}}}>    LEFT JOIN personas p ON p.idPersona = cp.idPersona    <{{{><}}}>    LEFT JOIN cursos c ON c.idCurso = cp.idCurso <{{{><}}}>    LEFT JOIN misiones m ON  m.idCurso=c.idCurso<{{{><}}}>    LEFT JOIN reserva_vuelos rv ON  rv.idLeccion=m.idMision<{{{><}}}>    WHERE p.idPersona =37827 Group by cp.idCurso
Servers\aerodynamics.com.es\QueryHistory\222<|||>1<|||>2021-02-24 08:50:42|admin_aerodynamics|94|SELECT cp.id as id,<{{{><}}}>    cp.idCurso as idCurso, <{{{><}}}>    c.nombre as Course , <{{{><}}}>    (select count(idMision) from misiones where idCurso=cp.idCurso) as Modules,<{{{><}}}>    sum(if(rv.superado=1 and rv.idPiloto =37827,1,0)) as 'Modules Completed' ,<{{{><}}}>    concat(ROUND((sum(if(rv.superado=1 and rv.idPiloto =37827,1,0))/(select count(idMision) from misiones where idCurso=cp.idCurso))*100,0),' %') as Progress<{{{><}}}>    from personas_curso cp<{{{><}}}>    LEFT JOIN personas p ON p.idPersona = cp.idPersona    <{{{><}}}>    LEFT JOIN cursos c ON c.idCurso = cp.idCurso <{{{><}}}>    LEFT JOIN misiones m ON  m.idCurso=c.idCurso<{{{><}}}>    LEFT JOIN reserva_vuelos rv ON  rv.idLeccion=m.idMision<{{{><}}}>    WHERE p.idPersona =37827 Group by cp.idCurso;<{{{><}}}>    <{{{><}}}>SELECT <{{{><}}}>pva.idcurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=pva.idcurso) as Modules,<{{{><}}}>sum(if(pva.superado=1 and pva.idpiloto =37827,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1 and pva.idpiloto =37827,1,0))/(select count(idMision) from misiones where idCurso=pva.idcurso))*100,0),' %') as Progress<{{{><}}}>FROM personas_vuelos_automatizacion pva<{{{><}}}>LEFT JOIN personas p ON p.idPersona=pva.idpiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=pva.idcurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=c.idCurso<{{{><}}}>WHERE pva.idpiloto=37827 GROUP BY pva.idcurso;
Servers\aerodynamics.com.es\QueryHistory\223<|||>1<|||>2021-02-24 08:51:20|admin_aerodynamics|109|SELECT cp.id as id,<{{{><}}}>    cp.idCurso as idCurso, <{{{><}}}>    c.nombre as Course , <{{{><}}}>    (select count(idMision) from misiones where idCurso=cp.idCurso) as Modules,<{{{><}}}>    sum(if(rv.superado=1 and rv.idPiloto =37827,1,0)) as 'Modules Completed' ,<{{{><}}}>    concat(ROUND((sum(if(rv.superado=1 and rv.idPiloto =37827,1,0))/(select count(idMision) from misiones where idCurso=cp.idCurso))*100,0),' %') as Progress<{{{><}}}>    from personas_curso cp<{{{><}}}>    LEFT JOIN personas p ON p.idPersona = cp.idPersona    <{{{><}}}>    LEFT JOIN cursos c ON c.idCurso = cp.idCurso <{{{><}}}>    LEFT JOIN misiones m ON  m.idCurso=c.idCurso<{{{><}}}>    LEFT JOIN reserva_vuelos rv ON  rv.idLeccion=m.idMision<{{{><}}}>    WHERE p.idPersona =37827 Group by cp.idCurso;<{{{><}}}>    <{{{><}}}>SELECT <{{{><}}}>pva.idcurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=pva.idcurso) as Modules,<{{{><}}}>sum(if(pva.superado=1 and pva.idpiloto =37827,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1 and pva.idpiloto =37827,1,0))/(select count(idMision) from misiones where idCurso=pva.idcurso))*100,0),' %') as Progress<{{{><}}}>FROM personas_vuelos_automatizacion pva<{{{><}}}>LEFT JOIN personas p ON p.idPersona=pva.idpiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=pva.idcurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=c.idCurso<{{{><}}}>WHERE pva.idpiloto=37827 GROUP BY pva.id;
Servers\aerodynamics.com.es\QueryHistory\224<|||>1<|||>2021-02-24 08:53:06|admin_aerodynamics|110|SELECT cp.id as id,<{{{><}}}>    cp.idCurso as idCurso, <{{{><}}}>    c.nombre as Course , <{{{><}}}>    (select count(idMision) from misiones where idCurso=cp.idCurso) as Modules,<{{{><}}}>    sum(if(rv.superado=1 and rv.idPiloto =37827,1,0)) as 'Modules Completed' ,<{{{><}}}>    concat(ROUND((sum(if(rv.superado=1 and rv.idPiloto =37827,1,0))/(select count(idMision) from misiones where idCurso=cp.idCurso))*100,0),' %') as Progress<{{{><}}}>    from personas_curso cp<{{{><}}}>    LEFT JOIN personas p ON p.idPersona = cp.idPersona    <{{{><}}}>    LEFT JOIN cursos c ON c.idCurso = cp.idCurso <{{{><}}}>    LEFT JOIN misiones m ON  m.idCurso=c.idCurso<{{{><}}}>    LEFT JOIN reserva_vuelos rv ON  rv.idLeccion=m.idMision<{{{><}}}>    WHERE p.idPersona =37827 Group by cp.idCurso;<{{{><}}}>    <{{{><}}}>SELECT <{{{><}}}>pva.idcurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=pva.idcurso) as Modules,<{{{><}}}>sum(if(pva.superado=1 and pva.idpiloto =37827,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1 and pva.idpiloto =37827,1,0))/(select count(idMision) from misiones where idCurso=pva.idcurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM personas_vuelos_automatizacion pva<{{{><}}}>LEFT JOIN personas p ON p.idPersona=pva.idpiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=pva.idcurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=c.idCurso<{{{><}}}>WHERE pva.idpiloto=37827 GROUP BY pva.idcurso;
Servers\aerodynamics.com.es\QueryHistory\225<|||>1<|||>2021-02-24 10:15:58|admin_aerodynamics|125|SELECT cp.id as id,<{{{><}}}>    cp.idCurso as idCurso, <{{{><}}}>    c.nombre as Course , <{{{><}}}>    (select count(idMision) from misiones where idCurso=cp.idCurso) as Modules,<{{{><}}}>    sum(if(rv.superado=1 and rv.idPiloto =37827,1,0)) as 'Modules Completed' ,<{{{><}}}>    concat(ROUND((sum(if(rv.superado=1 and rv.idPiloto =37827,1,0))/(select count(idMision) from misiones where idCurso=cp.idCurso))*100,0),' %') as Progress<{{{><}}}>    from personas_curso cp<{{{><}}}>    LEFT JOIN personas p ON p.idPersona = cp.idPersona    <{{{><}}}>    LEFT JOIN cursos c ON c.idCurso = cp.idCurso <{{{><}}}>    LEFT JOIN misiones m ON  m.idCurso=c.idCurso<{{{><}}}>    LEFT JOIN reserva_vuelos rv ON  rv.idLeccion=m.idMision<{{{><}}}>    WHERE p.idPersona =37827 Group by cp.idCurso;<{{{><}}}>    <{{{><}}}>SELECT <{{{><}}}>pva.idcurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=pva.idcurso) as Modules,<{{{><}}}>sum(if(pva.superado=1 and pva.idpiloto =37827,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1 and pva.idpiloto =37827,1,0))/(select count(idMision) from misiones where idCurso=pva.idcurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM personas_vuelos_automatizacion pva<{{{><}}}>LEFT JOIN personas p ON p.idPersona=pva.idpiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=pva.idcurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=c.idCurso<{{{><}}}>WHERE pva.idpiloto=37827 GROUP BY pva.idcurso;<{{{><}}}><{{{><}}}>SELECT <{{{><}}}>pa.idcurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=pa.idcurso) as Modules,<{{{><}}}>sum(if(pa.superado=1 and pva.idpiloto =37827,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pa.superado=1 and pva.idpiloto =37827,1,0))/(select count(idMision) from misiones where idCurso=pa.idcurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN personas p ON p.idPersona=pva.idpiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=pa.idcurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=c.idCurso<{{{><}}}>WHERE pva.idpiloto=37827 GROUP BY pa.idcurso;
Servers\aerodynamics.com.es\QueryHistory\226<|||>1<|||>2021-02-24 10:17:37|admin_aerodynamics|93|SELECT <{{{><}}}>pva.idcurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=pva.idcurso) as Modules,<{{{><}}}>sum(if(pva.superado=1,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1,1,0))/(select count(idMision) from misiones where idCurso=pva.idcurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM personas_vuelos_automatizacion pva<{{{><}}}>LEFT JOIN personas p ON p.idPersona=pva.idpiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=pva.idcurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=c.idCurso GROUP BY pva.idcurso,pva.idpiloto;
Servers\aerodynamics.com.es\QueryHistory\227<|||>1<|||>2021-02-24 10:18:19|admin_aerodynamics|109|SELECT <{{{><}}}>pva.idpiloto AS idPiloto,<{{{><}}}>pva.idcurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=pva.idcurso) as Modules,<{{{><}}}>sum(if(pva.superado=1,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1,1,0))/(select count(idMision) from misiones where idCurso=pva.idcurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM personas_vuelos_automatizacion pva<{{{><}}}>LEFT JOIN personas p ON p.idPersona=pva.idpiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=pva.idcurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=c.idCurso GROUP BY pva.idcurso,pva.idpiloto;
Servers\aerodynamics.com.es\QueryHistory\228<|||>1<|||>2021-02-24 10:21:50|admin_aerodynamics|219|(SELECT <{{{><}}}>pva.idpiloto AS idPiloto,<{{{><}}}>pva.idcurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=pva.idcurso) as Modules,<{{{><}}}>sum(if(pva.superado=1,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1,1,0))/(select count(idMision) from misiones where idCurso=pva.idcurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM personas_vuelos_automatizacion pva<{{{><}}}>LEFT JOIN personas p ON p.idPersona=pva.idpiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=pva.idcurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=c.idCurso GROUP BY pva.idcurso,pva.idpiloto)<{{{><}}}>UNION<{{{><}}}>(SELECT<{{{><}}}>pva.idpiloto AS idPiloto, <{{{><}}}>pa.idcurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=pa.idcurso) as Modules,<{{{><}}}>sum(if(pa.superado=1 ,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pa.superado=1 ,1,0))/(select count(idMision) from misiones where idCurso=pa.idcurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN personas p ON p.idPersona=pva.idpiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=pa.idcurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=c.idCurso<{{{><}}}> GROUP BY pa.idcurso,pva.idpiloto)
Servers\aerodynamics.com.es\QueryHistory\229<|||>1<|||>2021-02-24 10:24:52|admin_aerodynamics|109|SELECT * FROM ((SELECT <{{{><}}}>pva.idpiloto AS idPiloto,<{{{><}}}>pva.idcurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=pva.idcurso) as Modules,<{{{><}}}>sum(if(pva.superado=1,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1,1,0))/(select count(idMision) from misiones where idCurso=pva.idcurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM personas_vuelos_automatizacion pva<{{{><}}}>LEFT JOIN personas p ON p.idPersona=pva.idpiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=pva.idcurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=c.idCurso GROUP BY pva.idcurso,pva.idpiloto)<{{{><}}}>UNION<{{{><}}}>(SELECT<{{{><}}}>pva.idpiloto AS idPiloto, <{{{><}}}>pa.idcurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=pa.idcurso) as Modules,<{{{><}}}>sum(if(pa.superado=1 ,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pa.superado=1 ,1,0))/(select count(idMision) from misiones where idCurso=pa.idcurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN personas p ON p.idPersona=pva.idpiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=pa.idcurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=c.idCurso<{{{><}}}>GROUP BY pa.idcurso,pva.idpiloto)) progreso GROUP BY idCurso,idPiloto
Servers\aerodynamics.com.es\QueryHistory\230<|||>1<|||>2021-02-24 10:25:25|admin_aerodynamics|47|CREATE VIEW vista_progreso_cursos_piloto AS SELECT * FROM ((SELECT <{{{><}}}>pva.idpiloto AS idPiloto,<{{{><}}}>pva.idcurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=pva.idcurso) as Modules,<{{{><}}}>sum(if(pva.superado=1,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1,1,0))/(select count(idMision) from misiones where idCurso=pva.idcurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM personas_vuelos_automatizacion pva<{{{><}}}>LEFT JOIN personas p ON p.idPersona=pva.idpiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=pva.idcurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=c.idCurso GROUP BY pva.idcurso,pva.idpiloto)<{{{><}}}>UNION<{{{><}}}>(SELECT<{{{><}}}>pva.idpiloto AS idPiloto, <{{{><}}}>pa.idcurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=pa.idcurso) as Modules,<{{{><}}}>sum(if(pa.superado=1 ,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pa.superado=1 ,1,0))/(select count(idMision) from misiones where idCurso=pa.idcurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM personas_rutas_vuelos_automatizacion pva<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN personas p ON p.idPersona=pva.idpiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=pa.idcurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=c.idCurso<{{{><}}}>GROUP BY pa.idcurso,pva.idpiloto)) progreso GROUP BY idCurso,idPiloto
Servers\aerodynamics.com.es\QueryHistory\231<|||>1<|||>2021-02-24 10:27:04|admin_aerodynamics|46|SELECT * FROM vista_progreso_cursos_piloto WHERE idPiloto=37827
Servers\aerodynamics.com.es\QueryHistory\232<|||>1<|||>2021-02-24 10:35:38|admin_aerodynamics|47|SELECT <{{{><}}}>pva.idcurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=pva.idcurso) as Modules,<{{{><}}}>sum(if(pva.superado=1 and pva.idpiloto =37827,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1 and pva.idpiloto =37827,1,0))/(select count(idMision) from misiones where idCurso=pva.idcurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM cursos_piloto cp<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idcurso=cp.idCurso<{{{><}}}>LEFT JOIN personas p ON p.idPersona=pva.idpiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=pva.idcurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=c.idCurso<{{{><}}}>WHERE pva.idpiloto=37827 GROUP BY cp.idCurso;<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\233<|||>1<|||>2021-02-24 10:36:08|admin_aerodynamics|46|SELECT <{{{><}}}>pva.idcurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=pva.idcurso) as Modules,<{{{><}}}>sum(if(pva.superado=1 and pva.idpiloto =37827,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1 and pva.idpiloto =37827,1,0))/(select count(idMision) from misiones where idCurso=pva.idcurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM cursos_piloto cp<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idcurso=cp.idCurso<{{{><}}}>LEFT JOIN personas p ON p.idPersona=pva.idpiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=pva.idcurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=c.idCurso<{{{><}}}>WHERE pva.idpiloto=37827 GROUP BY cp.idCursoPiloto;<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\234<|||>1<|||>2021-02-24 10:37:04|admin_aerodynamics|46|SELECT <{{{><}}}>pva.idcurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idcurso) as Modules,<{{{><}}}>sum(if(pva.superado=1 and pva.idpiloto =37827,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1 and pva.idpiloto =37827,1,0))/(select count(idMision) from misiones where idCurso=cp.idcurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM cursos_piloto cp<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idcurso=cp.idCurso<{{{><}}}>LEFT JOIN personas p ON p.idPersona=pva.idpiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>WHERE pva.idpiloto=37827 GROUP BY cp.idCursoPiloto;<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\235<|||>1<|||>2021-02-24 10:37:16|admin_aerodynamics|63|SELECT <{{{><}}}>pva.idcurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idcurso) as Modules,<{{{><}}}>sum(if(pva.superado=1 and pva.idpiloto =37827,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1 and pva.idpiloto =37827,1,0))/(select count(idMision) from misiones where idCurso=cp.idcurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM cursos_piloto cp<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idcurso=cp.idCurso<{{{><}}}>LEFT JOIN personas p ON p.idPersona=pva.idpiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>WHERE cp.idPiloto=37827 GROUP BY cp.idCursoPiloto;<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\236<|||>1<|||>2021-02-24 10:37:33|admin_aerodynamics|47|SELECT <{{{><}}}>pva.idcurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idcurso) as Modules,<{{{><}}}>sum(if(pva.superado=1 and cp.idPiloto =37827,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1 and cp.idPiloto =37827,1,0))/(select count(idMision) from misiones where idCurso=cp.idcurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM cursos_piloto cp<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idcurso=cp.idCurso<{{{><}}}>LEFT JOIN personas p ON p.idPersona=pva.idpiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>WHERE cp.idPiloto=37827 GROUP BY cp.idCursoPiloto;<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\237<|||>1<|||>2021-02-24 10:37:44|admin_aerodynamics|47|SELECT <{{{><}}}>pva.idcurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idcurso) as Modules,<{{{><}}}>sum(if(pva.superado=1 and cp.idPiloto =37827,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1 and cp.idPiloto =37827,1,0))/(select count(idMision) from misiones where idCurso=cp.idcurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM cursos_piloto cp<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idcurso=cp.idCurso<{{{><}}}>LEFT JOIN personas p ON p.idPersona=cp.idPiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>WHERE cp.idPiloto=37827 GROUP BY cp.idCursoPiloto;<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\238<|||>1<|||>2021-02-24 10:38:12|admin_aerodynamics|94|SELECT <{{{><}}}>pva.idcurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idcurso) as Modules,<{{{><}}}>sum(if(pva.superado=1 and cp.idPiloto =37827,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1 and cp.idPiloto =37827,1,0))/(select count(idMision) from misiones where idCurso=cp.idcurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM cursos_piloto cp<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idcurso=cp.idCurso<{{{><}}}>LEFT JOIN personas p ON p.idPersona=cp.idPiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>WHERE cp.idPiloto=37827 GROUP BY cp.idCursoPiloto;<{{{><}}}><{{{><}}}><{{{><}}}>SELECT * FROM cursos_piloto cp;
Servers\aerodynamics.com.es\QueryHistory\240<|||>1<|||>2021-02-24 10:40:21|admin_aerodynamics|1281|SELECT <{{{><}}}>pva.idcurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idcurso) as Modules,<{{{><}}}>sum(if(pva.superado=1 and cp.idPiloto =37827,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1 and cp.idPiloto =37827,1,0))/(select count(idMision) from misiones where idCurso=cp.idcurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM cursos_piloto cp<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idcurso=cp.idCurso<{{{><}}}>LEFT JOIN personas p ON p.idPersona=cp.idPiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>WHERE cp.idPiloto=37827 GROUP BY cp.idCursoPiloto;<{{{><}}}><{{{><}}}><{{{><}}}>SELECT * FROM cursos_piloto cp<{{{><}}}>RIGHT JOIN personas_vuelos_automatizacion pva ON pva.idcurso=cp.idCurso<{{{><}}}>ORDER BY cp.idPiloto;
Servers\aerodynamics.com.es\QueryHistory\241<|||>1<|||>2021-02-24 10:40:48|admin_aerodynamics|1157|SELECT <{{{><}}}>pva.idcurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idcurso) as Modules,<{{{><}}}>sum(if(pva.superado=1 and cp.idPiloto =37827,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1 and cp.idPiloto =37827,1,0))/(select count(idMision) from misiones where idCurso=cp.idcurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM cursos_piloto cp<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idcurso=cp.idCurso<{{{><}}}>LEFT JOIN personas p ON p.idPersona=cp.idPiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>WHERE cp.idPiloto=37827 GROUP BY cp.idCursoPiloto;<{{{><}}}><{{{><}}}><{{{><}}}>SELECT * FROM cursos_piloto cp<{{{><}}}>JOIN personas_vuelos_automatizacion pva ON pva.idcurso=cp.idCurso<{{{><}}}>ORDER BY cp.idPiloto;
Servers\aerodynamics.com.es\QueryHistory\242<|||>1<|||>2021-02-24 10:41:11|admin_aerodynamics|1172|SELECT <{{{><}}}>pva.idcurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idcurso) as Modules,<{{{><}}}>sum(if(pva.superado=1 and cp.idPiloto =37827,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1 and cp.idPiloto =37827,1,0))/(select count(idMision) from misiones where idCurso=cp.idcurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM cursos_piloto cp<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idcurso=cp.idCurso<{{{><}}}>LEFT JOIN personas p ON p.idPersona=cp.idPiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>WHERE cp.idPiloto=37827 GROUP BY cp.idCursoPiloto;<{{{><}}}><{{{><}}}><{{{><}}}>SELECT * FROM cursos_piloto cp<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idcurso=cp.idCurso<{{{><}}}>ORDER BY cp.idPiloto;
Servers\aerodynamics.com.es\QueryHistory\239<|||>1<|||>2021-02-24 10:42:23|admin_aerodynamics|1563|SELECT <{{{><}}}>pva.idcurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idcurso) as Modules,<{{{><}}}>sum(if(pva.superado=1 and cp.idPiloto =37827,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1 and cp.idPiloto =37827,1,0))/(select count(idMision) from misiones where idCurso=cp.idcurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM cursos_piloto cp<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idcurso=cp.idCurso<{{{><}}}>LEFT JOIN personas p ON p.idPersona=cp.idPiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>WHERE cp.idPiloto=37827 GROUP BY cp.idPiloto,cp.idCurso;<{{{><}}}><{{{><}}}><{{{><}}}>SELECT * FROM cursos_piloto cp<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idcurso=cp.idCurso<{{{><}}}>ORDER BY cp.idPiloto,cp.idCurso;
Servers\aerodynamics.com.es\QueryHistory\243<|||>1<|||>2021-02-24 10:43:30|admin_aerodynamics|1782|SELECT <{{{><}}}>pva.idcurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idcurso) as Modules,<{{{><}}}>sum(if(pva.superado=1 and cp.idPiloto =37827,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1 and cp.idPiloto =37827,1,0))/(select count(idMision) from misiones where idCurso=cp.idcurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM cursos_piloto cp<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idcurso=cp.idCurso<{{{><}}}>LEFT JOIN personas p ON p.idPersona=cp.idPiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>WHERE cp.idPiloto=37827 GROUP BY cp.idPiloto,cp.idCurso;<{{{><}}}><{{{><}}}><{{{><}}}>SELECT * FROM cursos_piloto cp<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idcurso=cp.idCurso<{{{><}}}>ORDER BY cp.idCursoPiloto,cp.idPiloto,cp.idCurso;
Servers\aerodynamics.com.es\QueryHistory\244<|||>1<|||>2021-02-24 10:44:51|admin_aerodynamics|2812|SELECT <{{{><}}}>pva.idcurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idcurso) as Modules,<{{{><}}}>sum(if(pva.superado=1 and cp.idPiloto =37827,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1 and cp.idPiloto =37827,1,0))/(select count(idMision) from misiones where idCurso=cp.idcurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM cursos_piloto cp<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idcurso=cp.idCurso<{{{><}}}>LEFT JOIN personas p ON p.idPersona=cp.idPiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>WHERE cp.idPiloto=37827 GROUP BY cp.idPiloto,cp.idCurso;<{{{><}}}><{{{><}}}><{{{><}}}>SELECT cp.* FROM cursos_piloto cp<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idcurso=cp.idCurso<{{{><}}}>LEFT JOIN personas p ON p.idPersona=cp.idPiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>ORDER BY cp.idCursoPiloto,cp.idPiloto,cp.idCurso;
Servers\aerodynamics.com.es\QueryHistory\245<|||>1<|||>2021-02-24 10:45:40|admin_aerodynamics|6547|SELECT <{{{><}}}>pva.idcurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idcurso) as Modules,<{{{><}}}>sum(if(pva.superado=1 and cp.idPiloto =37827,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1 and cp.idPiloto =37827,1,0))/(select count(idMision) from misiones where idCurso=cp.idcurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM cursos_piloto cp<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idcurso=cp.idCurso<{{{><}}}>LEFT JOIN personas p ON p.idPersona=cp.idPiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>WHERE cp.idPiloto=37827 GROUP BY cp.idPiloto,cp.idCurso;<{{{><}}}><{{{><}}}><{{{><}}}>SELECT cp.* FROM cursos_piloto cp<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idcurso=cp.idCurso<{{{><}}}>LEFT JOIN personas p ON p.idPersona=cp.idPiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>ORDER BY cp.idCurso,cp.idPiloto;
Servers\aerodynamics.com.es\QueryHistory\246<|||>1<|||>2021-02-24 10:47:08|admin_aerodynamics|235|SELECT <{{{><}}}>pva.idcurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idcurso) as Modules,<{{{><}}}>sum(if(pva.superado=1 and cp.idPiloto =37827,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1 and cp.idPiloto =37827,1,0))/(select count(idMision) from misiones where idCurso=cp.idcurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM cursos_piloto cp<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idcurso=cp.idCurso<{{{><}}}>LEFT JOIN personas p ON p.idPersona=cp.idPiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>WHERE cp.idPiloto=37827 GROUP BY cp.idPiloto,cp.idCurso;<{{{><}}}><{{{><}}}><{{{><}}}>SELECT  <{{{><}}}>cp.idPiloto AS idPiloto,<{{{><}}}>cp.idCurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idCurso) as Modules,<{{{><}}}>sum(if(pva.superado=1 and cp.idPiloto =37827,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1 and cp.idPiloto =37827,1,0))/(select count(idMision) from misiones where idCurso=cp.idCurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM cursos_piloto cp<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idcurso=cp.idCurso<{{{><}}}>LEFT JOIN personas p ON p.idPersona=cp.idPiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>ORDER BY cp.idCurso,cp.idPiloto;
Servers\aerodynamics.com.es\QueryHistory\247<|||>1<|||>2021-02-24 10:48:05|admin_aerodynamics|250|SELECT <{{{><}}}>pva.idcurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idcurso) as Modules,<{{{><}}}>sum(if(pva.superado=1 and cp.idPiloto =37827,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1 and cp.idPiloto =37827,1,0))/(select count(idMision) from misiones where idCurso=cp.idcurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM cursos_piloto cp<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idcurso=cp.idCurso<{{{><}}}>LEFT JOIN personas p ON p.idPersona=cp.idPiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>WHERE cp.idPiloto=37827 GROUP BY cp.idPiloto,cp.idCurso;<{{{><}}}><{{{><}}}><{{{><}}}>SELECT  <{{{><}}}>cp.idPiloto AS idPiloto,<{{{><}}}>cp.idCurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idCurso) as Modules,<{{{><}}}>sum(if(pva.superado=1 and cp.idPiloto =37827,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1 and cp.idPiloto =37827,1,0))/(select count(idMision) from misiones where idCurso=cp.idCurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM cursos_piloto cp<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idcurso=cp.idCurso<{{{><}}}>LEFT JOIN personas p ON p.idPersona=cp.idPiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>ORDER BY cp.idCurso,cp.idPiloto,cp.idCursoPiloto;
Servers\aerodynamics.com.es\QueryHistory\248<|||>1<|||>2021-02-24 10:48:14|admin_aerodynamics|265|SELECT <{{{><}}}>pva.idcurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idcurso) as Modules,<{{{><}}}>sum(if(pva.superado=1 and cp.idPiloto =37827,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1 and cp.idPiloto =37827,1,0))/(select count(idMision) from misiones where idCurso=cp.idcurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM cursos_piloto cp<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idcurso=cp.idCurso<{{{><}}}>LEFT JOIN personas p ON p.idPersona=cp.idPiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>WHERE cp.idPiloto=37827 GROUP BY cp.idPiloto,cp.idCurso;<{{{><}}}><{{{><}}}><{{{><}}}>SELECT  <{{{><}}}>cp.idPiloto AS idPiloto,<{{{><}}}>cp.idCurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idCurso) as Modules,<{{{><}}}>sum(if(pva.superado=1 and cp.idPiloto =37827,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1 and cp.idPiloto =37827,1,0))/(select count(idMision) from misiones where idCurso=cp.idCurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM cursos_piloto cp<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idcurso=cp.idCurso<{{{><}}}>LEFT JOIN personas p ON p.idPersona=cp.idPiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>ORDER BY cp.idCursoPiloto;
Servers\aerodynamics.com.es\QueryHistory\249<|||>1<|||>2021-02-24 10:49:24|admin_aerodynamics|93|SELECT <{{{><}}}>pva.idcurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idcurso) as Modules,<{{{><}}}>sum(if(pva.superado=1 and cp.idPiloto =37827,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1 and cp.idPiloto =37827,1,0))/(select count(idMision) from misiones where idCurso=cp.idcurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM cursos_piloto cp<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idcurso=cp.idCurso<{{{><}}}>LEFT JOIN personas p ON p.idPersona=cp.idPiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>WHERE cp.idPiloto=37827 GROUP BY cp.idPiloto,cp.idCurso;<{{{><}}}><{{{><}}}><{{{><}}}>SELECT  <{{{><}}}>cp.idPiloto AS idPiloto,<{{{><}}}>cp.idCurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idCurso) as Modules,<{{{><}}}>sum(if(pva.superado=1 and cp.idPiloto =37827,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1 and cp.idPiloto =37827,1,0))/(select count(idMision) from misiones where idCurso=cp.idCurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM cursos_piloto cp<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idpiloto=cp.idPiloto<{{{><}}}>LEFT JOIN personas p ON p.idPersona=cp.idPiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>ORDER BY cp.idCursoPiloto;
Servers\aerodynamics.com.es\QueryHistory\250<|||>1<|||>2021-02-24 10:49:57|admin_aerodynamics|141|SELECT <{{{><}}}>pva.idcurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idcurso) as Modules,<{{{><}}}>sum(if(pva.superado=1 and cp.idPiloto =37827,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1 and cp.idPiloto =37827,1,0))/(select count(idMision) from misiones where idCurso=cp.idcurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM cursos_piloto cp<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idcurso=cp.idCurso<{{{><}}}>LEFT JOIN personas p ON p.idPersona=cp.idPiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>WHERE cp.idPiloto=37827 GROUP BY cp.idPiloto,cp.idCurso;<{{{><}}}><{{{><}}}><{{{><}}}>SELECT  <{{{><}}}>cp.idPiloto AS idPiloto,<{{{><}}}>cp.idCurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idCurso) as Modules,<{{{><}}}>sum(if(pva.superado=1 and cp.idPiloto =37827,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1 and cp.idPiloto =37827,1,0))/(select count(idMision) from misiones where idCurso=cp.idCurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM cursos_piloto cp<{{{><}}}>LEFT JOIN personas p ON p.idPersona=cp.idPiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idcurso=c.idCurso<{{{><}}}>ORDER BY cp.idCursoPiloto;
Servers\aerodynamics.com.es\QueryHistory\251<|||>1<|||>2021-02-24 10:50:25|admin_aerodynamics|235|SELECT <{{{><}}}>pva.idcurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idcurso) as Modules,<{{{><}}}>sum(if(pva.superado=1 and cp.idPiloto =37827,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1 and cp.idPiloto =37827,1,0))/(select count(idMision) from misiones where idCurso=cp.idcurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM cursos_piloto cp<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idcurso=cp.idCurso<{{{><}}}>LEFT JOIN personas p ON p.idPersona=cp.idPiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>WHERE cp.idPiloto=37827 GROUP BY cp.idPiloto,cp.idCurso;<{{{><}}}><{{{><}}}><{{{><}}}>SELECT  <{{{><}}}>cp.idPiloto AS idPiloto,<{{{><}}}>cp.idCurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idCurso) as Modules,<{{{><}}}>sum(if(pva.superado=1 and cp.idPiloto =37827,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1 and cp.idPiloto =37827,1,0))/(select count(idMision) from misiones where idCurso=cp.idCurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM cursos_piloto cp<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idcurso=cp.idCurso<{{{><}}}>LEFT JOIN personas p ON p.idPersona=cp.idPiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>GROUP BY cp.idCurso,cp.idPiloto,cp.idCursoPiloto;
Servers\aerodynamics.com.es\QueryHistory\252<|||>1<|||>2021-02-24 10:51:13|admin_aerodynamics|499|SELECT <{{{><}}}>pva.idcurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idcurso) as Modules,<{{{><}}}>sum(if(pva.superado=1 and cp.idPiloto =37827,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1 and cp.idPiloto =37827,1,0))/(select count(idMision) from misiones where idCurso=cp.idcurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM cursos_piloto cp<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idcurso=cp.idCurso<{{{><}}}>LEFT JOIN personas p ON p.idPersona=cp.idPiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>WHERE cp.idPiloto=37827 GROUP BY cp.idPiloto,cp.idCurso;<{{{><}}}><{{{><}}}><{{{><}}}>SELECT  <{{{><}}}>cp.idPiloto AS idPiloto,<{{{><}}}>cp.idCurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idCurso) as Modules,<{{{><}}}>sum(if(pva.superado=1 and cp.idPiloto =37827,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1 and cp.idPiloto =37827,1,0))/(select count(idMision) from misiones where idCurso=cp.idCurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM cursos_piloto cp<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idcurso=cp.idCurso<{{{><}}}>LEFT JOIN personas p ON p.idPersona=cp.idPiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>WHERE cp.idPiloto=37827<{{{><}}}>GROUP BY cp.idCurso,cp.idPiloto,cp.idCursoPiloto;
Servers\aerodynamics.com.es\QueryHistory\254<|||>1<|||>2021-02-24 11:09:31||94|SELECT <{{{><}}}>pva.idcurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idcurso) as Modules,<{{{><}}}>sum(if(pva.superado=1 and cp.idPiloto =37827,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1 and cp.idPiloto =37827,1,0))/(select count(idMision) from misiones where idCurso=cp.idcurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM cursos_piloto cp<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idcurso=cp.idCurso<{{{><}}}>LEFT JOIN personas p ON p.idPersona=cp.idPiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>WHERE cp.idPiloto=37827 GROUP BY cp.idPiloto,cp.idCurso;<{{{><}}}><{{{><}}}><{{{><}}}>SELECT  <{{{><}}}>cp.idPiloto AS idPiloto,<{{{><}}}>cp.idCurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idCurso) as Modules,<{{{><}}}>sum(if(pva.superado=1 and cp.idPiloto =37827,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1 and cp.idPiloto =37827,1,0))/(select count(idMision) from misiones where idCurso=cp.idCurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM cursos_piloto cp<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idcurso=cp.idCurso<{{{><}}}>LEFT JOIN personas p ON p.idPersona=cp.idPiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>WHERE cp.idPiloto=37827<{{{><}}}>GROUP BY cp.idCursoPiloto;
Servers\aerodynamics.com.es\QueryHistory\253<|||>1<|||>2021-02-24 11:11:51||297|SELECT <{{{><}}}>pva.idcurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idcurso) as Modules,<{{{><}}}>sum(if(pva.superado=1 and cp.idPiloto =37827,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1 and cp.idPiloto =37827,1,0))/(select count(idMision) from misiones where idCurso=cp.idcurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM cursos_piloto cp<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idcurso=cp.idCurso<{{{><}}}>LEFT JOIN personas p ON p.idPersona=cp.idPiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>WHERE cp.idPiloto=37827 GROUP BY cp.idPiloto,cp.idCurso;<{{{><}}}><{{{><}}}><{{{><}}}>SELECT  <{{{><}}}>cp.idPiloto AS idPiloto,<{{{><}}}>cp.idCurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idCurso) as Modules,<{{{><}}}>sum(if(pva.superado=1,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1,1,0))/(select count(idMision) from misiones where idCurso=cp.idCurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM cursos_piloto cp<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idcurso=cp.idCurso<{{{><}}}>LEFT JOIN personas p ON p.idPersona=cp.idPiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>GROUP BY cp.idCursoPiloto;
Servers\aerodynamics.com.es\QueryHistory\255<|||>1<|||>2021-02-24 11:12:35||251|SELECT <{{{><}}}>pva.idcurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idcurso) as Modules,<{{{><}}}>sum(if(pva.superado=1 and cp.idPiloto =37827,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1 and cp.idPiloto =37827,1,0))/(select count(idMision) from misiones where idCurso=cp.idcurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM cursos_piloto cp<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idcurso=cp.idCurso<{{{><}}}>LEFT JOIN personas p ON p.idPersona=cp.idPiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>WHERE cp.idPiloto=37827 GROUP BY cp.idPiloto,cp.idCurso;<{{{><}}}><{{{><}}}><{{{><}}}>SELECT  <{{{><}}}>cp.idPiloto AS idPiloto,<{{{><}}}>cp.idCurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idCurso) as Modules,<{{{><}}}>sum(if(pva.superado=1,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1,1,0))/(select count(idMision) from misiones where idCurso=cp.idCurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM cursos_piloto cp<{{{><}}}>right JOIN personas_vuelos_automatizacion pva ON pva.idcurso=cp.idCurso<{{{><}}}>LEFT JOIN personas p ON p.idPersona=cp.idPiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>GROUP BY cp.idCursoPiloto;
Servers\aerodynamics.com.es\QueryHistory\256<|||>1<|||>2021-02-24 11:12:58||297|SELECT <{{{><}}}>pva.idcurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idcurso) as Modules,<{{{><}}}>sum(if(pva.superado=1 and cp.idPiloto =37827,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1 and cp.idPiloto =37827,1,0))/(select count(idMision) from misiones where idCurso=cp.idcurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM cursos_piloto cp<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idcurso=cp.idCurso<{{{><}}}>LEFT JOIN personas p ON p.idPersona=cp.idPiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>WHERE cp.idPiloto=37827 GROUP BY cp.idPiloto,cp.idCurso;<{{{><}}}><{{{><}}}><{{{><}}}>SELECT  <{{{><}}}>cp.idPiloto AS idPiloto,<{{{><}}}>cp.idCurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idCurso) as Modules,<{{{><}}}>sum(if(pva.superado=1,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1,1,0))/(select count(idMision) from misiones where idCurso=cp.idCurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM cursos_piloto cp<{{{><}}}>inner JOIN personas_vuelos_automatizacion pva ON pva.idcurso=cp.idCurso<{{{><}}}>LEFT JOIN personas p ON p.idPersona=cp.idPiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>GROUP BY cp.idCursoPiloto;
Servers\aerodynamics.com.es\QueryHistory\257<|||>1<|||>2021-02-24 11:13:36||250|SELECT <{{{><}}}>pva.idcurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idcurso) as Modules,<{{{><}}}>sum(if(pva.superado=1 and cp.idPiloto =37827,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1 and cp.idPiloto =37827,1,0))/(select count(idMision) from misiones where idCurso=cp.idcurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM cursos_piloto cp<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idcurso=cp.idCurso<{{{><}}}>LEFT JOIN personas p ON p.idPersona=cp.idPiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>WHERE cp.idPiloto=37827 GROUP BY cp.idPiloto,cp.idCurso;<{{{><}}}><{{{><}}}><{{{><}}}>SELECT  <{{{><}}}>cp.idPiloto AS idPiloto,<{{{><}}}>cp.idCurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idCurso) as Modules,<{{{><}}}>sum(if(pva.superado=1,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1,1,0))/(select count(idMision) from misiones where idCurso=cp.idCurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM cursos_piloto cp<{{{><}}}>inner JOIN personas_vuelos_automatizacion pva ON pva.idcurso=cp.idCurso<{{{><}}}>LEFT JOIN personas p ON p.idPersona=cp.idPiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>GROUP BY cp.idCursoPiloto,cp.idPiloto,cp.idCurso;
Servers\aerodynamics.com.es\QueryHistory\258<|||>1<|||>2021-02-24 11:22:54||608|SELECT <{{{><}}}>pva.idcurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idcurso) as Modules,<{{{><}}}>sum(if(pva.superado=1 and cp.idPiloto =37827,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1 and cp.idPiloto =37827,1,0))/(select count(idMision) from misiones where idCurso=cp.idcurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM cursos_piloto cp<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idcurso=cp.idCurso<{{{><}}}>LEFT JOIN personas p ON p.idPersona=cp.idPiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>WHERE cp.idPiloto=37827 GROUP BY cp.idPiloto,cp.idCurso;<{{{><}}}><{{{><}}}><{{{><}}}>SELECT  <{{{><}}}>cp.idPiloto AS idPiloto,<{{{><}}}>cp.idCurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idCurso) as Modules,<{{{><}}}>sum(if(pva.superado=1,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1,1,0))/(select count(idMision) from misiones where idCurso=cp.idCurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM cursos_piloto cp<{{{><}}}>inner JOIN personas_vuelos_automatizacion pva ON pva.idcurso=cp.idCurso<{{{><}}}>LEFT JOIN personas p ON p.idPersona=cp.idPiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>GROUP BY cp.idCursoPiloto,pva.idcurso,pva.idpiloto;
Servers\aerodynamics.com.es\QueryHistory\260<|||>1<|||>2021-02-24 11:25:49|admin_aerodynamics|47|SELECT cp.*,p.nombre FROM cursos_piloto cp<{{{><}}}>LEFT JOIN personas p on p.idPersona = cp.idPiloto
Servers\aerodynamics.com.es\QueryHistory\259<|||>1<|||>2021-02-24 11:27:31|admin_aerodynamics|733|SELECT <{{{><}}}>pva.idcurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idcurso) as Modules,<{{{><}}}>sum(if(pva.superado=1 and cp.idPiloto =37827,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1 and cp.idPiloto =37827,1,0))/(select count(idMision) from misiones where idCurso=cp.idcurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM cursos_piloto cp<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idcurso=cp.idCurso<{{{><}}}>LEFT JOIN personas p ON p.idPersona=cp.idPiloto<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>WHERE cp.idPiloto=37827 GROUP BY cp.idPiloto,cp.idCurso;<{{{><}}}><{{{><}}}><{{{><}}}>SELECT  <{{{><}}}>cp.idPersona AS idPiloto,<{{{><}}}>cp.idCurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idCurso) as Modules,<{{{><}}}>sum(if(pva.superado=1,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1,1,0))/(select count(idMision) from misiones where idCurso=cp.idCurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM personas_curso cp<{{{><}}}>inner JOIN personas_vuelos_automatizacion pva ON pva.idcurso=cp.idCurso<{{{><}}}>LEFT JOIN personas p ON p.idPersona=cp.idPersona<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>GROUP BY pva.idcurso,pva.idpiloto;
Servers\aerodynamics.com.es\QueryHistory\261<|||>1<|||>2021-02-24 11:28:17|admin_aerodynamics|156|SELECT cp.*,p.nombre FROM personas_curso cp<{{{><}}}>LEFT JOIN personas p on p.idPersona = cp.idPersona
Servers\aerodynamics.com.es\QueryHistory\262<|||>1<|||>2021-02-24 11:29:23|admin_aerodynamics|219|SELECT cp.*,p.nombre FROM personas_curso cp<{{{><}}}>LEFT JOIN personas p on p.idPersona = cp.idPersona<{{{><}}}>GROUP BY cp.idCurso,cp.idPersona
Servers\aerodynamics.com.es\QueryHistory\263<|||>1<|||>2021-02-24 11:30:13|admin_aerodynamics|47|SELECT cp.*,p.nombre FROM personas_curso cp<{{{><}}}>LEFT JOIN personas p on p.idPersona = cp.idPersona<{{{><}}}>WHERE cp.idPersona=37827<{{{><}}}>GROUP BY cp.idCurso,cp.idPersona
Servers\aerodynamics.com.es\QueryHistory\264<|||>1<|||>2021-02-24 11:31:21|admin_aerodynamics|31|SELECT cp.*,p.nombre FROM personas_curso cp<{{{><}}}>LEFT JOIN personas p on p.idPersona = cp.idPersona<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idpiloto=cp.idPersona<{{{><}}}>WHERE cp.idPersona=37827<{{{><}}}>GROUP BY cp.idCurso,cp.idPersona
Servers\aerodynamics.com.es\QueryHistory\265<|||>1<|||>2021-02-24 11:31:50|admin_aerodynamics|47|SELECT cp.*,p.nombre FROM personas_curso cp<{{{><}}}>LEFT JOIN personas p on p.idPersona = cp.idPersona<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idpiloto=cp.idPersona<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>WHERE cp.idPersona=37827<{{{><}}}>GROUP BY cp.idCurso,cp.idPersona
Servers\aerodynamics.com.es\QueryHistory\266<|||>1<|||>2021-02-24 11:32:19|admin_aerodynamics|47|SELECT <{{{><}}}>cp.idPersona AS idPiloto,<{{{><}}}>cp.idCurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idCurso) as Modules,<{{{><}}}>sum(if(pva.superado=1,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1,1,0))/(select count(idMision) from misiones where idCurso=cp.idCurso))*100,0),' %') as Progress,<{{{><}}}>COUNT(pva.id) AS Flights<{{{><}}}>FROM personas_curso cp<{{{><}}}>LEFT JOIN personas p on p.idPersona = cp.idPersona<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idpiloto=cp.idPersona<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>WHERE cp.idPersona=37827<{{{><}}}>GROUP BY cp.idCurso,cp.idPersona
Servers\aerodynamics.com.es\QueryHistory\267<|||>1<|||>2021-02-24 11:34:27|admin_aerodynamics|47|SELECT <{{{><}}}>cp.idPersona AS idPiloto,<{{{><}}}>cp.idCurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idCurso) as Modules,<{{{><}}}>sum(if(pva.superado=1,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1,1,0))/(select count(idMision) from misiones where idCurso=cp.idCurso))*100,0),' %') as Progress,<{{{><}}}>sum(if(pva.idcurso=cp.idCurso AND pva.idpiloto=cp.idPersona,1,0)) AS Flights<{{{><}}}>FROM personas_curso cp<{{{><}}}>LEFT JOIN personas p on p.idPersona = cp.idPersona<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idpiloto=cp.idPersona<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>WHERE cp.idPersona=37827<{{{><}}}>GROUP BY cp.idCurso,cp.idPersona
Servers\aerodynamics.com.es\QueryHistory\268<|||>1<|||>2021-02-24 11:35:18|admin_aerodynamics|47|SELECT <{{{><}}}>cp.idPersona AS idPiloto,<{{{><}}}>cp.idCurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idCurso) as Modules,<{{{><}}}>sum(if(pva.superado=1 AND pva.idpiloto=cp.idPersona,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1 AND pva.idpiloto=cp.idPersona,1,0))/(select count(idMision) from misiones where idCurso=cp.idCurso))*100,0),' %') as Progress,<{{{><}}}>sum(if(pva.idcurso=cp.idCurso AND pva.idpiloto=cp.idPersona,1,0)) AS Flights<{{{><}}}>FROM personas_curso cp<{{{><}}}>LEFT JOIN personas p on p.idPersona = cp.idPersona<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idpiloto=cp.idPersona<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>WHERE cp.idPersona=37827<{{{><}}}>GROUP BY cp.idCurso,cp.idPersona
Servers\aerodynamics.com.es\QueryHistory\269<|||>1<|||>2021-02-24 11:40:16|admin_aerodynamics|359|(SELECT <{{{><}}}>cp.idPersona AS idPiloto,<{{{><}}}>cp.idCurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idCurso) as Modules,<{{{><}}}>sum(if(pva.superado=1 AND pva.idpiloto=cp.idPersona,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1 AND pva.idpiloto=cp.idPersona,1,0))/(select count(idMision) from misiones where idCurso=cp.idCurso))*100,0),' %') as Progress,<{{{><}}}>sum(if(pva.idcurso=cp.idCurso AND pva.idpiloto=cp.idPersona,1,0)) AS Flights<{{{><}}}>FROM personas_curso cp<{{{><}}}>LEFT JOIN personas p on p.idPersona = cp.idPersona<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idpiloto=cp.idPersona<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>GROUP BY cp.idCurso,cp.idPersona)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>cp.idPersona AS idPiloto,<{{{><}}}>cp.idCurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idCurso) as Modules,<{{{><}}}>sum(if(pva.superado=1 AND pa.idpiloto=cp.idPersona,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1 AND pa.idpiloto=cp.idPersona,1,0))/(select count(idMision) from misiones where idCurso=cp.idCurso))*100,0),' %') as Progress,<{{{><}}}>sum(if(pva.idcurso=cp.idCurso AND pa.idpiloto=cp.idPersona,1,0)) AS Flights<{{{><}}}>FROM personas_curso cp<{{{><}}}>LEFT JOIN personas p on p.idPersona = cp.idPersona<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idpiloto=cp.idPersona<{{{><}}}>LEFT JOIN personas_rutas_vuelos_automatizacion pa ON pa.idVuelo=pva.id<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>GROUP BY cp.idCurso,cp.idPersona)
Servers\aerodynamics.com.es\QueryHistory\270<|||>1<|||>2021-02-24 11:48:13|admin_aerodynamics|281|(SELECT <{{{><}}}>cp.idPersona AS idPiloto,<{{{><}}}>cp.idCurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idCurso) as Modules,<{{{><}}}>sum(if(pva.superado=1 AND pva.idpiloto=cp.idPersona,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1 AND pva.idpiloto=cp.idPersona,1,0))/(select count(idMision) from misiones where idCurso=cp.idCurso))*100,0),' %') as Progress,<{{{><}}}>sum(if(pva.idcurso=cp.idCurso AND pva.idpiloto=cp.idPersona,1,0)) AS Flights<{{{><}}}>FROM personas_curso cp<{{{><}}}>LEFT JOIN personas p on p.idPersona = cp.idPersona<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idpiloto=cp.idPersona<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>GROUP BY cp.idCurso,cp.idPersona)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>cp.idPersona AS idPiloto,<{{{><}}}>cp.idCurso AS idCurso,<{{{><}}}>c.nombre AS Course, <{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idCurso) as Modules,<{{{><}}}>sum(if(pa.superado=1 AND pva.idpiloto=cp.idPersona,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pa.superado=1 AND pva.idpiloto=cp.idPersona,1,0))/(select count(idMision) from misiones where idCurso=cp.idCurso))*100,0),' %') as Progress,<{{{><}}}>sum(if(pa.idcurso=cp.idCurso AND pva.idpiloto=cp.idPersona,1,0)) AS Flights<{{{><}}}>FROM personas_curso cp<{{{><}}}>LEFT JOIN personas p on p.idPersona = cp.idPersona<{{{><}}}>LEFT JOIN personas_rutas_vuelos_automatizacion pva ON pva.idpiloto=cp.idPersona<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>GROUP BY cp.idCurso,cp.idPersona)
Servers\aerodynamics.com.es\QueryHistory\271<|||>1<|||>2021-02-24 11:50:00|admin_aerodynamics|47|SELECT * FROM ((SELECT <{{{><}}}>cp.idPersona AS idPiloto,<{{{><}}}>cp.idCurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idCurso) as Modules,<{{{><}}}>sum(if(pva.superado=1 AND pva.idpiloto=cp.idPersona,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1 AND pva.idpiloto=cp.idPersona,1,0))/(select count(idMision) from misiones where idCurso=cp.idCurso))*100,0),' %') as Progress,<{{{><}}}>sum(if(pva.idcurso=cp.idCurso AND pva.idpiloto=cp.idPersona,1,0)) AS Flights<{{{><}}}>FROM personas_curso cp<{{{><}}}>LEFT JOIN personas p on p.idPersona = cp.idPersona<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idpiloto=cp.idPersona<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>GROUP BY cp.idCurso,cp.idPersona)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>cp.idPersona AS idPiloto,<{{{><}}}>cp.idCurso AS idCurso,<{{{><}}}>c.nombre AS Course, <{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idCurso) as Modules,<{{{><}}}>sum(if(pa.superado=1 AND pva.idpiloto=cp.idPersona,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pa.superado=1 AND pva.idpiloto=cp.idPersona,1,0))/(select count(idMision) from misiones where idCurso=cp.idCurso))*100,0),' %') as Progress,<{{{><}}}>sum(if(pa.idcurso=cp.idCurso AND pva.idpiloto=cp.idPersona,1,0)) AS Flights<{{{><}}}>FROM personas_curso cp<{{{><}}}>LEFT JOIN personas p on p.idPersona = cp.idPersona<{{{><}}}>LEFT JOIN personas_rutas_vuelos_automatizacion pva ON pva.idpiloto=cp.idPersona<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>GROUP BY cp.idCurso,cp.idPersona)) progreso WHERE idPiloto=37827
Servers\aerodynamics.com.es\QueryHistory\272<|||>1<|||>2021-02-24 11:57:15|admin_aerodynamics|328|SELECT * FROM ((SELECT <{{{><}}}>cp.idPersona AS idPiloto,<{{{><}}}>cp.idCurso AS idCurso,<{{{><}}}>c.nombre AS Course,<{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idCurso) as Modules,<{{{><}}}>sum(if(pva.superado=1 AND pva.idpiloto=cp.idPersona,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pva.superado=1 AND pva.idpiloto=cp.idPersona,1,0))/(select count(idMision) from misiones where idCurso=cp.idCurso))*100,0),' %') as Progress,<{{{><}}}>sum(if(pva.idcurso=cp.idCurso AND pva.idpiloto=cp.idPersona,1,0)) AS Flights<{{{><}}}>FROM personas_curso cp<{{{><}}}>LEFT JOIN personas p on p.idPersona = cp.idPersona<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON pva.idpiloto=cp.idPersona<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>GROUP BY cp.idCurso,cp.idPersona)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>cp.idPersona AS idPiloto,<{{{><}}}>cp.idCurso AS idCurso,<{{{><}}}>c.nombre AS Course, <{{{><}}}>(select COUNT(idMision) from misiones where idCurso=cp.idCurso) as Modules,<{{{><}}}>sum(if(pa.superado=1 AND pva.idpiloto=cp.idPersona,1,0)) as 'Modules Completed',<{{{><}}}>concat(ROUND((sum(if(pa.superado=1 AND pva.idpiloto=cp.idPersona,1,0))/(select count(idMision) from misiones where idCurso=cp.idCurso))*100,0),' %') as Progress,<{{{><}}}>sum(if(pa.idcurso=cp.idCurso AND pva.idpiloto=cp.idPersona,1,0)) AS Flights<{{{><}}}>FROM personas_curso cp<{{{><}}}>LEFT JOIN personas p on p.idPersona = cp.idPersona<{{{><}}}>LEFT JOIN personas_rutas_vuelos_automatizacion pva ON pva.idpiloto=cp.idPersona<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON pa.id=pva.idVuelo<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=cp.idCurso<{{{><}}}>LEFT JOIN misiones m ON m.idCurso=cp.idCurso<{{{><}}}>GROUP BY cp.idCurso,cp.idPersona)) progreso GROUP BY idPiloto,idCurso
Servers\aerodynamics.com.es\QueryHistory\273<|||>1<|||>2021-02-24 12:01:20|admin_aerodynamics|250|SELECT * FROM vista_progreso_cursos_piloto
Servers\aerodynamics.com.es\QueryHistory\274<|||>1<|||>2021-02-24 12:11:43|admin_aerodynamics|1578|SELECT <{{{><}}}>    m.idMision as id,<{{{><}}}>    m.nombreMision AS 'Modules',<{{{><}}}>    SEC_TO_TIME(ifnull(SUM(TIME_TO_SEC(STR_TO_DATE(if(LENGTH(m.vfrMision)<4,CONCAT('0',m.vfrMision),m.vfrMision), '%h:%i %p'))),0)+ifnull(SUM(TIME_TO_SEC(STR_TO_DATE(if(LENGTH(m.ifrMision)<4,CONCAT('0',m.ifrMision),m.ifrMision), '%h:%i %p'))),0)) AS Duration,<{{{><}}}>    SEC_TO_TIME(SUM(if(m.idMision=rv.idLeccion AND rv.idPiloto=".$idpiloto." ,(TIME_TO_SEC(rv.horaFin)-TIME_TO_SEC(rv.horaInicio)-(CAST(rv.postBriefing AS INT)*60)-(CAST(rv.postBriefing AS INT)*60)),0))) AS 'Flying Time',<{{{><}}}>    sum(if(m.idMision=rv.idLeccion ,1,0)) as Flygths,<{{{><}}}>    if(SUM(if(m.idMision=rv.idLeccion  AND rv.superado=1 ,1,0))>=1,'OK',if(SUM(if(m.idMision=rv.idLeccion AND rv.superado=2 ,1,0))>=1,'FAIL','')) AS 'Check'<{{{><}}}>    FROM misiones m<{{{><}}}>    LEFT JOIN reserva_vuelos rv ON  rv.idLeccion=m.idMision <{{{><}}}>    GROUP BY m.idMision,rv.idPiloto,m.idCurso ORDER BY m.idMision ASC
Servers\aerodynamics.com.es\QueryHistory\275<|||>1<|||>2021-02-24 12:12:45|admin_aerodynamics|328|SELECT <{{{><}}}>	rv.idPiloto AS idPiloto,<{{{><}}}>    m.idMision as id,<{{{><}}}>    m.nombreMision AS 'Modules',<{{{><}}}>    SEC_TO_TIME(ifnull(SUM(TIME_TO_SEC(STR_TO_DATE(if(LENGTH(m.vfrMision)<4,CONCAT('0',m.vfrMision),m.vfrMision), '%h:%i %p'))),0)+ifnull(SUM(TIME_TO_SEC(STR_TO_DATE(if(LENGTH(m.ifrMision)<4,CONCAT('0',m.ifrMision),m.ifrMision), '%h:%i %p'))),0)) AS Duration,<{{{><}}}>    SEC_TO_TIME(SUM(if(m.idMision=rv.idLeccion AND rv.idPiloto=".$idpiloto." ,(TIME_TO_SEC(rv.horaFin)-TIME_TO_SEC(rv.horaInicio)-(CAST(rv.postBriefing AS INT)*60)-(CAST(rv.postBriefing AS INT)*60)),0))) AS 'Flying Time',<{{{><}}}>    sum(if(m.idMision=rv.idLeccion ,1,0)) as Flygths,<{{{><}}}>    if(SUM(if(m.idMision=rv.idLeccion  AND rv.superado=1 ,1,0))>=1,'OK',if(SUM(if(m.idMision=rv.idLeccion AND rv.superado=2 ,1,0))>=1,'FAIL','')) AS 'Check'<{{{><}}}>    FROM misiones m<{{{><}}}>    LEFT JOIN reserva_vuelos rv ON  rv.idLeccion=m.idMision <{{{><}}}>    GROUP BY m.idMision,rv.idPiloto,m.idCurso ORDER BY m.idMision ASC
Servers\aerodynamics.com.es\QueryHistory\276<|||>1<|||>2021-02-24 12:13:04|admin_aerodynamics|47|SELECT <{{{><}}}>	rv.idPiloto AS idPiloto,<{{{><}}}>    m.idMision as id,<{{{><}}}>    m.nombreMision AS 'Modules',<{{{><}}}>    SEC_TO_TIME(ifnull(SUM(TIME_TO_SEC(STR_TO_DATE(if(LENGTH(m.vfrMision)<4,CONCAT('0',m.vfrMision),m.vfrMision), '%h:%i %p'))),0)+ifnull(SUM(TIME_TO_SEC(STR_TO_DATE(if(LENGTH(m.ifrMision)<4,CONCAT('0',m.ifrMision),m.ifrMision), '%h:%i %p'))),0)) AS Duration,<{{{><}}}>    SEC_TO_TIME(SUM(if(m.idMision=rv.idLeccion AND rv.idPiloto=".$idpiloto." ,(TIME_TO_SEC(rv.horaFin)-TIME_TO_SEC(rv.horaInicio)-(CAST(rv.postBriefing AS INT)*60)-(CAST(rv.postBriefing AS INT)*60)),0))) AS 'Flying Time',<{{{><}}}>    sum(if(m.idMision=rv.idLeccion ,1,0)) as Flygths,<{{{><}}}>    if(SUM(if(m.idMision=rv.idLeccion  AND rv.superado=1 ,1,0))>=1,'OK',if(SUM(if(m.idMision=rv.idLeccion AND rv.superado=2 ,1,0))>=1,'FAIL','')) AS 'Check'<{{{><}}}>    FROM misiones m<{{{><}}}>    LEFT JOIN reserva_vuelos rv ON  rv.idLeccion=m.idMision <{{{><}}}>    WHERE rv.idPiloto=37827<{{{><}}}>    GROUP BY m.idMision,rv.idPiloto,m.idCurso ORDER BY m.idMision ASC
Servers\aerodynamics.com.es\QueryHistory\277<|||>1<|||>2021-02-24 12:20:25|admin_aerodynamics|78|SELECT <{{{><}}}>rv.idPiloto AS idPiloto,<{{{><}}}>m.idMision as id,<{{{><}}}>m.nombreMision AS 'Modules',<{{{><}}}>SEC_TO_TIME(ifnull(SUM(TIME_TO_SEC(STR_TO_DATE(if(LENGTH(m.vfrMision)<4,CONCAT('0',m.vfrMision),m.vfrMision), '%h:%i %p'))),0)+ifnull(SUM(TIME_TO_SEC(STR_TO_DATE(if(LENGTH(m.ifrMision)<4,CONCAT('0',m.ifrMision),m.ifrMision), '%h:%i %p'))),0)) AS Duration,<{{{><}}}>SEC_TO_TIME(SUM(if(m.idMision=rv.idLeccion AND rv.idPiloto=".$idpiloto." ,(TIME_TO_SEC(rv.horaFin)-TIME_TO_SEC(rv.horaInicio)-(CAST(rv.postBriefing AS INT)*60)-(CAST(rv.postBriefing AS INT)*60)),0))) AS 'Flying Time',<{{{><}}}>sum(if(m.idMision=rv.idLeccion ,1,0)) as Flygths,<{{{><}}}>if(SUM(if(m.idMision=rv.idLeccion  AND rv.superado=1 ,1,0))>=1,'OK',if(SUM(if(m.idMision=rv.idLeccion AND rv.superado=2 ,1,0))>=1,'FAIL','')) AS 'Check'<{{{><}}}>FROM misiones m<{{{><}}}>LEFT JOIN reserva_vuelos rv ON  rv.idLeccion=m.idMision <{{{><}}}>WHERE rv.idPiloto=37827<{{{><}}}>GROUP BY m.idMision,rv.idPiloto,m.idCurso ORDER BY m.idMision ASC;<{{{><}}}><{{{><}}}><{{{><}}}>SELECT <{{{><}}}>pva.idpiloto AS idPiloto,<{{{><}}}>m.idMision as id,<{{{><}}}>m.nombreMision AS 'Modules',<{{{><}}}>SEC_TO_TIME(ifnull(SUM(TIME_TO_SEC(STR_TO_DATE(if(LENGTH(m.vfrMision)<4,CONCAT('0',m.vfrMision),m.vfrMision), '%h:%i %p'))),0)+ifnull(SUM(TIME_TO_SEC(STR_TO_DATE(if(LENGTH(m.ifrMision)<4,CONCAT('0',m.ifrMision),m.ifrMision), '%h:%i %p'))),0)) AS Duration,<{{{><}}}>TIMEDIFF(pva.aterrizaje,pva.despegue) AS 'Flying Time',<{{{><}}}>sum(if(m.idMision=pva.idleccion ,1,0)) as Flygths,<{{{><}}}>if(SUM(if(m.idMision=pva.idleccion  AND pva.superado=1 ,1,0))>=1,'OK',if(SUM(if(m.idMision=pva.idleccion AND pva.superado=2 ,1,0))>=1,'FAIL','')) AS 'Check'<{{{><}}}>FROM misiones m<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON  pva.idleccion=m.idMision <{{{><}}}>WHERE pva.idpiloto=37827<{{{><}}}>GROUP BY m.idMision,pva.idpiloto,m.idCurso ORDER BY m.idMision ASC;<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\278<|||>1<|||>2021-02-24 12:21:12|admin_aerodynamics|94|SELECT <{{{><}}}>rv.idPiloto AS idPiloto,<{{{><}}}>m.idMision as id,<{{{><}}}>m.nombreMision AS 'Modules',<{{{><}}}>SEC_TO_TIME(ifnull(SUM(TIME_TO_SEC(STR_TO_DATE(if(LENGTH(m.vfrMision)<4,CONCAT('0',m.vfrMision),m.vfrMision), '%h:%i %p'))),0)+ifnull(SUM(TIME_TO_SEC(STR_TO_DATE(if(LENGTH(m.ifrMision)<4,CONCAT('0',m.ifrMision),m.ifrMision), '%h:%i %p'))),0)) AS Duration,<{{{><}}}>SEC_TO_TIME(SUM(if(m.idMision=rv.idLeccion AND rv.idPiloto=".$idpiloto." ,(TIME_TO_SEC(rv.horaFin)-TIME_TO_SEC(rv.horaInicio)-(CAST(rv.postBriefing AS INT)*60)-(CAST(rv.postBriefing AS INT)*60)),0))) AS 'Flying Time',<{{{><}}}>sum(if(m.idMision=rv.idLeccion ,1,0)) as Flygths,<{{{><}}}>if(SUM(if(m.idMision=rv.idLeccion  AND rv.superado=1 ,1,0))>=1,'OK',if(SUM(if(m.idMision=rv.idLeccion AND rv.superado=2 ,1,0))>=1,'FAIL','')) AS 'Check'<{{{><}}}>FROM misiones m<{{{><}}}>LEFT JOIN reserva_vuelos rv ON  rv.idLeccion=m.idMision <{{{><}}}>WHERE rv.idPiloto=37827<{{{><}}}>GROUP BY m.idMision,rv.idPiloto,m.idCurso ORDER BY m.idMision ASC;<{{{><}}}><{{{><}}}><{{{><}}}>SELECT <{{{><}}}>pva.idpiloto AS idPiloto,<{{{><}}}>m.idMision as id,<{{{><}}}>m.nombreMision AS 'Modules',<{{{><}}}>SEC_TO_TIME(ifnull(SUM(TIME_TO_SEC(STR_TO_DATE(if(LENGTH(m.vfrMision)<4,CONCAT('0',m.vfrMision),m.vfrMision), '%h:%i %p'))),0)+ifnull(SUM(TIME_TO_SEC(STR_TO_DATE(if(LENGTH(m.ifrMision)<4,CONCAT('0',m.ifrMision),m.ifrMision), '%h:%i %p'))),0)) AS Duration,<{{{><}}}>sec_to_time(sum(time_to_sec(TIMEDIFF(pva.aterrizaje,pva.despegue)))) AS 'Flying Time',<{{{><}}}>sum(if(m.idMision=pva.idleccion ,1,0)) as Flygths,<{{{><}}}>if(SUM(if(m.idMision=pva.idleccion  AND pva.superado=1 ,1,0))>=1,'OK',if(SUM(if(m.idMision=pva.idleccion AND pva.superado=2 ,1,0))>=1,'FAIL','')) AS 'Check'<{{{><}}}>FROM misiones m<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON  pva.idleccion=m.idMision <{{{><}}}>WHERE pva.idpiloto=37827<{{{><}}}>GROUP BY m.idMision,pva.idpiloto,m.idCurso ORDER BY m.idMision ASC;<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\279<|||>1<|||>2021-02-24 12:27:11|admin_aerodynamics|532|SELECT <{{{><}}}>rv.idPiloto AS idPiloto,<{{{><}}}>m.idMision as id,<{{{><}}}>m.nombreMision AS 'Modules',<{{{><}}}>SEC_TO_TIME(ifnull(SUM(TIME_TO_SEC(STR_TO_DATE(if(LENGTH(m.vfrMision)<4,CONCAT('0',m.vfrMision),m.vfrMision), '%h:%i %p'))),0)+ifnull(SUM(TIME_TO_SEC(STR_TO_DATE(if(LENGTH(m.ifrMision)<4,CONCAT('0',m.ifrMision),m.ifrMision), '%h:%i %p'))),0)) AS Duration,<{{{><}}}>SEC_TO_TIME(SUM(if(m.idMision=rv.idLeccion AND rv.idPiloto=".$idpiloto." ,(TIME_TO_SEC(rv.horaFin)-TIME_TO_SEC(rv.horaInicio)-(CAST(rv.postBriefing AS INT)*60)-(CAST(rv.postBriefing AS INT)*60)),0))) AS 'Flying Time',<{{{><}}}>sum(if(m.idMision=rv.idLeccion ,1,0)) as Flygths,<{{{><}}}>if(SUM(if(m.idMision=rv.idLeccion  AND rv.superado=1 ,1,0))>=1,'OK',if(SUM(if(m.idMision=rv.idLeccion AND rv.superado=2 ,1,0))>=1,'FAIL','')) AS 'Check'<{{{><}}}>FROM misiones m<{{{><}}}>LEFT JOIN reserva_vuelos rv ON  rv.idLeccion=m.idMision <{{{><}}}>WHERE rv.idPiloto=37827<{{{><}}}>GROUP BY m.idMision,rv.idPiloto,m.idCurso ORDER BY m.idMision ASC;<{{{><}}}><{{{><}}}><{{{><}}}>SELECT <{{{><}}}>pva.idpiloto AS idPiloto,<{{{><}}}>m.idMision as id,<{{{><}}}>m.nombreMision AS 'Modules',<{{{><}}}>SEC_TO_TIME(ifnull(SUM(TIME_TO_SEC(STR_TO_DATE(if(LENGTH(m.vfrMision)<4,CONCAT('0',m.vfrMision),m.vfrMision), '%h:%i %p'))),0)+ifnull(SUM(TIME_TO_SEC(STR_TO_DATE(if(LENGTH(m.ifrMision)<4,CONCAT('0',m.ifrMision),m.ifrMision), '%h:%i %p'))),0)) AS Duration,<{{{><}}}>sec_to_time(sum(time_to_sec(TIMEDIFF(pva.aterrizaje,pva.despegue)))) AS 'Flying Time',<{{{><}}}>sum(if(m.idMision=pva.idleccion ,1,0)) as Flygths,<{{{><}}}>if(SUM(if(m.idMision=pva.idleccion  AND pva.superado=1 ,1,0))>=1,'OK',if(SUM(if(m.idMision=pva.idleccion AND pva.superado=2 ,1,0))>=1,'FAIL','')) AS 'Check'<{{{><}}}>FROM misiones m<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON  pva.idleccion=m.idMision <{{{><}}}>WHERE pva.idpiloto=37827<{{{><}}}>GROUP BY m.idMision,pva.idpiloto,m.idCurso ORDER BY m.idMision ASC;<{{{><}}}><{{{><}}}>SELECT <{{{><}}}>pva.idpiloto AS idPiloto,<{{{><}}}>m.idMision as id,<{{{><}}}>m.nombreMision AS 'Modules',<{{{><}}}>SEC_TO_TIME(ifnull(SUM(TIME_TO_SEC(STR_TO_DATE(if(LENGTH(m.vfrMision)<4,CONCAT('0',m.vfrMision),m.vfrMision), '%h:%i %p'))),0)+ifnull(SUM(TIME_TO_SEC(STR_TO_DATE(if(LENGTH(m.ifrMision)<4,CONCAT('0',m.ifrMision),m.ifrMision), '%h:%i %p'))),0)) AS Duration,<{{{><}}}>sec_to_time(sum(time_to_sec(TIMEDIFF(pva.aterrizaje,pva.despegue)))) AS 'Flying Time',<{{{><}}}>sum(if(m.idMision=pa.idleccion ,1,0)) as Flygths,<{{{><}}}>if(SUM(if(m.idMision=pa.idleccion  AND pa.superado=1 ,1,0))>=1,'OK',if(SUM(if(m.idMision=pa.idleccion AND pa.superado=2 ,1,0))>=1,'FAIL','')) AS 'Check'<{{{><}}}>FROM misiones m<{{{><}}}>LEFT JOIN personas_rutas_vuelos_automatizacion pva ON  pva.idleccion=m.idMision<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON  pa.id=pva.idVuelo  <{{{><}}}>WHERE pa.idpiloto=37827<{{{><}}}>GROUP BY m.idMision,pa.idpiloto,m.idCurso ORDER BY m.idMision ASC;<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\281<|||>1<|||>2021-02-24 12:35:35|admin_aerodynamics|547|SELECT <{{{><}}}>rv.idPiloto AS idPiloto,<{{{><}}}>m.idMision as id,<{{{><}}}>m.nombreMision AS 'Modules',<{{{><}}}>SEC_TO_TIME(ifnull(SUM(TIME_TO_SEC(STR_TO_DATE(if(LENGTH(m.vfrMision)<4,CONCAT('0',m.vfrMision),m.vfrMision), '%h:%i %p'))),0)+ifnull(SUM(TIME_TO_SEC(STR_TO_DATE(if(LENGTH(m.ifrMision)<4,CONCAT('0',m.ifrMision),m.ifrMision), '%h:%i %p'))),0)) AS Duration,<{{{><}}}>SEC_TO_TIME(SUM(if(m.idMision=rv.idLeccion AND rv.idPiloto=".$idpiloto." ,(TIME_TO_SEC(rv.horaFin)-TIME_TO_SEC(rv.horaInicio)-(CAST(rv.postBriefing AS INT)*60)-(CAST(rv.postBriefing AS INT)*60)),0))) AS 'Flying Time',<{{{><}}}>sum(if(m.idMision=rv.idLeccion ,1,0)) as Flygths,<{{{><}}}>if(SUM(if(m.idMision=rv.idLeccion  AND rv.superado=1 ,1,0))>=1,'OK',if(SUM(if(m.idMision=rv.idLeccion AND rv.superado=2 ,1,0))>=1,'FAIL','')) AS 'Check'<{{{><}}}>FROM misiones m<{{{><}}}>LEFT JOIN reserva_vuelos rv ON  rv.idLeccion=m.idMision <{{{><}}}>WHERE rv.idPiloto=37827<{{{><}}}>GROUP BY m.idMision,rv.idPiloto,m.idCurso ORDER BY m.idMision ASC;<{{{><}}}><{{{><}}}><{{{><}}}>SELECT * FROM ((SELECT <{{{><}}}>pva.idpiloto AS idPiloto,<{{{><}}}>m.idMision as id,<{{{><}}}>m.idCurso AS idCurso,<{{{><}}}>m.nombreMision AS 'Modules',<{{{><}}}>SEC_TO_TIME(ifnull(SUM(TIME_TO_SEC(STR_TO_DATE(if(LENGTH(m.vfrMision)<4,CONCAT('0',m.vfrMision),m.vfrMision), '%h:%i %p'))),0)+ifnull(SUM(TIME_TO_SEC(STR_TO_DATE(if(LENGTH(m.ifrMision)<4,CONCAT('0',m.ifrMision),m.ifrMision), '%h:%i %p'))),0)) AS Duration,<{{{><}}}>sec_to_time(sum(time_to_sec(TIMEDIFF(pva.aterrizaje,pva.despegue)))) AS 'Flying Time',<{{{><}}}>sum(if(m.idMision=pva.idleccion ,1,0)) as Flygths,<{{{><}}}>if(SUM(if(m.idMision=pva.idleccion  AND pva.superado=1 ,1,0))>=1,'OK',if(SUM(if(m.idMision=pva.idleccion AND pva.superado=2 ,1,0))>=1,'FAIL','')) AS 'Check'<{{{><}}}>FROM misiones m<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON  pva.idleccion=m.idMision <{{{><}}}>GROUP BY m.idMision,pva.idpiloto,m.idCurso ORDER BY m.idMision ASC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>pva.idpiloto AS idPiloto,<{{{><}}}>m.idMision as id,<{{{><}}}>m.idCurso AS idCurso,<{{{><}}}>m.nombreMision AS 'Modules',<{{{><}}}>SEC_TO_TIME(ifnull(SUM(TIME_TO_SEC(STR_TO_DATE(if(LENGTH(m.vfrMision)<4,CONCAT('0',m.vfrMision),m.vfrMision), '%h:%i %p'))),0)+ifnull(SUM(TIME_TO_SEC(STR_TO_DATE(if(LENGTH(m.ifrMision)<4,CONCAT('0',m.ifrMision),m.ifrMision), '%h:%i %p'))),0)) AS Duration,<{{{><}}}>sec_to_time(sum(time_to_sec(TIMEDIFF(pva.aterrizaje,pva.despegue)))) AS 'Flying Time',<{{{><}}}>sum(if(m.idMision=pa.idleccion ,1,0)) as Flygths,<{{{><}}}>if(SUM(if(m.idMision=pa.idleccion  AND pa.superado=1 ,1,0))>=1,'OK',if(SUM(if(m.idMision=pa.idleccion AND pa.superado=2 ,1,0))>=1,'FAIL','')) AS 'Check'<{{{><}}}>FROM misiones m<{{{><}}}>LEFT JOIN personas_rutas_vuelos_automatizacion pva ON  pva.idleccion=m.idMision<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON  pa.id=pva.idVuelo  <{{{><}}}>GROUP BY m.idMision,pa.idpiloto,m.idCurso ORDER BY m.idMision ASC)) progreso_modulos GROUP BY id,idCurso,idPiloto<{{{><}}}>
Servers\aerodynamics.com.es\QueryHistory\280<|||>1<|||>2021-02-24 12:36:21|admin_aerodynamics|47|CREATE VIEW vista_progreso_misiones_cursos_persona as<{{{><}}}>SELECT * FROM ((SELECT <{{{><}}}>pva.idpiloto AS idPiloto,<{{{><}}}>m.idMision as id,<{{{><}}}>m.idCurso AS idCurso,<{{{><}}}>m.nombreMision AS 'Modules',<{{{><}}}>SEC_TO_TIME(ifnull(SUM(TIME_TO_SEC(STR_TO_DATE(if(LENGTH(m.vfrMision)<4,CONCAT('0',m.vfrMision),m.vfrMision), '%h:%i %p'))),0)+ifnull(SUM(TIME_TO_SEC(STR_TO_DATE(if(LENGTH(m.ifrMision)<4,CONCAT('0',m.ifrMision),m.ifrMision), '%h:%i %p'))),0)) AS Duration,<{{{><}}}>sec_to_time(sum(time_to_sec(TIMEDIFF(pva.aterrizaje,pva.despegue)))) AS 'Flying Time',<{{{><}}}>sum(if(m.idMision=pva.idleccion ,1,0)) as Flygths,<{{{><}}}>if(SUM(if(m.idMision=pva.idleccion  AND pva.superado=1 ,1,0))>=1,'OK',if(SUM(if(m.idMision=pva.idleccion AND pva.superado=2 ,1,0))>=1,'FAIL','')) AS 'Check'<{{{><}}}>FROM misiones m<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pva ON  pva.idleccion=m.idMision <{{{><}}}>GROUP BY m.idMision,pva.idpiloto,m.idCurso ORDER BY m.idMision ASC)<{{{><}}}>UNION<{{{><}}}>(SELECT <{{{><}}}>pva.idpiloto AS idPiloto,<{{{><}}}>m.idMision as id,<{{{><}}}>m.idCurso AS idCurso,<{{{><}}}>m.nombreMision AS 'Modules',<{{{><}}}>SEC_TO_TIME(ifnull(SUM(TIME_TO_SEC(STR_TO_DATE(if(LENGTH(m.vfrMision)<4,CONCAT('0',m.vfrMision),m.vfrMision), '%h:%i %p'))),0)+ifnull(SUM(TIME_TO_SEC(STR_TO_DATE(if(LENGTH(m.ifrMision)<4,CONCAT('0',m.ifrMision),m.ifrMision), '%h:%i %p'))),0)) AS Duration,<{{{><}}}>sec_to_time(sum(time_to_sec(TIMEDIFF(pva.aterrizaje,pva.despegue)))) AS 'Flying Time',<{{{><}}}>sum(if(m.idMision=pa.idleccion ,1,0)) as Flygths,<{{{><}}}>if(SUM(if(m.idMision=pa.idleccion  AND pa.superado=1 ,1,0))>=1,'OK',if(SUM(if(m.idMision=pa.idleccion AND pa.superado=2 ,1,0))>=1,'FAIL','')) AS 'Check'<{{{><}}}>FROM misiones m<{{{><}}}>LEFT JOIN personas_rutas_vuelos_automatizacion pva ON  pva.idleccion=m.idMision<{{{><}}}>LEFT JOIN personas_vuelos_automatizacion pa ON  pa.id=pva.idVuelo  <{{{><}}}>GROUP BY m.idMision,pa.idpiloto,m.idCurso ORDER BY m.idMision ASC)) progreso_modulos GROUP BY id,idCurso,idPiloto
Servers\aerodynamics.com.es\QueryHistory\282<|||>1<|||>2021-02-24 12:41:52|admin_aerodynamics|46|SELECT * FROM vista_progreso_misiones_cursos_persona where idCurso=99 and idPiloto=37827 GROUP BY id ORDER BY id ASC
Servers\aerodynamics.com.es\QueryHistory\283<|||>1<|||>2021-02-24 12:42:15|admin_aerodynamics|47|SELECT * FROM vista_progreso_misiones_cursos_persona where idCurso=99 and idPiloto=37827  ORDER BY id ASC
Servers\aerodynamics.com.es\QueryHistory\284<|||>1<|||>2021-02-24 12:43:11|admin_aerodynamics|94|SELECT * FROM vista_progreso_misiones_cursos_persona where idCurso=99 and idPiloto=37827 GROUP BY id ORDER BY id ASC;<{{{><}}}>SELECT * FROM misiones WHERE idCurso=99;
Servers\aerodynamics.com.es\QueryHistory\285<|||>1<|||>2021-02-24 16:54:08|admin_aerodynamics|47|SELECT evaluacion FROM personas_vuelos_automatizacion
Servers\aerodynamics.com.es\QueryHistory\286<|||>1<|||>2021-02-24 17:28:20|admin_aerodynamics|219|SELECT * FROM personas_vuelos_automatizacion pva LEFT JOIN personas piloto on piloto.idPersona=pva.idpiloto LEFT JOIN personas instructor on instructor.idPersona=pva.idinstructor LEFT JOIN misiones on misiones.idMision=pva.idleccion LEFT JOIN cursos on cursos.idCurso=pva.idcurso where pva.id=619
Servers\aerodynamics.com.es\QueryHistory\287<|||>1<|||>2021-02-24 19:53:10|admin_aerodynamics|109|SELECT CONCAT(IFNULL(c.refCurso,''),' ',IFNULL(c.nombre,'')) AS nombreCurso,<{{{><}}}>CONCAT(IFNULL(m.refMision,''),' ',IFNULL(m.nombreMision,'')) AS nombreLeccion <{{{><}}}>FROM personas_vuelos_automatizacion pva<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=pva.idcurso<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pva.idLeccion
Servers\aerodynamics.com.es\QueryHistory\288<|||>1<|||>2021-02-24 19:56:09|admin_aerodynamics|672|SELECT CONCAT(IFNULL(c.refCurso,''),' ',IFNULL(c.nombre,'')) AS nombreCurso,<{{{><}}}>CONCAT(IFNULL(m.refMision,''),' ',IFNULL(m.nombreMision,'')) AS nombreLeccion,<{{{><}}}>CONCAT(IFNULL(a.nomInstructor,''),' ',IFNULL(a.modelo,''),' Registration',IFNULL(a.registracion,'')) AS nombreAvion  <{{{><}}}>FROM personas_vuelos_automatizacion pva<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=pva.idcurso<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pva.idLeccion<{{{><}}}>LEFT JOIN aviones a ON a.registracion=pva.matricula
Servers\aerodynamics.com.es\QueryHistory\289<|||>1<|||>2021-02-24 19:56:16|admin_aerodynamics|156|SELECT CONCAT(IFNULL(c.refCurso,''),' ',IFNULL(c.nombre,'')) AS nombreCurso,<{{{><}}}>CONCAT(IFNULL(m.refMision,''),' ',IFNULL(m.nombreMision,'')) AS nombreLeccion,<{{{><}}}>CONCAT(IFNULL(a.nomInstructor,''),' ',IFNULL(a.modelo,''),' Registration: ',IFNULL(a.registracion,'')) AS nombreAvion  <{{{><}}}>FROM personas_vuelos_automatizacion pva<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=pva.idcurso<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pva.idLeccion<{{{><}}}>LEFT JOIN aviones a ON a.registracion=pva.matricula
Servers\aerodynamics.com.es\QueryHistory\290<|||>1<|||>2021-02-24 19:56:40|admin_aerodynamics|375|SELECT CONCAT(IFNULL(c.refCurso,''),' ',IFNULL(c.nombre,'')) AS nombreCurso,<{{{><}}}>CONCAT(IFNULL(m.refMision,''),' ',IFNULL(m.nombreMision,'')) AS nombreLeccion,<{{{><}}}>CONCAT(' Model: ',IFNULL(a.nomInstructor,''),' ',IFNULL(a.modelo,''),' Registration: ',IFNULL(a.registracion,'')) AS nombreAvion  <{{{><}}}>FROM personas_vuelos_automatizacion pva<{{{><}}}>LEFT JOIN cursos c ON c.idCurso=pva.idcurso<{{{><}}}>LEFT JOIN misiones m ON m.idMision=pva.idLeccion<{{{><}}}>LEFT JOIN aviones a ON a.registracion=pva.matricula
Servers\aerodynamics.com.es\QueryHistory\291<|||>1<|||>2021-02-25 09:56:55|admin_aerodynamics|500|select <{{{><}}}>vuelos.idReserva AS idReserva,<{{{><}}}>vuelos.idVuelo AS idVuelo,<{{{><}}}>vuelos.idCurso AS idCurso,<{{{><}}}>vuelos.DATE AS DATE,<{{{><}}}>vuelos.DEPARTUREPLACE AS DEPARTUREPLACE,<{{{><}}}>vuelos.DEPARTURETIME AS DEPARTURETIME,<{{{><}}}>vuelos.ARRIVALPLACE AS ARRIVALPLACE,<{{{><}}}>vuelos.ARRIVALTIME AS ARRIVALTIME,<{{{><}}}>vuelos.AIRCRAFTMODEL AS AIRCRAFTMODEL,<{{{><}}}>vuelos.AIRCRAFTREGISTRATION AS AIRCRAFTREGISTRATION,<{{{><}}}>vuelos.PICNAME AS PICNAME,<{{{><}}}>vuelos.REMARKS AS REMARKS,<{{{><}}}>vuelos.PILOTO AS PILOTO,<{{{><}}}>vuelos.CURSO AS CURSO,<{{{><}}}>vuelos.TOTALVUELO AS TOTALVUELO,<{{{><}}}>vuelos.TOTALVUELODAY AS TOTALVUELODAY,<{{{><}}}>vuelos.TOTALVUELONIGHT AS TOTALVUELONIGHT,<{{{><}}}>vuelos.SE AS SE,<{{{><}}}>vuelos.ME AS ME,<{{{><}}}>vuelos.XCSOLO AS XCSOLO,<{{{><}}}>vuelos.XCDUAL AS XCDUAL,<{{{><}}}>vuelos.VFR AS VFR,<{{{><}}}>vuelos.IFR AS IFR,<{{{><}}}>vuelos.IFRSIM AS IFRSIM,<{{{><}}}>vuelos.PIC AS PIC,<{{{><}}}>vuelos.COPILOT AS COPILOT,<{{{><}}}>vuelos.DUAL AS 'DUAL',<{{{><}}}>vuelos.INSTRUCTOR AS INSTRUCTOR,<{{{><}}}>vuelos.FSTD AS FSTD,<{{{><}}}>vuelos.LANDINGSDAY AS LANDINGSDAY,<{{{><}}}>vuelos.LANDINGSNIGHT AS LANDINGSNIGHT <{{{><}}}>from <{{{><}}}>(<{{{><}}}>    (select <{{{><}}}>    rv.idReserva AS idReserva,<{{{><}}}>    pva.id AS idVuelo,<{{{><}}}>    c.idCurso AS idCurso,<{{{><}}}>    date_format(pva.fecha,'%d-%m-%Y') AS DATE,<{{{><}}}>    pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>    pva.despegue AS DEPARTURETIME,<{{{><}}}>    pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>    pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>    a.modelo AS AIRCRAFTMODEL,<{{{><}}}>    a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>    if(pva.tipopiloto ='PIC',piloto.nombre,if(pva.tipoinstructor = 'PIC',instructor.nombre,'')) AS PICNAME,<{{{><}}}>    concat(ifnull(pva.comentarios,''),' PILOT NAME: ',concat(piloto.nombre,' ',if(piloto.segundoNombre is null,ifnull(piloto.apellido,''),concat(ifnull(piloto.segundoNombre,''),' ',ifnull(piloto.apellido,''))))) AS REMARKS,<{{{><}}}>    pva.idpiloto AS PILOTO,<{{{><}}}>    concat(c.refCurso,' ',c.nombre) AS CURSO,<{{{><}}}>    sec_to_time(if(a.simulador = 0,sum(pva.tiempototal),0)) AS TOTALVUELO,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeNightVFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>    sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos = '' and a.simulador = 0,time_to_sec(pva.tiempototal),0)),0)) AS SE,<{{{><}}}>    sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos <> '' and a.simulador = 0,time_to_sec(pva.tiempototal),0)),0)) AS ME,<{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto <> 'DUAL' and a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCSOLO,sec_to_time(ifnull(sum(if(pva.tipopiloto = 'DUAL' and a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador =0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto = 'PIC' and a.simulador = 0,time_to_sec(pva.tiempototal),0)),0)) AS PIC,<{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto = 'CO-PILOT' and a.simulador = 0,time_to_sec(pva.tiempototal),0)),0)) AS COPILOT, <{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto = 'DUAL' and a.simulador = 0,time_to_sec(pva.tiempototal),0)),0)) AS 'DUAL',<{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto ='INSTRUCTOR' and a.simulador = 0,time_to_sec(pva.tiempototal),0)),0)) AS INSTRUCTOR,<{{{><}}}>    sec_to_time(if(a.simulador = 1,sum(pva.tiempototal),0)) AS FSTD,sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>    sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSNIGHT <{{{><}}}>    from admin_aerodynamics.personas_vuelos_automatizacion pva <{{{><}}}>    left join admin_aerodynamics.reserva_vuelos rv on pva.idreserva = rv.idReserva<{{{><}}}>    left join admin_aerodynamics.misiones m on m.idMision = pva.idleccion <{{{><}}}>    left join admin_aerodynamics.cursos c on c.idCurso = m.idCurso <{{{><}}}>    left join admin_aerodynamics.aviones a on a.registracion = pva.matricula<{{{><}}}>    left join admin_aerodynamics.personas piloto on pva.idpiloto = piloto.idPersona <{{{><}}}>    left join admin_aerodynamics.personas instructor on pva.idinstructor = instructor.idPersona <{{{><}}}>    group by pva.id) <{{{><}}}>    union <{{{><}}}>    (select <{{{><}}}>    pa.idreserva AS idReserva,<{{{><}}}>    pva.idVuelo AS idVuelo,<{{{><}}}>    pa.idcurso AS idCurso,<{{{><}}}>    if(date_format(pva.fecha,'%d-%m-%Y') is null or date_format(pva.fecha,'%d-%m-%Y') ='00-00-0000',date_format(pa.fecha,'%d-%m-%Y'),date_format(pva.fecha,'%d-%m-%Y')) AS DATE,<{{{><}}}>    pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>    pva.despegue AS DEPARTURETIME,<{{{><}}}>    pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>    pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>    a.modelo AS AIRCRAFTMODEL,<{{{><}}}>    a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>    if(pa.tipopiloto = 'PIC',piloto.nombre,if(pa.tipoinstructor = 'PIC',instructor.nombre,'')) AS PICNAME,<{{{><}}}>    concat(ifnull(pa.comentarios,''),' PILOT NAME: ',concat(piloto.nombre,' ',if(piloto.segundoNombre is null,ifnull(piloto.apellido,''),concat(ifnull(piloto.segundoNombre,''),' ',ifnull(piloto.apellido,''))))) AS REMARKS,<{{{><}}}>    pa.idpiloto AS PILOTO,<{{{><}}}>    concat(c.refCurso,' ',c.nombre) AS CURSO,<{{{><}}}>    sec_to_time(if(rv.simulador = 0,sum(pva.tiempototal),0)) AS TOTALVUELO,<{{{><}}}>    sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>    sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeNightVFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>    sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos = '' and a.simulador = 0,time_to_sec(pva.tiempototal),0)),0)) AS SE,<{{{><}}}>    sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos <> '' and a.simulador = 0,time_to_sec(pva.tiempototal),0)),0)) AS ME,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto <> 'DUAL' and a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'DUAL' and a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'PIC' and a.simulador = 0,time_to_sec(pva.tiempototal),0)),0)) AS PIC,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'CO-PILOT' and a.simulador = 0,time_to_sec(pva.tiempototal),0)),0)) AS COPILOT,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'DUAL' and a.simulador = 0,time_to_sec(pva.tiempototal),0)),0)) AS 'DUAL',<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'INSTRUCTOR' and a.simulador = 0,time_to_sec(pva.tiempototal),0)),0)) AS INSTRUCTOR,<{{{><}}}>    sec_to_time(if(a.simulador = 1,sum(pva.tiempototal),0)) AS FSTD,<{{{><}}}>    sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>    sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSNIGHT <{{{><}}}>    from admin_aerodynamics.personas_rutas_vuelos_automatizacion pva <{{{><}}}>    left join admin_aerodynamics.personas_vuelos_automatizacion pa on pa.id = pva.idVuelo <{{{><}}}>    left join admin_aerodynamics.reserva_vuelos rv on pa.idreserva = rv.idReserva <{{{><}}}>    left join admin_aerodynamics.misiones m on m.idMision = pa.idleccion <{{{><}}}>    left join admin_aerodynamics.cursos c on c.idCurso = m.idCurso <{{{><}}}>    left join admin_aerodynamics.aviones a on a.registracion = pa.matricula <{{{><}}}>    left join admin_aerodynamics.personas piloto on pa.idpiloto = piloto.idPersona <{{{><}}}>    left join admin_aerodynamics.personas instructor on pa.idinstructor = instructor.idPersona <{{{><}}}>    group by pva.id)) <{{{><}}}>    vuelos order by str_to_date(vuelos.DATE,'%d-%m-%Y') desc,vuelos.ARRIVALTIME desc
Servers\aerodynamics.com.es\QueryHistory\292<|||>1<|||>2021-02-25 09:59:42|admin_aerodynamics|297|select <{{{><}}}>vuelos.idReserva AS idReserva,<{{{><}}}>vuelos.idVuelo AS idVuelo,<{{{><}}}>vuelos.idCurso AS idCurso,<{{{><}}}>vuelos.DATE AS DATE,<{{{><}}}>vuelos.DEPARTUREPLACE AS DEPARTUREPLACE,<{{{><}}}>vuelos.DEPARTURETIME AS DEPARTURETIME,<{{{><}}}>vuelos.ARRIVALPLACE AS ARRIVALPLACE,<{{{><}}}>vuelos.ARRIVALTIME AS ARRIVALTIME,<{{{><}}}>vuelos.AIRCRAFTMODEL AS AIRCRAFTMODEL,<{{{><}}}>vuelos.AIRCRAFTREGISTRATION AS AIRCRAFTREGISTRATION,<{{{><}}}>vuelos.PICNAME AS PICNAME,<{{{><}}}>vuelos.REMARKS AS REMARKS,<{{{><}}}>vuelos.PILOTO AS PILOTO,<{{{><}}}>vuelos.CURSO AS CURSO,<{{{><}}}>vuelos.TOTALVUELO AS TOTALVUELO,<{{{><}}}>vuelos.TOTALVUELODAY AS TOTALVUELODAY,<{{{><}}}>vuelos.TOTALVUELONIGHT AS TOTALVUELONIGHT,<{{{><}}}>vuelos.SE AS SE,<{{{><}}}>vuelos.ME AS ME,<{{{><}}}>vuelos.XCSOLO AS XCSOLO,<{{{><}}}>vuelos.XCDUAL AS XCDUAL,<{{{><}}}>vuelos.VFR AS VFR,<{{{><}}}>vuelos.IFR AS IFR,<{{{><}}}>vuelos.IFRSIM AS IFRSIM,<{{{><}}}>vuelos.PIC AS PIC,<{{{><}}}>vuelos.COPILOT AS COPILOT,<{{{><}}}>vuelos.DUAL AS 'DUAL',<{{{><}}}>vuelos.INSTRUCTOR AS INSTRUCTOR,<{{{><}}}>vuelos.FSTD AS FSTD,<{{{><}}}>vuelos.LANDINGSDAY AS LANDINGSDAY,<{{{><}}}>vuelos.LANDINGSNIGHT AS LANDINGSNIGHT <{{{><}}}>from <{{{><}}}>(<{{{><}}}>    (select <{{{><}}}>    rv.idReserva AS idReserva,<{{{><}}}>    pva.id AS idVuelo,<{{{><}}}>    c.idCurso AS idCurso,<{{{><}}}>    date_format(pva.fecha,'%d-%m-%Y') AS DATE,<{{{><}}}>    pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>    pva.despegue AS DEPARTURETIME,<{{{><}}}>    pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>    pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>    a.modelo AS AIRCRAFTMODEL,<{{{><}}}>    a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>    if(pva.tipopiloto ='PIC',piloto.nombre,if(pva.tipoinstructor = 'PIC',instructor.nombre,'')) AS PICNAME,<{{{><}}}>    concat(ifnull(pva.comentarios,''),' PILOT NAME: ',concat(piloto.nombre,' ',if(piloto.segundoNombre is null,ifnull(piloto.apellido,''),concat(ifnull(piloto.segundoNombre,''),' ',ifnull(piloto.apellido,''))))) AS REMARKS,<{{{><}}}>    pva.idpiloto AS PILOTO,<{{{><}}}>    concat(c.refCurso,' ',c.nombre) AS CURSO,<{{{><}}}>    sec_to_time(if(a.simulador = 0,sum(pva.block),0)) AS TOTALVUELO,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeNightVFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>    sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos = '' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS SE,<{{{><}}}>    sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos <> '' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS ME,<{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto <> 'DUAL' and a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCSOLO,sec_to_time(ifnull(sum(if(pva.tipopiloto = 'DUAL' and a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador =0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto = 'PIC' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS PIC,<{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto = 'CO-PILOT' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS COPILOT, <{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto = 'DUAL' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS 'DUAL',<{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto ='INSTRUCTOR' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS INSTRUCTOR,<{{{><}}}>    sec_to_time(if(a.simulador = 1,sum(pva.block),0)) AS FSTD,sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>    sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSNIGHT <{{{><}}}>    from admin_aerodynamics.personas_vuelos_automatizacion pva <{{{><}}}>    left join admin_aerodynamics.reserva_vuelos rv on pva.idreserva = rv.idReserva<{{{><}}}>    left join admin_aerodynamics.misiones m on m.idMision = pva.idleccion <{{{><}}}>    left join admin_aerodynamics.cursos c on c.idCurso = m.idCurso <{{{><}}}>    left join admin_aerodynamics.aviones a on a.registracion = pva.matricula<{{{><}}}>    left join admin_aerodynamics.personas piloto on pva.idpiloto = piloto.idPersona <{{{><}}}>    left join admin_aerodynamics.personas instructor on pva.idinstructor = instructor.idPersona <{{{><}}}>    group by pva.id) <{{{><}}}>    union <{{{><}}}>    (select <{{{><}}}>    pa.idreserva AS idReserva,<{{{><}}}>    pva.idVuelo AS idVuelo,<{{{><}}}>    pa.idcurso AS idCurso,<{{{><}}}>    if(date_format(pva.fecha,'%d-%m-%Y') is null or date_format(pva.fecha,'%d-%m-%Y') ='00-00-0000',date_format(pa.fecha,'%d-%m-%Y'),date_format(pva.fecha,'%d-%m-%Y')) AS DATE,<{{{><}}}>    pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>    pva.despegue AS DEPARTURETIME,<{{{><}}}>    pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>    pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>    a.modelo AS AIRCRAFTMODEL,<{{{><}}}>    a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>    if(pa.tipopiloto = 'PIC',piloto.nombre,if(pa.tipoinstructor = 'PIC',instructor.nombre,'')) AS PICNAME,<{{{><}}}>    concat(ifnull(pa.comentarios,''),' PILOT NAME: ',concat(piloto.nombre,' ',if(piloto.segundoNombre is null,ifnull(piloto.apellido,''),concat(ifnull(piloto.segundoNombre,''),' ',ifnull(piloto.apellido,''))))) AS REMARKS,<{{{><}}}>    pa.idpiloto AS PILOTO,<{{{><}}}>    concat(c.refCurso,' ',c.nombre) AS CURSO,<{{{><}}}>    sec_to_time(if(rv.simulador = 0,sum(pva.block),0)) AS TOTALVUELO,<{{{><}}}>    sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>    sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeNightVFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>    sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos = '' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS SE,<{{{><}}}>    sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos <> '' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS ME,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto <> 'DUAL' and a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'DUAL' and a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'PIC' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS PIC,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'CO-PILOT' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS COPILOT,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'DUAL' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS 'DUAL',<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'INSTRUCTOR' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS INSTRUCTOR,<{{{><}}}>    sec_to_time(if(a.simulador = 1,sum(pva.block),0)) AS FSTD,<{{{><}}}>    sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>    sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSNIGHT <{{{><}}}>    from admin_aerodynamics.personas_rutas_vuelos_automatizacion pva <{{{><}}}>    left join admin_aerodynamics.personas_vuelos_automatizacion pa on pa.id = pva.idVuelo <{{{><}}}>    left join admin_aerodynamics.reserva_vuelos rv on pa.idreserva = rv.idReserva <{{{><}}}>    left join admin_aerodynamics.misiones m on m.idMision = pa.idleccion <{{{><}}}>    left join admin_aerodynamics.cursos c on c.idCurso = m.idCurso <{{{><}}}>    left join admin_aerodynamics.aviones a on a.registracion = pa.matricula <{{{><}}}>    left join admin_aerodynamics.personas piloto on pa.idpiloto = piloto.idPersona <{{{><}}}>    left join admin_aerodynamics.personas instructor on pa.idinstructor = instructor.idPersona <{{{><}}}>    group by pva.id)) <{{{><}}}>    vuelos order by str_to_date(vuelos.DATE,'%d-%m-%Y') desc,vuelos.ARRIVALTIME desc
Servers\aerodynamics.com.es\QueryHistory\293<|||>1<|||>2021-02-25 10:05:59|admin_aerodynamics|406|select <{{{><}}}>vuelos.idReserva AS idReserva,<{{{><}}}>vuelos.idVuelo AS idVuelo,<{{{><}}}>vuelos.idCurso AS idCurso,<{{{><}}}>vuelos.DATE AS DATE,<{{{><}}}>vuelos.DEPARTUREPLACE AS DEPARTUREPLACE,<{{{><}}}>vuelos.DEPARTURETIME AS DEPARTURETIME,<{{{><}}}>vuelos.ARRIVALPLACE AS ARRIVALPLACE,<{{{><}}}>vuelos.ARRIVALTIME AS ARRIVALTIME,<{{{><}}}>vuelos.AIRCRAFTMODEL AS AIRCRAFTMODEL,<{{{><}}}>vuelos.AIRCRAFTREGISTRATION AS AIRCRAFTREGISTRATION,<{{{><}}}>vuelos.PICNAME AS PICNAME,<{{{><}}}>vuelos.REMARKS AS REMARKS,<{{{><}}}>vuelos.PILOTO AS PILOTO,<{{{><}}}>vuelos.CURSO AS CURSO,<{{{><}}}>vuelos.TOTALVUELO AS TOTALVUELO,<{{{><}}}>vuelos.TOTALVUELODAY AS TOTALVUELODAY,<{{{><}}}>vuelos.TOTALVUELONIGHT AS TOTALVUELONIGHT,<{{{><}}}>vuelos.SE AS SE,<{{{><}}}>vuelos.ME AS ME,<{{{><}}}>vuelos.XCSOLO AS XCSOLO,<{{{><}}}>vuelos.XCDUAL AS XCDUAL,<{{{><}}}>vuelos.VFR AS VFR,<{{{><}}}>vuelos.IFR AS IFR,<{{{><}}}>vuelos.IFRSIM AS IFRSIM,<{{{><}}}>vuelos.PIC AS PIC,<{{{><}}}>vuelos.COPILOT AS COPILOT,<{{{><}}}>vuelos.DUAL AS 'DUAL',<{{{><}}}>vuelos.INSTRUCTOR AS INSTRUCTOR,<{{{><}}}>vuelos.FSTD AS FSTD,<{{{><}}}>vuelos.LANDINGSDAY AS LANDINGSDAY,<{{{><}}}>vuelos.LANDINGSNIGHT AS LANDINGSNIGHT <{{{><}}}>from <{{{><}}}>(<{{{><}}}>    (select <{{{><}}}>    rv.idReserva AS idReserva,<{{{><}}}>    pva.id AS idVuelo,<{{{><}}}>    c.idCurso AS idCurso,<{{{><}}}>    date_format(pva.fecha,'%d-%m-%Y') AS DATE,<{{{><}}}>    pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>    pva.despegue AS DEPARTURETIME,<{{{><}}}>    pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>    pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>    a.modelo AS AIRCRAFTMODEL,<{{{><}}}>    a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>    if(pva.tipopiloto ='PIC',piloto.nombre,if(pva.tipoinstructor = 'PIC',instructor.nombre,'')) AS PICNAME,<{{{><}}}>    concat(ifnull(pva.comentarios,''),' PILOT NAME: ',concat(piloto.nombre,' ',if(piloto.segundoNombre is null,ifnull(piloto.apellido,''),concat(ifnull(piloto.segundoNombre,''),' ',ifnull(piloto.apellido,''))))) AS REMARKS,<{{{><}}}>    pva.idpiloto AS PILOTO,<{{{><}}}>    concat(c.refCurso,' ',c.nombre) AS CURSO,<{{{><}}}>    sec_to_time(if(a.simulador = 0,pva.block,0)) AS TOTALVUELO,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeNightVFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>    sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos = '' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS SE,<{{{><}}}>    sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos <> '' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS ME,<{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto <> 'DUAL' and a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCSOLO,sec_to_time(ifnull(sum(if(pva.tipopiloto = 'DUAL' and a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador =0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto = 'PIC' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS PIC,<{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto = 'CO-PILOT' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS COPILOT, <{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto = 'DUAL' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS 'DUAL',<{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto ='INSTRUCTOR' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS INSTRUCTOR,<{{{><}}}>    sec_to_time(if(a.simulador = 1,sum(pva.block),0)) AS FSTD,sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>    sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSNIGHT <{{{><}}}>    from admin_aerodynamics.personas_vuelos_automatizacion pva <{{{><}}}>    left join admin_aerodynamics.reserva_vuelos rv on pva.idreserva = rv.idReserva<{{{><}}}>    left join admin_aerodynamics.misiones m on m.idMision = pva.idleccion <{{{><}}}>    left join admin_aerodynamics.cursos c on c.idCurso = m.idCurso <{{{><}}}>    left join admin_aerodynamics.aviones a on a.registracion = pva.matricula<{{{><}}}>    left join admin_aerodynamics.personas piloto on pva.idpiloto = piloto.idPersona <{{{><}}}>    left join admin_aerodynamics.personas instructor on pva.idinstructor = instructor.idPersona <{{{><}}}>    group by pva.id) <{{{><}}}>    union <{{{><}}}>    (select <{{{><}}}>    pa.idreserva AS idReserva,<{{{><}}}>    pva.idVuelo AS idVuelo,<{{{><}}}>    pa.idcurso AS idCurso,<{{{><}}}>    if(date_format(pva.fecha,'%d-%m-%Y') is null or date_format(pva.fecha,'%d-%m-%Y') ='00-00-0000',date_format(pa.fecha,'%d-%m-%Y'),date_format(pva.fecha,'%d-%m-%Y')) AS DATE,<{{{><}}}>    pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>    pva.despegue AS DEPARTURETIME,<{{{><}}}>    pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>    pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>    a.modelo AS AIRCRAFTMODEL,<{{{><}}}>    a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>    if(pa.tipopiloto = 'PIC',piloto.nombre,if(pa.tipoinstructor = 'PIC',instructor.nombre,'')) AS PICNAME,<{{{><}}}>    concat(ifnull(pa.comentarios,''),' PILOT NAME: ',concat(piloto.nombre,' ',if(piloto.segundoNombre is null,ifnull(piloto.apellido,''),concat(ifnull(piloto.segundoNombre,''),' ',ifnull(piloto.apellido,''))))) AS REMARKS,<{{{><}}}>    pa.idpiloto AS PILOTO,<{{{><}}}>    concat(c.refCurso,' ',c.nombre) AS CURSO,<{{{><}}}>    sec_to_time(if(rv.simulador = 0,sum(pva.block),0)) AS TOTALVUELO,<{{{><}}}>    sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>    sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeNightVFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>    sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos = '' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS SE,<{{{><}}}>    sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos <> '' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS ME,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto <> 'DUAL' and a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'DUAL' and a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'PIC' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS PIC,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'CO-PILOT' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS COPILOT,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'DUAL' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS 'DUAL',<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'INSTRUCTOR' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS INSTRUCTOR,<{{{><}}}>    sec_to_time(if(a.simulador = 1,sum(pva.block),0)) AS FSTD,<{{{><}}}>    sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>    sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSNIGHT <{{{><}}}>    from admin_aerodynamics.personas_rutas_vuelos_automatizacion pva <{{{><}}}>    left join admin_aerodynamics.personas_vuelos_automatizacion pa on pa.id = pva.idVuelo <{{{><}}}>    left join admin_aerodynamics.reserva_vuelos rv on pa.idreserva = rv.idReserva <{{{><}}}>    left join admin_aerodynamics.misiones m on m.idMision = pa.idleccion <{{{><}}}>    left join admin_aerodynamics.cursos c on c.idCurso = m.idCurso <{{{><}}}>    left join admin_aerodynamics.aviones a on a.registracion = pa.matricula <{{{><}}}>    left join admin_aerodynamics.personas piloto on pa.idpiloto = piloto.idPersona <{{{><}}}>    left join admin_aerodynamics.personas instructor on pa.idinstructor = instructor.idPersona <{{{><}}}>    group by pva.id)) <{{{><}}}>    vuelos order by str_to_date(vuelos.DATE,'%d-%m-%Y') desc,vuelos.ARRIVALTIME desc
Servers\aerodynamics.com.es\QueryHistory\294<|||>1<|||>2021-02-25 10:06:37|admin_aerodynamics|297|select <{{{><}}}>vuelos.idReserva AS idReserva,<{{{><}}}>vuelos.idVuelo AS idVuelo,<{{{><}}}>vuelos.idCurso AS idCurso,<{{{><}}}>vuelos.DATE AS DATE,<{{{><}}}>vuelos.DEPARTUREPLACE AS DEPARTUREPLACE,<{{{><}}}>vuelos.DEPARTURETIME AS DEPARTURETIME,<{{{><}}}>vuelos.ARRIVALPLACE AS ARRIVALPLACE,<{{{><}}}>vuelos.ARRIVALTIME AS ARRIVALTIME,<{{{><}}}>vuelos.AIRCRAFTMODEL AS AIRCRAFTMODEL,<{{{><}}}>vuelos.AIRCRAFTREGISTRATION AS AIRCRAFTREGISTRATION,<{{{><}}}>vuelos.PICNAME AS PICNAME,<{{{><}}}>vuelos.REMARKS AS REMARKS,<{{{><}}}>vuelos.PILOTO AS PILOTO,<{{{><}}}>vuelos.CURSO AS CURSO,<{{{><}}}>vuelos.TOTALVUELO AS TOTALVUELO,<{{{><}}}>vuelos.TOTALVUELODAY AS TOTALVUELODAY,<{{{><}}}>vuelos.TOTALVUELONIGHT AS TOTALVUELONIGHT,<{{{><}}}>vuelos.SE AS SE,<{{{><}}}>vuelos.ME AS ME,<{{{><}}}>vuelos.XCSOLO AS XCSOLO,<{{{><}}}>vuelos.XCDUAL AS XCDUAL,<{{{><}}}>vuelos.VFR AS VFR,<{{{><}}}>vuelos.IFR AS IFR,<{{{><}}}>vuelos.IFRSIM AS IFRSIM,<{{{><}}}>vuelos.PIC AS PIC,<{{{><}}}>vuelos.COPILOT AS COPILOT,<{{{><}}}>vuelos.DUAL AS 'DUAL',<{{{><}}}>vuelos.INSTRUCTOR AS INSTRUCTOR,<{{{><}}}>vuelos.FSTD AS FSTD,<{{{><}}}>vuelos.LANDINGSDAY AS LANDINGSDAY,<{{{><}}}>vuelos.LANDINGSNIGHT AS LANDINGSNIGHT <{{{><}}}>from <{{{><}}}>(<{{{><}}}>    (select <{{{><}}}>    rv.idReserva AS idReserva,<{{{><}}}>    pva.id AS idVuelo,<{{{><}}}>    c.idCurso AS idCurso,<{{{><}}}>    date_format(pva.fecha,'%d-%m-%Y') AS DATE,<{{{><}}}>    pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>    pva.despegue AS DEPARTURETIME,<{{{><}}}>    pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>    pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>    a.modelo AS AIRCRAFTMODEL,<{{{><}}}>    a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>    if(pva.tipopiloto ='PIC',piloto.nombre,if(pva.tipoinstructor = 'PIC',instructor.nombre,'')) AS PICNAME,<{{{><}}}>    concat(ifnull(pva.comentarios,''),' PILOT NAME: ',concat(piloto.nombre,' ',if(piloto.segundoNombre is null,ifnull(piloto.apellido,''),concat(ifnull(piloto.segundoNombre,''),' ',ifnull(piloto.apellido,''))))) AS REMARKS,<{{{><}}}>    pva.idpiloto AS PILOTO,<{{{><}}}>    concat(c.refCurso,' ',c.nombre) AS CURSO,<{{{><}}}>    sec_to_time(if(a.simulador = 0,SUM(pva.block),0)) AS TOTALVUELO,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeNightVFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>    sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos = '' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS SE,<{{{><}}}>    sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos <> '' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS ME,<{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto <> 'DUAL' and a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCSOLO,sec_to_time(ifnull(sum(if(pva.tipopiloto = 'DUAL' and a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador =0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto = 'PIC' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS PIC,<{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto = 'CO-PILOT' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS COPILOT, <{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto = 'DUAL' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS 'DUAL',<{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto ='INSTRUCTOR' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS INSTRUCTOR,<{{{><}}}>    sec_to_time(if(a.simulador = 1,sum(pva.block),0)) AS FSTD,sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>    sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSNIGHT <{{{><}}}>    from admin_aerodynamics.personas_vuelos_automatizacion pva <{{{><}}}>    left join admin_aerodynamics.reserva_vuelos rv on pva.idreserva = rv.idReserva<{{{><}}}>    left join admin_aerodynamics.misiones m on m.idMision = pva.idleccion <{{{><}}}>    left join admin_aerodynamics.cursos c on c.idCurso = m.idCurso <{{{><}}}>    left join admin_aerodynamics.aviones a on a.registracion = pva.matricula<{{{><}}}>    left join admin_aerodynamics.personas piloto on pva.idpiloto = piloto.idPersona <{{{><}}}>    left join admin_aerodynamics.personas instructor on pva.idinstructor = instructor.idPersona <{{{><}}}>    group by pva.id) <{{{><}}}>    union <{{{><}}}>    (select <{{{><}}}>    pa.idreserva AS idReserva,<{{{><}}}>    pva.idVuelo AS idVuelo,<{{{><}}}>    pa.idcurso AS idCurso,<{{{><}}}>    if(date_format(pva.fecha,'%d-%m-%Y') is null or date_format(pva.fecha,'%d-%m-%Y') ='00-00-0000',date_format(pa.fecha,'%d-%m-%Y'),date_format(pva.fecha,'%d-%m-%Y')) AS DATE,<{{{><}}}>    pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>    pva.despegue AS DEPARTURETIME,<{{{><}}}>    pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>    pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>    a.modelo AS AIRCRAFTMODEL,<{{{><}}}>    a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>    if(pa.tipopiloto = 'PIC',piloto.nombre,if(pa.tipoinstructor = 'PIC',instructor.nombre,'')) AS PICNAME,<{{{><}}}>    concat(ifnull(pa.comentarios,''),' PILOT NAME: ',concat(piloto.nombre,' ',if(piloto.segundoNombre is null,ifnull(piloto.apellido,''),concat(ifnull(piloto.segundoNombre,''),' ',ifnull(piloto.apellido,''))))) AS REMARKS,<{{{><}}}>    pa.idpiloto AS PILOTO,<{{{><}}}>    concat(c.refCurso,' ',c.nombre) AS CURSO,<{{{><}}}>    sec_to_time(if(rv.simulador = 0,sum(pva.block),0)) AS TOTALVUELO,<{{{><}}}>    sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>    sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeNightVFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>    sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos = '' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS SE,<{{{><}}}>    sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos <> '' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS ME,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto <> 'DUAL' and a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'DUAL' and a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'PIC' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS PIC,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'CO-PILOT' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS COPILOT,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'DUAL' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS 'DUAL',<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'INSTRUCTOR' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS INSTRUCTOR,<{{{><}}}>    sec_to_time(if(a.simulador = 1,sum(pva.block),0)) AS FSTD,<{{{><}}}>    sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>    sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSNIGHT <{{{><}}}>    from admin_aerodynamics.personas_rutas_vuelos_automatizacion pva <{{{><}}}>    left join admin_aerodynamics.personas_vuelos_automatizacion pa on pa.id = pva.idVuelo <{{{><}}}>    left join admin_aerodynamics.reserva_vuelos rv on pa.idreserva = rv.idReserva <{{{><}}}>    left join admin_aerodynamics.misiones m on m.idMision = pa.idleccion <{{{><}}}>    left join admin_aerodynamics.cursos c on c.idCurso = m.idCurso <{{{><}}}>    left join admin_aerodynamics.aviones a on a.registracion = pa.matricula <{{{><}}}>    left join admin_aerodynamics.personas piloto on pa.idpiloto = piloto.idPersona <{{{><}}}>    left join admin_aerodynamics.personas instructor on pa.idinstructor = instructor.idPersona <{{{><}}}>    group by pva.id)) <{{{><}}}>    vuelos order by str_to_date(vuelos.DATE,'%d-%m-%Y') desc,vuelos.ARRIVALTIME desc
Servers\aerodynamics.com.es\QueryHistory\295<|||>1<|||>2021-02-25 10:10:19|admin_aerodynamics|579|select <{{{><}}}>vuelos.idReserva AS idReserva,<{{{><}}}>vuelos.idVuelo AS idVuelo,<{{{><}}}>vuelos.idCurso AS idCurso,<{{{><}}}>vuelos.DATE AS DATE,<{{{><}}}>vuelos.DEPARTUREPLACE AS DEPARTUREPLACE,<{{{><}}}>vuelos.DEPARTURETIME AS DEPARTURETIME,<{{{><}}}>vuelos.ARRIVALPLACE AS ARRIVALPLACE,<{{{><}}}>vuelos.ARRIVALTIME AS ARRIVALTIME,<{{{><}}}>vuelos.AIRCRAFTMODEL AS AIRCRAFTMODEL,<{{{><}}}>vuelos.AIRCRAFTREGISTRATION AS AIRCRAFTREGISTRATION,<{{{><}}}>vuelos.PICNAME AS PICNAME,<{{{><}}}>vuelos.REMARKS AS REMARKS,<{{{><}}}>vuelos.PILOTO AS PILOTO,<{{{><}}}>vuelos.CURSO AS CURSO,<{{{><}}}>vuelos.TOTALVUELO AS TOTALVUELO,<{{{><}}}>vuelos.TOTALVUELODAY AS TOTALVUELODAY,<{{{><}}}>vuelos.TOTALVUELONIGHT AS TOTALVUELONIGHT,<{{{><}}}>vuelos.SE AS SE,<{{{><}}}>vuelos.ME AS ME,<{{{><}}}>vuelos.XCSOLO AS XCSOLO,<{{{><}}}>vuelos.XCDUAL AS XCDUAL,<{{{><}}}>vuelos.VFR AS VFR,<{{{><}}}>vuelos.IFR AS IFR,<{{{><}}}>vuelos.IFRSIM AS IFRSIM,<{{{><}}}>vuelos.PIC AS PIC,<{{{><}}}>vuelos.COPILOT AS COPILOT,<{{{><}}}>vuelos.DUAL AS 'DUAL',<{{{><}}}>vuelos.INSTRUCTOR AS INSTRUCTOR,<{{{><}}}>vuelos.FSTD AS FSTD,<{{{><}}}>vuelos.LANDINGSDAY AS LANDINGSDAY,<{{{><}}}>vuelos.LANDINGSNIGHT AS LANDINGSNIGHT <{{{><}}}>from <{{{><}}}>(<{{{><}}}>    (select <{{{><}}}>    pva.idReserva AS idReserva,<{{{><}}}>    pva.id AS idVuelo,<{{{><}}}>    c.idCurso AS idCurso,<{{{><}}}>    date_format(pva.fecha,'%d-%m-%Y') AS DATE,<{{{><}}}>    pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>    pva.despegue AS DEPARTURETIME,<{{{><}}}>    pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>    pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>    a.modelo AS AIRCRAFTMODEL,<{{{><}}}>    a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>    if(pva.tipopiloto ='PIC',piloto.nombre,if(pva.tipoinstructor = 'PIC',instructor.nombre,'')) AS PICNAME,<{{{><}}}>    concat(ifnull(pva.comentarios,''),' PILOT NAME: ',concat(piloto.nombre,' ',if(piloto.segundoNombre is null,ifnull(piloto.apellido,''),concat(ifnull(piloto.segundoNombre,''),' ',ifnull(piloto.apellido,''))))) AS REMARKS,<{{{><}}}>    pva.idpiloto AS PILOTO,<{{{><}}}>    concat(c.refCurso,' ',c.nombre) AS CURSO,<{{{><}}}>    sec_to_time(if(a.simulador = 0 AND pva.id=pva.id,SUM(pva.block),0)) AS TOTALVUELO,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeNightVFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>    sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos = '' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS SE,<{{{><}}}>    sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos <> '' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS ME,<{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto <> 'DUAL' and a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCSOLO,sec_to_time(ifnull(sum(if(pva.tipopiloto = 'DUAL' and a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador =0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto = 'PIC' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS PIC,<{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto = 'CO-PILOT' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS COPILOT, <{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto = 'DUAL' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS 'DUAL',<{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto ='INSTRUCTOR' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS INSTRUCTOR,<{{{><}}}>    sec_to_time(if(a.simulador = 1,sum(pva.block),0)) AS FSTD,sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>    sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSNIGHT <{{{><}}}>    from admin_aerodynamics.personas_vuelos_automatizacion pva <{{{><}}}>    left join admin_aerodynamics.reserva_vuelos rv on pva.idreserva = rv.idReserva<{{{><}}}>    left join admin_aerodynamics.misiones m on m.idMision = pva.idleccion <{{{><}}}>    left join admin_aerodynamics.cursos c on c.idCurso = m.idCurso <{{{><}}}>    left join admin_aerodynamics.aviones a on a.registracion = pva.matricula<{{{><}}}>    left join admin_aerodynamics.personas piloto on pva.idpiloto = piloto.idPersona <{{{><}}}>    left join admin_aerodynamics.personas instructor on pva.idinstructor = instructor.idPersona <{{{><}}}>    group by pva.id) <{{{><}}}>    union <{{{><}}}>    (select <{{{><}}}>    pa.idreserva AS idReserva,<{{{><}}}>    pva.idVuelo AS idVuelo,<{{{><}}}>    pa.idcurso AS idCurso,<{{{><}}}>    if(date_format(pva.fecha,'%d-%m-%Y') is null or date_format(pva.fecha,'%d-%m-%Y') ='00-00-0000',date_format(pa.fecha,'%d-%m-%Y'),date_format(pva.fecha,'%d-%m-%Y')) AS DATE,<{{{><}}}>    pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>    pva.despegue AS DEPARTURETIME,<{{{><}}}>    pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>    pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>    a.modelo AS AIRCRAFTMODEL,<{{{><}}}>    a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>    if(pa.tipopiloto = 'PIC',piloto.nombre,if(pa.tipoinstructor = 'PIC',instructor.nombre,'')) AS PICNAME,<{{{><}}}>    concat(ifnull(pa.comentarios,''),' PILOT NAME: ',concat(piloto.nombre,' ',if(piloto.segundoNombre is null,ifnull(piloto.apellido,''),concat(ifnull(piloto.segundoNombre,''),' ',ifnull(piloto.apellido,''))))) AS REMARKS,<{{{><}}}>    pa.idpiloto AS PILOTO,<{{{><}}}>    concat(c.refCurso,' ',c.nombre) AS CURSO,<{{{><}}}>    sec_to_time(if(rv.simulador = 0,sum(pva.block),0)) AS TOTALVUELO,<{{{><}}}>    sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>    sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeNightVFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>    sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos = '' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS SE,<{{{><}}}>    sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos <> '' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS ME,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto <> 'DUAL' and a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'DUAL' and a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'PIC' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS PIC,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'CO-PILOT' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS COPILOT,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'DUAL' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS 'DUAL',<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'INSTRUCTOR' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS INSTRUCTOR,<{{{><}}}>    sec_to_time(if(a.simulador = 1,sum(pva.block),0)) AS FSTD,<{{{><}}}>    sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>    sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSNIGHT <{{{><}}}>    from admin_aerodynamics.personas_rutas_vuelos_automatizacion pva <{{{><}}}>    left join admin_aerodynamics.personas_vuelos_automatizacion pa on pa.id = pva.idVuelo <{{{><}}}>    left join admin_aerodynamics.reserva_vuelos rv on pa.idreserva = rv.idReserva <{{{><}}}>    left join admin_aerodynamics.misiones m on m.idMision = pa.idleccion <{{{><}}}>    left join admin_aerodynamics.cursos c on c.idCurso = m.idCurso <{{{><}}}>    left join admin_aerodynamics.aviones a on a.registracion = pa.matricula <{{{><}}}>    left join admin_aerodynamics.personas piloto on pa.idpiloto = piloto.idPersona <{{{><}}}>    left join admin_aerodynamics.personas instructor on pa.idinstructor = instructor.idPersona <{{{><}}}>    group by pva.id)) <{{{><}}}>    vuelos order by str_to_date(vuelos.DATE,'%d-%m-%Y') desc,vuelos.ARRIVALTIME desc
Servers\aerodynamics.com.es\QueryHistory\296<|||>1<|||>2021-02-25 10:11:04|admin_aerodynamics|437|select <{{{><}}}>vuelos.idReserva AS idReserva,<{{{><}}}>vuelos.idVuelo AS idVuelo,<{{{><}}}>vuelos.idCurso AS idCurso,<{{{><}}}>vuelos.DATE AS DATE,<{{{><}}}>vuelos.DEPARTUREPLACE AS DEPARTUREPLACE,<{{{><}}}>vuelos.DEPARTURETIME AS DEPARTURETIME,<{{{><}}}>vuelos.ARRIVALPLACE AS ARRIVALPLACE,<{{{><}}}>vuelos.ARRIVALTIME AS ARRIVALTIME,<{{{><}}}>vuelos.AIRCRAFTMODEL AS AIRCRAFTMODEL,<{{{><}}}>vuelos.AIRCRAFTREGISTRATION AS AIRCRAFTREGISTRATION,<{{{><}}}>vuelos.PICNAME AS PICNAME,<{{{><}}}>vuelos.REMARKS AS REMARKS,<{{{><}}}>vuelos.PILOTO AS PILOTO,<{{{><}}}>vuelos.CURSO AS CURSO,<{{{><}}}>vuelos.TOTALVUELO AS TOTALVUELO,<{{{><}}}>vuelos.TOTALVUELODAY AS TOTALVUELODAY,<{{{><}}}>vuelos.TOTALVUELONIGHT AS TOTALVUELONIGHT,<{{{><}}}>vuelos.SE AS SE,<{{{><}}}>vuelos.ME AS ME,<{{{><}}}>vuelos.XCSOLO AS XCSOLO,<{{{><}}}>vuelos.XCDUAL AS XCDUAL,<{{{><}}}>vuelos.VFR AS VFR,<{{{><}}}>vuelos.IFR AS IFR,<{{{><}}}>vuelos.IFRSIM AS IFRSIM,<{{{><}}}>vuelos.PIC AS PIC,<{{{><}}}>vuelos.COPILOT AS COPILOT,<{{{><}}}>vuelos.DUAL AS 'DUAL',<{{{><}}}>vuelos.INSTRUCTOR AS INSTRUCTOR,<{{{><}}}>vuelos.FSTD AS FSTD,<{{{><}}}>vuelos.LANDINGSDAY AS LANDINGSDAY,<{{{><}}}>vuelos.LANDINGSNIGHT AS LANDINGSNIGHT <{{{><}}}>from <{{{><}}}>(<{{{><}}}>    (select <{{{><}}}>    pva.idReserva AS idReserva,<{{{><}}}>    pva.id AS idVuelo,<{{{><}}}>    c.idCurso AS idCurso,<{{{><}}}>    date_format(pva.fecha,'%d-%m-%Y') AS DATE,<{{{><}}}>    pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>    pva.despegue AS DEPARTURETIME,<{{{><}}}>    pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>    pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>    a.modelo AS AIRCRAFTMODEL,<{{{><}}}>    a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>    if(pva.tipopiloto ='PIC',piloto.nombre,if(pva.tipoinstructor = 'PIC',instructor.nombre,'')) AS PICNAME,<{{{><}}}>    concat(ifnull(pva.comentarios,''),' PILOT NAME: ',concat(piloto.nombre,' ',if(piloto.segundoNombre is null,ifnull(piloto.apellido,''),concat(ifnull(piloto.segundoNombre,''),' ',ifnull(piloto.apellido,''))))) AS REMARKS,<{{{><}}}>    pva.idpiloto AS PILOTO,<{{{><}}}>    concat(c.refCurso,' ',c.nombre) AS CURSO,<{{{><}}}>    sec_to_time(if(a.simulador = 0 AND pva.id=pva.id,SUM(pva.block),0)) AS TOTALVUELO,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeNightVFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>    sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos = '' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS SE,<{{{><}}}>    sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos <> '' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS ME,<{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto <> 'DUAL' and a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCSOLO,sec_to_time(ifnull(sum(if(pva.tipopiloto = 'DUAL' and a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador =0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto = 'PIC' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS PIC,<{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto = 'CO-PILOT' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS COPILOT, <{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto = 'DUAL' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS 'DUAL',<{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto ='INSTRUCTOR' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS INSTRUCTOR,<{{{><}}}>    sec_to_time(if(a.simulador = 1,sum(pva.block),0)) AS FSTD,sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>    sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSNIGHT <{{{><}}}>    from admin_aerodynamics.personas_vuelos_automatizacion pva <{{{><}}}>    left join admin_aerodynamics.reserva_vuelos rv on pva.idreserva = rv.idReserva<{{{><}}}>    left join admin_aerodynamics.misiones m on m.idMision = pva.idleccion <{{{><}}}>    left join admin_aerodynamics.cursos c on c.idCurso = m.idCurso <{{{><}}}>    left join admin_aerodynamics.aviones a on a.registracion = pva.matricula<{{{><}}}>    left join admin_aerodynamics.personas piloto on pva.idpiloto = piloto.idPersona <{{{><}}}>    left join admin_aerodynamics.personas instructor on pva.idinstructor = instructor.idPersona <{{{><}}}>    group by pva.id) <{{{><}}}>    union <{{{><}}}>    (select <{{{><}}}>    pa.idreserva AS idReserva,<{{{><}}}>    pva.idVuelo AS idVuelo,<{{{><}}}>    pa.idcurso AS idCurso,<{{{><}}}>    if(date_format(pva.fecha,'%d-%m-%Y') is null or date_format(pva.fecha,'%d-%m-%Y') ='00-00-0000',date_format(pa.fecha,'%d-%m-%Y'),date_format(pva.fecha,'%d-%m-%Y')) AS DATE,<{{{><}}}>    pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>    pva.despegue AS DEPARTURETIME,<{{{><}}}>    pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>    pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>    a.modelo AS AIRCRAFTMODEL,<{{{><}}}>    a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>    if(pa.tipopiloto = 'PIC',piloto.nombre,if(pa.tipoinstructor = 'PIC',instructor.nombre,'')) AS PICNAME,<{{{><}}}>    concat(ifnull(pa.comentarios,''),' PILOT NAME: ',concat(piloto.nombre,' ',if(piloto.segundoNombre is null,ifnull(piloto.apellido,''),concat(ifnull(piloto.segundoNombre,''),' ',ifnull(piloto.apellido,''))))) AS REMARKS,<{{{><}}}>    pa.idpiloto AS PILOTO,<{{{><}}}>    concat(c.refCurso,' ',c.nombre) AS CURSO,<{{{><}}}>    sec_to_time(if(rv.simulador = 0 AND pva.id=pva.id ,sum(pva.block),0)) AS TOTALVUELO,<{{{><}}}>    sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>    sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeNightVFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>    sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos = '' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS SE,<{{{><}}}>    sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos <> '' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS ME,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto <> 'DUAL' and a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'DUAL' and a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'PIC' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS PIC,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'CO-PILOT' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS COPILOT,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'DUAL' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS 'DUAL',<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'INSTRUCTOR' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS INSTRUCTOR,<{{{><}}}>    sec_to_time(if(a.simulador = 1,sum(pva.block),0)) AS FSTD,<{{{><}}}>    sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>    sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSNIGHT <{{{><}}}>    from admin_aerodynamics.personas_rutas_vuelos_automatizacion pva <{{{><}}}>    left join admin_aerodynamics.personas_vuelos_automatizacion pa on pa.id = pva.idVuelo <{{{><}}}>    left join admin_aerodynamics.reserva_vuelos rv on pa.idreserva = rv.idReserva <{{{><}}}>    left join admin_aerodynamics.misiones m on m.idMision = pa.idleccion <{{{><}}}>    left join admin_aerodynamics.cursos c on c.idCurso = m.idCurso <{{{><}}}>    left join admin_aerodynamics.aviones a on a.registracion = pa.matricula <{{{><}}}>    left join admin_aerodynamics.personas piloto on pa.idpiloto = piloto.idPersona <{{{><}}}>    left join admin_aerodynamics.personas instructor on pa.idinstructor = instructor.idPersona <{{{><}}}>    group by pva.id)) <{{{><}}}>    vuelos order by str_to_date(vuelos.DATE,'%d-%m-%Y') desc,vuelos.ARRIVALTIME desc
Servers\aerodynamics.com.es\QueryHistory\298<|||>1<|||>2021-02-25 10:12:03|admin_aerodynamics|297|select <{{{><}}}>vuelos.idReserva AS idReserva,<{{{><}}}>vuelos.idVuelo AS idVuelo,<{{{><}}}>vuelos.idCurso AS idCurso,<{{{><}}}>vuelos.DATE AS DATE,<{{{><}}}>vuelos.DEPARTUREPLACE AS DEPARTUREPLACE,<{{{><}}}>vuelos.DEPARTURETIME AS DEPARTURETIME,<{{{><}}}>vuelos.ARRIVALPLACE AS ARRIVALPLACE,<{{{><}}}>vuelos.ARRIVALTIME AS ARRIVALTIME,<{{{><}}}>vuelos.AIRCRAFTMODEL AS AIRCRAFTMODEL,<{{{><}}}>vuelos.AIRCRAFTREGISTRATION AS AIRCRAFTREGISTRATION,<{{{><}}}>vuelos.PICNAME AS PICNAME,<{{{><}}}>vuelos.REMARKS AS REMARKS,<{{{><}}}>vuelos.PILOTO AS PILOTO,<{{{><}}}>vuelos.CURSO AS CURSO,<{{{><}}}>vuelos.TOTALVUELO AS TOTALVUELO,<{{{><}}}>vuelos.TOTALVUELODAY AS TOTALVUELODAY,<{{{><}}}>vuelos.TOTALVUELONIGHT AS TOTALVUELONIGHT,<{{{><}}}>vuelos.SE AS SE,<{{{><}}}>vuelos.ME AS ME,<{{{><}}}>vuelos.XCSOLO AS XCSOLO,<{{{><}}}>vuelos.XCDUAL AS XCDUAL,<{{{><}}}>vuelos.VFR AS VFR,<{{{><}}}>vuelos.IFR AS IFR,<{{{><}}}>vuelos.IFRSIM AS IFRSIM,<{{{><}}}>vuelos.PIC AS PIC,<{{{><}}}>vuelos.COPILOT AS COPILOT,<{{{><}}}>vuelos.DUAL AS 'DUAL',<{{{><}}}>vuelos.INSTRUCTOR AS INSTRUCTOR,<{{{><}}}>vuelos.FSTD AS FSTD,<{{{><}}}>vuelos.LANDINGSDAY AS LANDINGSDAY,<{{{><}}}>vuelos.LANDINGSNIGHT AS LANDINGSNIGHT <{{{><}}}>from <{{{><}}}>(<{{{><}}}>    (select <{{{><}}}>    pva.idReserva AS idReserva,<{{{><}}}>    pva.id AS idVuelo,<{{{><}}}>    c.idCurso AS idCurso,<{{{><}}}>    date_format(pva.fecha,'%d-%m-%Y') AS DATE,<{{{><}}}>    pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>    pva.despegue AS DEPARTURETIME,<{{{><}}}>    pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>    pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>    a.modelo AS AIRCRAFTMODEL,<{{{><}}}>    a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>    if(pva.tipopiloto ='PIC',piloto.nombre,if(pva.tipoinstructor = 'PIC',instructor.nombre,'')) AS PICNAME,<{{{><}}}>    concat(ifnull(pva.comentarios,''),' PILOT NAME: ',concat(piloto.nombre,' ',if(piloto.segundoNombre is null,ifnull(piloto.apellido,''),concat(ifnull(piloto.segundoNombre,''),' ',ifnull(piloto.apellido,''))))) AS REMARKS,<{{{><}}}>    pva.idpiloto AS PILOTO,<{{{><}}}>    concat(c.refCurso,' ',c.nombre) AS CURSO,<{{{><}}}>    sec_to_time(if(a.simulador = 0 AND pva.id=pva.id,SUM(pva.block),0)) AS TOTALVUELO,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeNightVFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>    sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos = '' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS SE,<{{{><}}}>    sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos <> '' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS ME,<{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto <> 'DUAL' and a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCSOLO,sec_to_time(ifnull(sum(if(pva.tipopiloto = 'DUAL' and a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador =0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto = 'PIC' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS PIC,<{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto = 'CO-PILOT' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS COPILOT, <{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto = 'DUAL' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS 'DUAL',<{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto ='INSTRUCTOR' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS INSTRUCTOR,<{{{><}}}>    sec_to_time(if(a.simulador = 1,sum(pva.block),0)) AS FSTD,sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>    sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSNIGHT <{{{><}}}>    from admin_aerodynamics.personas_vuelos_automatizacion pva <{{{><}}}>    left join admin_aerodynamics.reserva_vuelos rv on pva.idreserva = rv.idReserva<{{{><}}}>    left join admin_aerodynamics.misiones m on m.idMision = pva.idleccion <{{{><}}}>    left join admin_aerodynamics.cursos c on c.idCurso = m.idCurso <{{{><}}}>    left join admin_aerodynamics.aviones a on a.registracion = pva.matricula<{{{><}}}>    left join admin_aerodynamics.personas piloto on pva.idpiloto = piloto.idPersona <{{{><}}}>    left join admin_aerodynamics.personas instructor on pva.idinstructor = instructor.idPersona <{{{><}}}>    group by pva.id) <{{{><}}}>    ) <{{{><}}}>    vuelos order by str_to_date(vuelos.DATE,'%d-%m-%Y') desc,vuelos.ARRIVALTIME desc
Servers\aerodynamics.com.es\QueryHistory\299<|||>1<|||>2021-02-25 10:12:14|admin_aerodynamics|343|select <{{{><}}}>vuelos.idReserva AS idReserva,<{{{><}}}>vuelos.idVuelo AS idVuelo,<{{{><}}}>vuelos.idCurso AS idCurso,<{{{><}}}>vuelos.DATE AS DATE,<{{{><}}}>vuelos.DEPARTUREPLACE AS DEPARTUREPLACE,<{{{><}}}>vuelos.DEPARTURETIME AS DEPARTURETIME,<{{{><}}}>vuelos.ARRIVALPLACE AS ARRIVALPLACE,<{{{><}}}>vuelos.ARRIVALTIME AS ARRIVALTIME,<{{{><}}}>vuelos.AIRCRAFTMODEL AS AIRCRAFTMODEL,<{{{><}}}>vuelos.AIRCRAFTREGISTRATION AS AIRCRAFTREGISTRATION,<{{{><}}}>vuelos.PICNAME AS PICNAME,<{{{><}}}>vuelos.REMARKS AS REMARKS,<{{{><}}}>vuelos.PILOTO AS PILOTO,<{{{><}}}>vuelos.CURSO AS CURSO,<{{{><}}}>vuelos.TOTALVUELO AS TOTALVUELO,<{{{><}}}>vuelos.TOTALVUELODAY AS TOTALVUELODAY,<{{{><}}}>vuelos.TOTALVUELONIGHT AS TOTALVUELONIGHT,<{{{><}}}>vuelos.SE AS SE,<{{{><}}}>vuelos.ME AS ME,<{{{><}}}>vuelos.XCSOLO AS XCSOLO,<{{{><}}}>vuelos.XCDUAL AS XCDUAL,<{{{><}}}>vuelos.VFR AS VFR,<{{{><}}}>vuelos.IFR AS IFR,<{{{><}}}>vuelos.IFRSIM AS IFRSIM,<{{{><}}}>vuelos.PIC AS PIC,<{{{><}}}>vuelos.COPILOT AS COPILOT,<{{{><}}}>vuelos.DUAL AS 'DUAL',<{{{><}}}>vuelos.INSTRUCTOR AS INSTRUCTOR,<{{{><}}}>vuelos.FSTD AS FSTD,<{{{><}}}>vuelos.LANDINGSDAY AS LANDINGSDAY,<{{{><}}}>vuelos.LANDINGSNIGHT AS LANDINGSNIGHT <{{{><}}}>from <{{{><}}}>(<{{{><}}}>    (select <{{{><}}}>    pva.idReserva AS idReserva,<{{{><}}}>    pva.id AS idVuelo,<{{{><}}}>    c.idCurso AS idCurso,<{{{><}}}>    date_format(pva.fecha,'%d-%m-%Y') AS DATE,<{{{><}}}>    pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>    pva.despegue AS DEPARTURETIME,<{{{><}}}>    pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>    pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>    a.modelo AS AIRCRAFTMODEL,<{{{><}}}>    a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>    if(pva.tipopiloto ='PIC',piloto.nombre,if(pva.tipoinstructor = 'PIC',instructor.nombre,'')) AS PICNAME,<{{{><}}}>    concat(ifnull(pva.comentarios,''),' PILOT NAME: ',concat(piloto.nombre,' ',if(piloto.segundoNombre is null,ifnull(piloto.apellido,''),concat(ifnull(piloto.segundoNombre,''),' ',ifnull(piloto.apellido,''))))) AS REMARKS,<{{{><}}}>    pva.idpiloto AS PILOTO,<{{{><}}}>    concat(c.refCurso,' ',c.nombre) AS CURSO,<{{{><}}}>    sec_to_time(if(a.simulador = 0 AND pva.id=pva.id,SUM(pva.block),0)) AS TOTALVUELO,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeNightVFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>    sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos = '' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS SE,<{{{><}}}>    sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos <> '' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS ME,<{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto <> 'DUAL' and a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCSOLO,sec_to_time(ifnull(sum(if(pva.tipopiloto = 'DUAL' and a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador =0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto = 'PIC' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS PIC,<{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto = 'CO-PILOT' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS COPILOT, <{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto = 'DUAL' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS 'DUAL',<{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto ='INSTRUCTOR' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS INSTRUCTOR,<{{{><}}}>    sec_to_time(if(a.simulador = 1,sum(pva.block),0)) AS FSTD,sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>    sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSNIGHT <{{{><}}}>    from admin_aerodynamics.personas_vuelos_automatizacion pva <{{{><}}}>    left join admin_aerodynamics.reserva_vuelos rv on pva.idreserva = rv.idReserva<{{{><}}}>    left join admin_aerodynamics.misiones m on m.idMision = pva.idleccion <{{{><}}}>    left join admin_aerodynamics.cursos c on c.idCurso = m.idCurso <{{{><}}}>    left join admin_aerodynamics.aviones a on a.registracion = pva.matricula<{{{><}}}>    left join admin_aerodynamics.personas piloto on pva.idpiloto = piloto.idPersona <{{{><}}}>    left join admin_aerodynamics.personas instructor on pva.idinstructor = instructor.idPersona <{{{><}}}>    group by pva.id) <{{{><}}}>    union <{{{><}}}>    (select <{{{><}}}>    pa.idreserva AS idReserva,<{{{><}}}>    pva.idVuelo AS idVuelo,<{{{><}}}>    pa.idcurso AS idCurso,<{{{><}}}>    if(date_format(pva.fecha,'%d-%m-%Y') is null or date_format(pva.fecha,'%d-%m-%Y') ='00-00-0000',date_format(pa.fecha,'%d-%m-%Y'),date_format(pva.fecha,'%d-%m-%Y')) AS DATE,<{{{><}}}>    pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>    pva.despegue AS DEPARTURETIME,<{{{><}}}>    pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>    pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>    a.modelo AS AIRCRAFTMODEL,<{{{><}}}>    a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>    if(pa.tipopiloto = 'PIC',piloto.nombre,if(pa.tipoinstructor = 'PIC',instructor.nombre,'')) AS PICNAME,<{{{><}}}>    concat(ifnull(pa.comentarios,''),' PILOT NAME: ',concat(piloto.nombre,' ',if(piloto.segundoNombre is null,ifnull(piloto.apellido,''),concat(ifnull(piloto.segundoNombre,''),' ',ifnull(piloto.apellido,''))))) AS REMARKS,<{{{><}}}>    pa.idpiloto AS PILOTO,<{{{><}}}>    concat(c.refCurso,' ',c.nombre) AS CURSO,<{{{><}}}>    sec_to_time(if(rv.simulador = 0 AND pa.id=pva.idVuelo ,sum(pva.block),0)) AS TOTALVUELO,<{{{><}}}>    sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>    sec_to_time(ifnull(if(rv.simulador = 0,sum(time_to_sec(pva.timeNightVFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>    sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos = '' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS SE,<{{{><}}}>    sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos <> '' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS ME,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto <> 'DUAL' and a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'DUAL' and a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'PIC' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS PIC,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'CO-PILOT' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS COPILOT,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'DUAL' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS 'DUAL',<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'INSTRUCTOR' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS INSTRUCTOR,<{{{><}}}>    sec_to_time(if(a.simulador = 1,sum(pva.block),0)) AS FSTD,<{{{><}}}>    sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>    sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSNIGHT <{{{><}}}>    from admin_aerodynamics.personas_rutas_vuelos_automatizacion pva <{{{><}}}>    left join admin_aerodynamics.personas_vuelos_automatizacion pa on pa.id = pva.idVuelo <{{{><}}}>    left join admin_aerodynamics.reserva_vuelos rv on pa.idreserva = rv.idReserva <{{{><}}}>    left join admin_aerodynamics.misiones m on m.idMision = pa.idleccion <{{{><}}}>    left join admin_aerodynamics.cursos c on c.idCurso = m.idCurso <{{{><}}}>    left join admin_aerodynamics.aviones a on a.registracion = pa.matricula <{{{><}}}>    left join admin_aerodynamics.personas piloto on pa.idpiloto = piloto.idPersona <{{{><}}}>    left join admin_aerodynamics.personas instructor on pa.idinstructor = instructor.idPersona <{{{><}}}>    group by pva.id)) <{{{><}}}>    vuelos order by str_to_date(vuelos.DATE,'%d-%m-%Y') desc,vuelos.ARRIVALTIME desc
Servers\aerodynamics.com.es\QueryHistory\297<|||>1<|||>2021-02-25 10:13:44|admin_aerodynamics|797|select <{{{><}}}>vuelos.idReserva AS idReserva,<{{{><}}}>vuelos.idVuelo AS idVuelo,<{{{><}}}>vuelos.idCurso AS idCurso,<{{{><}}}>vuelos.DATE AS DATE,<{{{><}}}>vuelos.DEPARTUREPLACE AS DEPARTUREPLACE,<{{{><}}}>vuelos.DEPARTURETIME AS DEPARTURETIME,<{{{><}}}>vuelos.ARRIVALPLACE AS ARRIVALPLACE,<{{{><}}}>vuelos.ARRIVALTIME AS ARRIVALTIME,<{{{><}}}>vuelos.AIRCRAFTMODEL AS AIRCRAFTMODEL,<{{{><}}}>vuelos.AIRCRAFTREGISTRATION AS AIRCRAFTREGISTRATION,<{{{><}}}>vuelos.PICNAME AS PICNAME,<{{{><}}}>vuelos.REMARKS AS REMARKS,<{{{><}}}>vuelos.PILOTO AS PILOTO,<{{{><}}}>vuelos.CURSO AS CURSO,<{{{><}}}>vuelos.TOTALVUELO AS TOTALVUELO,<{{{><}}}>vuelos.TOTALVUELODAY AS TOTALVUELODAY,<{{{><}}}>vuelos.TOTALVUELONIGHT AS TOTALVUELONIGHT,<{{{><}}}>vuelos.SE AS SE,<{{{><}}}>vuelos.ME AS ME,<{{{><}}}>vuelos.XCSOLO AS XCSOLO,<{{{><}}}>vuelos.XCDUAL AS XCDUAL,<{{{><}}}>vuelos.VFR AS VFR,<{{{><}}}>vuelos.IFR AS IFR,<{{{><}}}>vuelos.IFRSIM AS IFRSIM,<{{{><}}}>vuelos.PIC AS PIC,<{{{><}}}>vuelos.COPILOT AS COPILOT,<{{{><}}}>vuelos.DUAL AS 'DUAL',<{{{><}}}>vuelos.INSTRUCTOR AS INSTRUCTOR,<{{{><}}}>vuelos.FSTD AS FSTD,<{{{><}}}>vuelos.LANDINGSDAY AS LANDINGSDAY,<{{{><}}}>vuelos.LANDINGSNIGHT AS LANDINGSNIGHT <{{{><}}}>from <{{{><}}}>(<{{{><}}}>    (select <{{{><}}}>    pva.idReserva AS idReserva,<{{{><}}}>    pva.id AS idVuelo,<{{{><}}}>    c.idCurso AS idCurso,<{{{><}}}>    date_format(pva.fecha,'%d-%m-%Y') AS DATE,<{{{><}}}>    pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>    pva.despegue AS DEPARTURETIME,<{{{><}}}>    pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>    pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>    a.modelo AS AIRCRAFTMODEL,<{{{><}}}>    a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>    if(pva.tipopiloto ='PIC',piloto.nombre,if(pva.tipoinstructor = 'PIC',instructor.nombre,'')) AS PICNAME,<{{{><}}}>    concat(ifnull(pva.comentarios,''),' PILOT NAME: ',concat(piloto.nombre,' ',if(piloto.segundoNombre is null,ifnull(piloto.apellido,''),concat(ifnull(piloto.segundoNombre,''),' ',ifnull(piloto.apellido,''))))) AS REMARKS,<{{{><}}}>    pva.idpiloto AS PILOTO,<{{{><}}}>    concat(c.refCurso,' ',c.nombre) AS CURSO,<{{{><}}}>    sec_to_time(if(a.simulador = 0 AND pva.id=pva.id,SUM(pva.block),0)) AS TOTALVUELO,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeNightVFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>    sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos = '' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS SE,<{{{><}}}>    sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos <> '' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS ME,<{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto <> 'DUAL' and a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCSOLO,sec_to_time(ifnull(sum(if(pva.tipopiloto = 'DUAL' and a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador =0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto = 'PIC' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS PIC,<{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto = 'CO-PILOT' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS COPILOT, <{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto = 'DUAL' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS 'DUAL',<{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto ='INSTRUCTOR' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS INSTRUCTOR,<{{{><}}}>    sec_to_time(if(a.simulador = 1,sum(pva.block),0)) AS FSTD,sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>    sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSNIGHT <{{{><}}}>    from admin_aerodynamics.personas_vuelos_automatizacion pva <{{{><}}}>    left join admin_aerodynamics.misiones m on m.idMision = pva.idleccion <{{{><}}}>    left join admin_aerodynamics.cursos c on c.idCurso = m.idCurso <{{{><}}}>    left join admin_aerodynamics.aviones a on a.registracion = pva.matricula<{{{><}}}>    left join admin_aerodynamics.personas piloto on pva.idpiloto = piloto.idPersona <{{{><}}}>    left join admin_aerodynamics.personas instructor on pva.idinstructor = instructor.idPersona <{{{><}}}>    group by pva.id) <{{{><}}}>    union <{{{><}}}>    (select <{{{><}}}>    pa.idreserva AS idReserva,<{{{><}}}>    pva.idVuelo AS idVuelo,<{{{><}}}>    pa.idcurso AS idCurso,<{{{><}}}>    if(date_format(pva.fecha,'%d-%m-%Y') is null or date_format(pva.fecha,'%d-%m-%Y') ='00-00-0000',date_format(pa.fecha,'%d-%m-%Y'),date_format(pva.fecha,'%d-%m-%Y')) AS DATE,<{{{><}}}>    pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>    pva.despegue AS DEPARTURETIME,<{{{><}}}>    pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>    pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>    a.modelo AS AIRCRAFTMODEL,<{{{><}}}>    a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>    if(pa.tipopiloto = 'PIC',piloto.nombre,if(pa.tipoinstructor = 'PIC',instructor.nombre,'')) AS PICNAME,<{{{><}}}>    concat(ifnull(pa.comentarios,''),' PILOT NAME: ',concat(piloto.nombre,' ',if(piloto.segundoNombre is null,ifnull(piloto.apellido,''),concat(ifnull(piloto.segundoNombre,''),' ',ifnull(piloto.apellido,''))))) AS REMARKS,<{{{><}}}>    pa.idpiloto AS PILOTO,<{{{><}}}>    concat(c.refCurso,' ',c.nombre) AS CURSO,<{{{><}}}>    sec_to_time(if(a.simulador = 0 AND pa.id=pva.idVuelo ,sum(pva.block),0)) AS TOTALVUELO,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeNightVFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>    sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos = '' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS SE,<{{{><}}}>    sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos <> '' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS ME,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto <> 'DUAL' and a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'DUAL' and a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'PIC' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS PIC,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'CO-PILOT' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS COPILOT,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'DUAL' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS 'DUAL',<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'INSTRUCTOR' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS INSTRUCTOR,<{{{><}}}>    sec_to_time(if(a.simulador = 1,sum(pva.block),0)) AS FSTD,<{{{><}}}>    sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>    sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSNIGHT <{{{><}}}>    from admin_aerodynamics.personas_rutas_vuelos_automatizacion pva <{{{><}}}>    left join admin_aerodynamics.personas_vuelos_automatizacion pa on pa.id = pva.idVuelo <{{{><}}}>    left join admin_aerodynamics.misiones m on m.idMision = pa.idleccion <{{{><}}}>    left join admin_aerodynamics.cursos c on c.idCurso = m.idCurso <{{{><}}}>    left join admin_aerodynamics.aviones a on a.registracion = pa.matricula <{{{><}}}>    left join admin_aerodynamics.personas piloto on pa.idpiloto = piloto.idPersona <{{{><}}}>    left join admin_aerodynamics.personas instructor on pa.idinstructor = instructor.idPersona <{{{><}}}>    group by pva.id)) <{{{><}}}>    vuelos order by str_to_date(vuelos.DATE,'%d-%m-%Y') desc,vuelos.ARRIVALTIME desc
Servers\aerodynamics.com.es\QueryHistory\300<|||>1<|||>2021-02-25 10:15:07|admin_aerodynamics|657|select <{{{><}}}>vuelos.idReserva AS idReserva,<{{{><}}}>vuelos.idVuelo AS idVuelo,<{{{><}}}>vuelos.idCurso AS idCurso,<{{{><}}}>vuelos.DATE AS DATE,<{{{><}}}>vuelos.DEPARTUREPLACE AS DEPARTUREPLACE,<{{{><}}}>vuelos.DEPARTURETIME AS DEPARTURETIME,<{{{><}}}>vuelos.ARRIVALPLACE AS ARRIVALPLACE,<{{{><}}}>vuelos.ARRIVALTIME AS ARRIVALTIME,<{{{><}}}>vuelos.AIRCRAFTMODEL AS AIRCRAFTMODEL,<{{{><}}}>vuelos.AIRCRAFTREGISTRATION AS AIRCRAFTREGISTRATION,<{{{><}}}>vuelos.PICNAME AS PICNAME,<{{{><}}}>vuelos.REMARKS AS REMARKS,<{{{><}}}>vuelos.PILOTO AS PILOTO,<{{{><}}}>vuelos.CURSO AS CURSO,<{{{><}}}>vuelos.TOTALVUELO AS TOTALVUELO,<{{{><}}}>vuelos.TOTALVUELODAY AS TOTALVUELODAY,<{{{><}}}>vuelos.TOTALVUELONIGHT AS TOTALVUELONIGHT,<{{{><}}}>vuelos.SE AS SE,<{{{><}}}>vuelos.ME AS ME,<{{{><}}}>vuelos.XCSOLO AS XCSOLO,<{{{><}}}>vuelos.XCDUAL AS XCDUAL,<{{{><}}}>vuelos.VFR AS VFR,<{{{><}}}>vuelos.IFR AS IFR,<{{{><}}}>vuelos.IFRSIM AS IFRSIM,<{{{><}}}>vuelos.PIC AS PIC,<{{{><}}}>vuelos.COPILOT AS COPILOT,<{{{><}}}>vuelos.DUAL AS 'DUAL',<{{{><}}}>vuelos.INSTRUCTOR AS INSTRUCTOR,<{{{><}}}>vuelos.FSTD AS FSTD,<{{{><}}}>vuelos.LANDINGSDAY AS LANDINGSDAY,<{{{><}}}>vuelos.LANDINGSNIGHT AS LANDINGSNIGHT <{{{><}}}>from <{{{><}}}>(<{{{><}}}>    (select <{{{><}}}>    pva.idReserva AS idReserva,<{{{><}}}>    pva.id AS idVuelo,<{{{><}}}>    c.idCurso AS idCurso,<{{{><}}}>    date_format(pva.fecha,'%d-%m-%Y') AS DATE,<{{{><}}}>    pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>    pva.despegue AS DEPARTURETIME,<{{{><}}}>    pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>    pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>    a.modelo AS AIRCRAFTMODEL,<{{{><}}}>    a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>    if(pva.tipopiloto ='PIC',piloto.nombre,if(pva.tipoinstructor = 'PIC',instructor.nombre,'')) AS PICNAME,<{{{><}}}>    concat(ifnull(pva.comentarios,''),' PILOT NAME: ',concat(piloto.nombre,' ',if(piloto.segundoNombre is null,ifnull(piloto.apellido,''),concat(ifnull(piloto.segundoNombre,''),' ',ifnull(piloto.apellido,''))))) AS REMARKS,<{{{><}}}>    pva.idpiloto AS PILOTO,<{{{><}}}>    concat(c.refCurso,' ',c.nombre) AS CURSO,<{{{><}}}>    if(a.simulador = 0 AND pva.id=pva.id,pva.block,0) AS TOTALVUELO,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeNightVFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>    sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos = '' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS SE,<{{{><}}}>    sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos <> '' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS ME,<{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto <> 'DUAL' and a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCSOLO,sec_to_time(ifnull(sum(if(pva.tipopiloto = 'DUAL' and a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador =0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto = 'PIC' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS PIC,<{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto = 'CO-PILOT' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS COPILOT, <{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto = 'DUAL' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS 'DUAL',<{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto ='INSTRUCTOR' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS INSTRUCTOR,<{{{><}}}>    sec_to_time(if(a.simulador = 1,sum(pva.block),0)) AS FSTD,sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>    sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSNIGHT <{{{><}}}>    from admin_aerodynamics.personas_vuelos_automatizacion pva <{{{><}}}>    left join admin_aerodynamics.misiones m on m.idMision = pva.idleccion <{{{><}}}>    left join admin_aerodynamics.cursos c on c.idCurso = m.idCurso <{{{><}}}>    left join admin_aerodynamics.aviones a on a.registracion = pva.matricula<{{{><}}}>    left join admin_aerodynamics.personas piloto on pva.idpiloto = piloto.idPersona <{{{><}}}>    left join admin_aerodynamics.personas instructor on pva.idinstructor = instructor.idPersona <{{{><}}}>    group by pva.id) <{{{><}}}>    union <{{{><}}}>    (select <{{{><}}}>    pa.idreserva AS idReserva,<{{{><}}}>    pva.idVuelo AS idVuelo,<{{{><}}}>    pa.idcurso AS idCurso,<{{{><}}}>    if(date_format(pva.fecha,'%d-%m-%Y') is null or date_format(pva.fecha,'%d-%m-%Y') ='00-00-0000',date_format(pa.fecha,'%d-%m-%Y'),date_format(pva.fecha,'%d-%m-%Y')) AS DATE,<{{{><}}}>    pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>    pva.despegue AS DEPARTURETIME,<{{{><}}}>    pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>    pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>    a.modelo AS AIRCRAFTMODEL,<{{{><}}}>    a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>    if(pa.tipopiloto = 'PIC',piloto.nombre,if(pa.tipoinstructor = 'PIC',instructor.nombre,'')) AS PICNAME,<{{{><}}}>    concat(ifnull(pa.comentarios,''),' PILOT NAME: ',concat(piloto.nombre,' ',if(piloto.segundoNombre is null,ifnull(piloto.apellido,''),concat(ifnull(piloto.segundoNombre,''),' ',ifnull(piloto.apellido,''))))) AS REMARKS,<{{{><}}}>    pa.idpiloto AS PILOTO,<{{{><}}}>    concat(c.refCurso,' ',c.nombre) AS CURSO,<{{{><}}}>    sec_to_time(if(a.simulador = 0 AND pa.id=pva.idVuelo ,sum(pva.block),0)) AS TOTALVUELO,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeNightVFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>    sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos = '' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS SE,<{{{><}}}>    sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos <> '' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS ME,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto <> 'DUAL' and a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'DUAL' and a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'PIC' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS PIC,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'CO-PILOT' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS COPILOT,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'DUAL' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS 'DUAL',<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'INSTRUCTOR' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS INSTRUCTOR,<{{{><}}}>    sec_to_time(if(a.simulador = 1,sum(pva.block),0)) AS FSTD,<{{{><}}}>    sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>    sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSNIGHT <{{{><}}}>    from admin_aerodynamics.personas_rutas_vuelos_automatizacion pva <{{{><}}}>    left join admin_aerodynamics.personas_vuelos_automatizacion pa on pa.id = pva.idVuelo <{{{><}}}>    left join admin_aerodynamics.misiones m on m.idMision = pa.idleccion <{{{><}}}>    left join admin_aerodynamics.cursos c on c.idCurso = m.idCurso <{{{><}}}>    left join admin_aerodynamics.aviones a on a.registracion = pa.matricula <{{{><}}}>    left join admin_aerodynamics.personas piloto on pa.idpiloto = piloto.idPersona <{{{><}}}>    left join admin_aerodynamics.personas instructor on pa.idinstructor = instructor.idPersona <{{{><}}}>    group by pva.id)) <{{{><}}}>    vuelos order by str_to_date(vuelos.DATE,'%d-%m-%Y') desc,vuelos.ARRIVALTIME desc
Servers\aerodynamics.com.es\QueryHistory\301<|||>1<|||>2021-02-25 10:17:04|admin_aerodynamics|359|select <{{{><}}}>vuelos.idReserva AS idReserva,<{{{><}}}>vuelos.idVuelo AS idVuelo,<{{{><}}}>vuelos.idCurso AS idCurso,<{{{><}}}>vuelos.DATE AS DATE,<{{{><}}}>vuelos.DEPARTUREPLACE AS DEPARTUREPLACE,<{{{><}}}>vuelos.DEPARTURETIME AS DEPARTURETIME,<{{{><}}}>vuelos.ARRIVALPLACE AS ARRIVALPLACE,<{{{><}}}>vuelos.ARRIVALTIME AS ARRIVALTIME,<{{{><}}}>vuelos.AIRCRAFTMODEL AS AIRCRAFTMODEL,<{{{><}}}>vuelos.AIRCRAFTREGISTRATION AS AIRCRAFTREGISTRATION,<{{{><}}}>vuelos.PICNAME AS PICNAME,<{{{><}}}>vuelos.REMARKS AS REMARKS,<{{{><}}}>vuelos.PILOTO AS PILOTO,<{{{><}}}>vuelos.CURSO AS CURSO,<{{{><}}}>vuelos.TOTALVUELO AS TOTALVUELO,<{{{><}}}>vuelos.TOTALVUELODAY AS TOTALVUELODAY,<{{{><}}}>vuelos.TOTALVUELONIGHT AS TOTALVUELONIGHT,<{{{><}}}>vuelos.SE AS SE,<{{{><}}}>vuelos.ME AS ME,<{{{><}}}>vuelos.XCSOLO AS XCSOLO,<{{{><}}}>vuelos.XCDUAL AS XCDUAL,<{{{><}}}>vuelos.VFR AS VFR,<{{{><}}}>vuelos.IFR AS IFR,<{{{><}}}>vuelos.IFRSIM AS IFRSIM,<{{{><}}}>vuelos.PIC AS PIC,<{{{><}}}>vuelos.COPILOT AS COPILOT,<{{{><}}}>vuelos.DUAL AS 'DUAL',<{{{><}}}>vuelos.INSTRUCTOR AS INSTRUCTOR,<{{{><}}}>vuelos.FSTD AS FSTD,<{{{><}}}>vuelos.LANDINGSDAY AS LANDINGSDAY,<{{{><}}}>vuelos.LANDINGSNIGHT AS LANDINGSNIGHT <{{{><}}}>from <{{{><}}}>(<{{{><}}}>    (select <{{{><}}}>    pva.idReserva AS idReserva,<{{{><}}}>    pva.id AS idVuelo,<{{{><}}}>    c.idCurso AS idCurso,<{{{><}}}>    date_format(pva.fecha,'%d-%m-%Y') AS DATE,<{{{><}}}>    pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>    pva.despegue AS DEPARTURETIME,<{{{><}}}>    pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>    pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>    a.modelo AS AIRCRAFTMODEL,<{{{><}}}>    a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>    if(pva.tipopiloto ='PIC',piloto.nombre,if(pva.tipoinstructor = 'PIC',instructor.nombre,'')) AS PICNAME,<{{{><}}}>    concat(ifnull(pva.comentarios,''),' PILOT NAME: ',concat(piloto.nombre,' ',if(piloto.segundoNombre is null,ifnull(piloto.apellido,''),concat(ifnull(piloto.segundoNombre,''),' ',ifnull(piloto.apellido,''))))) AS REMARKS,<{{{><}}}>    pva.idpiloto AS PILOTO,<{{{><}}}>    concat(c.refCurso,' ',c.nombre) AS CURSO,<{{{><}}}>    if(a.simulador = 0 AND pva.id=pva.id,pva.block,0) AS TOTALVUELO,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeNightVFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>    sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos = '' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS SE,<{{{><}}}>    sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos <> '' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS ME,<{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto <> 'DUAL' and a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCSOLO,sec_to_time(ifnull(sum(if(pva.tipopiloto = 'DUAL' and a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador =0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto = 'PIC' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS PIC,<{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto = 'CO-PILOT' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS COPILOT, <{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto = 'DUAL' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS 'DUAL',<{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto ='INSTRUCTOR' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS INSTRUCTOR,<{{{><}}}>    if(a.simulador = 1,pva.block,0) AS FSTD,<{{{><}}}>	 sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>    sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSNIGHT <{{{><}}}>    from admin_aerodynamics.personas_vuelos_automatizacion pva <{{{><}}}>    left join admin_aerodynamics.misiones m on m.idMision = pva.idleccion <{{{><}}}>    left join admin_aerodynamics.cursos c on c.idCurso = m.idCurso <{{{><}}}>    left join admin_aerodynamics.aviones a on a.registracion = pva.matricula<{{{><}}}>    left join admin_aerodynamics.personas piloto on pva.idpiloto = piloto.idPersona <{{{><}}}>    left join admin_aerodynamics.personas instructor on pva.idinstructor = instructor.idPersona <{{{><}}}>    group by pva.id) <{{{><}}}>    union <{{{><}}}>    (select <{{{><}}}>    pa.idreserva AS idReserva,<{{{><}}}>    pva.idVuelo AS idVuelo,<{{{><}}}>    pa.idcurso AS idCurso,<{{{><}}}>    if(date_format(pva.fecha,'%d-%m-%Y') is null or date_format(pva.fecha,'%d-%m-%Y') ='00-00-0000',date_format(pa.fecha,'%d-%m-%Y'),date_format(pva.fecha,'%d-%m-%Y')) AS DATE,<{{{><}}}>    pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>    pva.despegue AS DEPARTURETIME,<{{{><}}}>    pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>    pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>    a.modelo AS AIRCRAFTMODEL,<{{{><}}}>    a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>    if(pa.tipopiloto = 'PIC',piloto.nombre,if(pa.tipoinstructor = 'PIC',instructor.nombre,'')) AS PICNAME,<{{{><}}}>    concat(ifnull(pa.comentarios,''),' PILOT NAME: ',concat(piloto.nombre,' ',if(piloto.segundoNombre is null,ifnull(piloto.apellido,''),concat(ifnull(piloto.segundoNombre,''),' ',ifnull(piloto.apellido,''))))) AS REMARKS,<{{{><}}}>    pa.idpiloto AS PILOTO,<{{{><}}}>    concat(c.refCurso,' ',c.nombre) AS CURSO,<{{{><}}}>    if(a.simulador = 0 AND pa.id=pva.idVuelo ,pva.block,0) AS TOTALVUELO,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeNightVFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>    sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos = '' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS SE,<{{{><}}}>    sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos <> '' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS ME,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto <> 'DUAL' and a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'DUAL' and a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'PIC' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS PIC,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'CO-PILOT' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS COPILOT,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'DUAL' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS 'DUAL',<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'INSTRUCTOR' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS INSTRUCTOR,<{{{><}}}>    if(a.simulador = 1,pva.block,0) AS FSTD,<{{{><}}}>    sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>    sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSNIGHT <{{{><}}}>    from admin_aerodynamics.personas_rutas_vuelos_automatizacion pva <{{{><}}}>    left join admin_aerodynamics.personas_vuelos_automatizacion pa on pa.id = pva.idVuelo <{{{><}}}>    left join admin_aerodynamics.misiones m on m.idMision = pa.idleccion <{{{><}}}>    left join admin_aerodynamics.cursos c on c.idCurso = m.idCurso <{{{><}}}>    left join admin_aerodynamics.aviones a on a.registracion = pa.matricula <{{{><}}}>    left join admin_aerodynamics.personas piloto on pa.idpiloto = piloto.idPersona <{{{><}}}>    left join admin_aerodynamics.personas instructor on pa.idinstructor = instructor.idPersona <{{{><}}}>    group by pva.id)) <{{{><}}}>    vuelos order by str_to_date(vuelos.DATE,'%d-%m-%Y') desc,vuelos.ARRIVALTIME desc
Servers\aerodynamics.com.es\QueryHistory\302<|||>1<|||>2021-02-25 10:19:43|admin_aerodynamics|1375|select <{{{><}}}>vuelos.idReserva AS idReserva,<{{{><}}}>vuelos.idVuelo AS idVuelo,<{{{><}}}>vuelos.idCurso AS idCurso,<{{{><}}}>vuelos.DATE AS DATE,<{{{><}}}>vuelos.DEPARTUREPLACE AS DEPARTUREPLACE,<{{{><}}}>vuelos.DEPARTURETIME AS DEPARTURETIME,<{{{><}}}>vuelos.ARRIVALPLACE AS ARRIVALPLACE,<{{{><}}}>vuelos.ARRIVALTIME AS ARRIVALTIME,<{{{><}}}>vuelos.AIRCRAFTMODEL AS AIRCRAFTMODEL,<{{{><}}}>vuelos.AIRCRAFTREGISTRATION AS AIRCRAFTREGISTRATION,<{{{><}}}>vuelos.PICNAME AS PICNAME,<{{{><}}}>vuelos.REMARKS AS REMARKS,<{{{><}}}>vuelos.PILOTO AS PILOTO,<{{{><}}}>vuelos.CURSO AS CURSO,<{{{><}}}>vuelos.TOTALVUELO AS TOTALVUELO,<{{{><}}}>vuelos.TOTALVUELODAY AS TOTALVUELODAY,<{{{><}}}>vuelos.TOTALVUELONIGHT AS TOTALVUELONIGHT,<{{{><}}}>vuelos.SE AS SE,<{{{><}}}>vuelos.ME AS ME,<{{{><}}}>vuelos.XCSOLO AS XCSOLO,<{{{><}}}>vuelos.XCDUAL AS XCDUAL,<{{{><}}}>vuelos.VFR AS VFR,<{{{><}}}>vuelos.IFR AS IFR,<{{{><}}}>vuelos.IFRSIM AS IFRSIM,<{{{><}}}>vuelos.PIC AS PIC,<{{{><}}}>vuelos.COPILOT AS COPILOT,<{{{><}}}>vuelos.DUAL AS 'DUAL',<{{{><}}}>vuelos.INSTRUCTOR AS INSTRUCTOR,<{{{><}}}>vuelos.FSTD AS FSTD,<{{{><}}}>vuelos.LANDINGSDAY AS LANDINGSDAY,<{{{><}}}>vuelos.LANDINGSNIGHT AS LANDINGSNIGHT <{{{><}}}>from <{{{><}}}>(<{{{><}}}>    (select <{{{><}}}>    pva.idReserva AS idReserva,<{{{><}}}>    pva.id AS idVuelo,<{{{><}}}>    c.idCurso AS idCurso,<{{{><}}}>    date_format(pva.fecha,'%d-%m-%Y') AS DATE,<{{{><}}}>    pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>    pva.despegue AS DEPARTURETIME,<{{{><}}}>    pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>    pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>    a.modelo AS AIRCRAFTMODEL,<{{{><}}}>    a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>    if(pva.tipopiloto ='PIC',piloto.nombre,if(pva.tipoinstructor = 'PIC',instructor.nombre,'')) AS PICNAME,<{{{><}}}>    concat(ifnull(pva.comentarios,''),' PILOT NAME: ',concat(piloto.nombre,' ',if(piloto.segundoNombre is null,ifnull(piloto.apellido,''),concat(ifnull(piloto.segundoNombre,''),' ',ifnull(piloto.apellido,''))))) AS REMARKS,<{{{><}}}>    pva.idpiloto AS PILOTO,<{{{><}}}>    concat(c.refCurso,' ',c.nombre) AS CURSO,<{{{><}}}>    sec_to_time(if(a.simulador = 0,sum(time_to_sec(pva.block)),0))  AS TOTALVUELO,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeNightVFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>    sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos = '' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS SE,<{{{><}}}>    sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos <> '' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS ME,<{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto <> 'DUAL' and a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCSOLO,sec_to_time(ifnull(sum(if(pva.tipopiloto = 'DUAL' and a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador =0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto = 'PIC' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS PIC,<{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto = 'CO-PILOT' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS COPILOT, <{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto = 'DUAL' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS 'DUAL',<{{{><}}}>    sec_to_time(ifnull(sum(if(pva.tipopiloto ='INSTRUCTOR' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS INSTRUCTOR,<{{{><}}}>    sec_to_time(if(a.simulador = 1,sum(time_to_sec(pva.block)),0))  AS FSTD,<{{{><}}}>	 sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>    sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSNIGHT <{{{><}}}>    from admin_aerodynamics.personas_vuelos_automatizacion pva <{{{><}}}>    left join admin_aerodynamics.misiones m on m.idMision = pva.idleccion <{{{><}}}>    left join admin_aerodynamics.cursos c on c.idCurso = m.idCurso <{{{><}}}>    left join admin_aerodynamics.aviones a on a.registracion = pva.matricula<{{{><}}}>    left join admin_aerodynamics.personas piloto on pva.idpiloto = piloto.idPersona <{{{><}}}>    left join admin_aerodynamics.personas instructor on pva.idinstructor = instructor.idPersona <{{{><}}}>    group by pva.id) <{{{><}}}>    union <{{{><}}}>    (select <{{{><}}}>    pa.idreserva AS idReserva,<{{{><}}}>    pva.idVuelo AS idVuelo,<{{{><}}}>    pa.idcurso AS idCurso,<{{{><}}}>    if(date_format(pva.fecha,'%d-%m-%Y') is null or date_format(pva.fecha,'%d-%m-%Y') ='00-00-0000',date_format(pa.fecha,'%d-%m-%Y'),date_format(pva.fecha,'%d-%m-%Y')) AS DATE,<{{{><}}}>    pva.lugarsalida AS DEPARTUREPLACE,<{{{><}}}>    pva.despegue AS DEPARTURETIME,<{{{><}}}>    pva.lugarllegada AS ARRIVALPLACE,<{{{><}}}>    pva.aterrizaje AS ARRIVALTIME,<{{{><}}}>    a.modelo AS AIRCRAFTMODEL,<{{{><}}}>    a.registracion AS AIRCRAFTREGISTRATION,<{{{><}}}>    if(pa.tipopiloto = 'PIC',piloto.nombre,if(pa.tipoinstructor = 'PIC',instructor.nombre,'')) AS PICNAME,<{{{><}}}>    concat(ifnull(pa.comentarios,''),' PILOT NAME: ',concat(piloto.nombre,' ',if(piloto.segundoNombre is null,ifnull(piloto.apellido,''),concat(ifnull(piloto.segundoNombre,''),' ',ifnull(piloto.apellido,''))))) AS REMARKS,<{{{><}}}>    pa.idpiloto AS PILOTO,<{{{><}}}>    concat(c.refCurso,' ',c.nombre) AS CURSO,<{{{><}}}>    sec_to_time(if(a.simulador = 0,sum(time_to_sec(pva.block)),0))  AS TOTALVUELO,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS TOTALVUELODAY,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeNightVFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,<{{{><}}}>    sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos = '' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS SE,<{{{><}}}>    sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos <> '' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS ME,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto <> 'DUAL' and a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCSOLO,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'DUAL' and a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS XCDUAL,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeNightVFR)),0),0)) AS VFR,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS IFR,<{{{><}}}>    sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS IFRSIM,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'PIC' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS PIC,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'CO-PILOT' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS COPILOT,<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'DUAL' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS 'DUAL',<{{{><}}}>    sec_to_time(ifnull(sum(if(pa.tipopiloto = 'INSTRUCTOR' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS INSTRUCTOR,<{{{><}}}>    sec_to_time(if(a.simulador = 1,sum(time_to_sec(pva.block)),0)) AS FSTD,<{{{><}}}>    sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSDAY,<{{{><}}}>    sum(if(pva.totalaterrizajes is null,0,pva.totalaterrizajes - ifnull(pva.aterrizajevisual,0))) AS LANDINGSNIGHT <{{{><}}}>    from admin_aerodynamics.personas_rutas_vuelos_automatizacion pva <{{{><}}}>    left join admin_aerodynamics.personas_vuelos_automatizacion pa on pa.id = pva.idVuelo <{{{><}}}>    left join admin_aerodynamics.misiones m on m.idMision = pa.idleccion <{{{><}}}>    left join admin_aerodynamics.cursos c on c.idCurso = m.idCurso <{{{><}}}>    left join admin_aerodynamics.aviones a on a.registracion = pa.matricula <{{{><}}}>    left join admin_aerodynamics.personas piloto on pa.idpiloto = piloto.idPersona <{{{><}}}>    left join admin_aerodynamics.personas instructor on pa.idinstructor = instructor.idPersona <{{{><}}}>    group by pva.id)) <{{{><}}}>    vuelos order by str_to_date(vuelos.DATE,'%d-%m-%Y') desc,vuelos.ARRIVALTIME desc
Servers\aerodynamics.com.es\QueryHistory\303<|||>1<|||>2021-02-25 12:59:53|admin_aerodynamics|422|select vuelos.idReserva AS idReserva,vuelos.idVuelo AS idVuelo,vuelos.idCurso AS<{{{><}}}>idCurso,vuelos.DATE AS DATE,vuelos.DEPARTUREPLACE AS DEPARTUREPLACE,vuelos.DEPARTURETIME AS<{{{><}}}>DEPARTURETIME,vuelos.ARRIVALPLACE AS ARRIVALPLACE,vuelos.ARRIVALTIME AS<{{{><}}}>ARRIVALTIME,vuelos.AIRCRAFTMODEL AS AIRCRAFTMODEL,vuelos.AIRCRAFTREGISTRATION AS<{{{><}}}>AIRCRAFTREGISTRATION,vuelos.PICNAME AS PICNAME,vuelos.REMARKS AS REMARKS,vuelos.PILOTO AS<{{{><}}}>PILOTO,vuelos.CURSO AS CURSO,vuelos.TOTALVUELO AS TOTALVUELO,vuelos.TOTALVUELODAY AS<{{{><}}}>TOTALVUELODAY,vuelos.TOTALVUELONIGHT AS TOTALVUELONIGHT,vuelos.SE AS SE,vuelos.ME AS<{{{><}}}>ME,vuelos.XCSOLO AS XCSOLO,vuelos.XCDUAL AS XCDUAL,vuelos.VFR AS VFR,vuelos.IFR AS<{{{><}}}>IFR,vuelos.IFRSIM AS IFRSIM,vuelos.PIC AS PIC,vuelos.COPILOT AS COPILOT,vuelos.DUAL AS<{{{><}}}>'DUAL',vuelos.INSTRUCTOR AS INSTRUCTOR,vuelos.FSTD AS FSTD,vuelos.LANDINGSDAY AS<{{{><}}}>LANDINGSDAY,vuelos.LANDINGSNIGHT AS LANDINGSNIGHT from ((select pva.idReserva AS idReserva,pva.id AS<{{{><}}}>idVuelo,c.idCurso AS idCurso,date_format(pva.fecha,'%d-%m-%Y') AS DATE,pva.lugarsalida AS<{{{><}}}>DEPARTUREPLACE,pva.despegue AS DEPARTURETIME,pva.lugarllegada AS ARRIVALPLACE,pva.aterrizaje AS<{{{><}}}>ARRIVALTIME,a.modelo AS AIRCRAFTMODEL,a.registracion AS AIRCRAFTREGISTRATION,if(pva.tipopiloto =<{{{><}}}>'PIC',piloto.nombre,if(pva.tipoinstructor = 'PIC',instructor.nombre,'')) AS<{{{><}}}>PICNAME,concat(ifnull(pva.comentarios,''),' PILOT NAME: ',concat(piloto.nombre,' ',if(piloto.segundoNombre<{{{><}}}>is null,ifnull(piloto.apellido,''),concat(ifnull(piloto.segundoNombre,''),' ',ifnull(piloto.apellido,'')))))<{{{><}}}>AS REMARKS,pva.idpiloto AS PILOTO,concat(c.refCurso,' ',c.nombre) AS<{{{><}}}>CURSO,sec_to_time(if(a.simulador = 0,sum(time_to_sec(pva.block)),0)) AS<{{{><}}}>TOTALVUELO,sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) +<{{{><}}}>sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS<{{{><}}}>TOTALVUELODAY,sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeNightVFR)) +<{{{><}}}>sum(time_to_sec(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,sec_to_time(ifnull(sum(if(a.motorUno <> '' and<{{{><}}}>    a.motorDos = '' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS<{{{><}}}>    SE,sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos <> '' and a.simulador =<{{{><}}}>            0,time_to_sec(pva.block),0)),0)) AS ME,sec_to_time(ifnull(sum(if(pva.tipopiloto <> 'DUAL' and<{{{><}}}>                a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS<{{{><}}}>                XCSOLO,sec_to_time(ifnull(sum(if(pva.tipopiloto = 'DUAL' and a.simulador =<{{{><}}}>                0,time_to_sec(pva.timeXC),0)),0)) AS XCDUAL,sec_to_time(ifnull(if(a.simulador =<{{{><}}}>                0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeNightVFR)),0),0)) AS<{{{><}}}>                VFR,sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayIFR)) +<{{{><}}}>                sum(time_to_sec(pva.timeNightIFR)),0),0)) AS IFR,sec_to_time(ifnull(if(a.simulador =<{{{><}}}>                0,sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS<{{{><}}}>                IFRSIM,sec_to_time(ifnull(sum(if(pva.tipopiloto = 'PIC' and a.simulador =<{{{><}}}>                0,time_to_sec(pva.block),0)),0)) AS PIC,sec_to_time(ifnull(sum(if(pva.tipopiloto =<{{{><}}}>                'CO-PILOT' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS<{{{><}}}>                COPILOT,sec_to_time(ifnull(sum(if(pva.tipopiloto = 'DUAL' and a.simulador =<{{{><}}}>                0,time_to_sec(pva.block),0)),0)) AS 'DUAL',sec_to_time(ifnull(sum(if(pva.tipopiloto =<{{{><}}}>                'INSTRUCTOR' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS<{{{><}}}>                INSTRUCTOR,sec_to_time(if(a.simulador = 1,sum(time_to_sec(pva.block)),0)) AS<{{{><}}}>                FSTD,sum(if(pva.aterrizajevisual is  null,0,pva.aterrizajevisual)) AS LANDINGSDAY,sum(if(pva.aterrizajegoaround is null,0,pva.aterrizajegoaround)) AS LANDINGSNIGHT from<{{{><}}}>                ((((((admin_aerodynamics.personas_vuelos_automatizacion pva left join<{{{><}}}>                admin_aerodynamics.reserva_vuelos rv on(pva.idreserva = rv.idReserva)) left join<{{{><}}}>                admin_aerodynamics.misiones m on(m.idMision = pva.idleccion)) left join<{{{><}}}>                admin_aerodynamics.cursos c on(c.idCurso = m.idCurso)) left join<{{{><}}}>                admin_aerodynamics.aviones a on(a.registracion = pva.matricula)) left join<{{{><}}}>                admin_aerodynamics.personas piloto on(pva.idpiloto = piloto.idPersona)) left join<{{{><}}}>                admin_aerodynamics.personas instructor on(pva.idinstructor = instructor.idPersona)) group<{{{><}}}>                by pva.idpiloto,c.idCurso) union (select pa.idreserva AS idReserva,pva.idVuelo AS<{{{><}}}>                idVuelo,pa.idcurso AS idCurso,if(date_format(pva.fecha,'%d-%m-%Y') is null or<{{{><}}}>                date_format(pva.fecha,'%d-%m-%Y') =<{{{><}}}>                '00-00-0000',date_format(pa.fecha,'%d-%m-%Y'),date_format(pva.fecha,'%d-%m-%Y')) AS<{{{><}}}>                DATE,pva.lugarsalida AS DEPARTUREPLACE,pva.despegue AS DEPARTURETIME,pva.lugarllegada<{{{><}}}>                AS ARRIVALPLACE,pva.aterrizaje AS ARRIVALTIME,a.modelo AS AIRCRAFTMODEL,a.registracion<{{{><}}}>                AS AIRCRAFTREGISTRATION,if(pa.tipopiloto = 'PIC',piloto.nombre,if(pa.tipoinstructor =<{{{><}}}>                'PIC',instructor.nombre,'')) AS PICNAME,concat(ifnull(pa.comentarios,''),' PILOT NAME:\r\n<{{{><}}}>                ',concat(piloto.nombre,' ',if(piloto.segundoNombre is<{{{><}}}>                null,ifnull(piloto.apellido,''),concat(ifnull(piloto.segundoNombre,''),'\r\n<{{{><}}}>                ',ifnull(piloto.apellido,''))))) AS REMARKS,pa.idpiloto AS<{{{><}}}>                PILOTO,concat(c.refCurso,'\r\n ',c.nombre) AS CURSO,sec_to_time(if(a.simulador =<{{{><}}}>                0,sum(time_to_sec(pva.block)),0)) AS TOTALVUELO,sec_to_time(ifnull(if(a.simulador =<{{{><}}}>                0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeDayIFR)) +<{{{><}}}>                sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS<{{{><}}}>                TOTALVUELODAY,sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeNightVFR)) +<{{{><}}}>                sum(time_to_sec(pva.timeNightIFR)),0),0)) AS<{{{><}}}>                TOTALVUELONIGHT,sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos = '' and<{{{><}}}>                    a.simulador = 0,time_to_sec(pva.block),0)),0)) AS<{{{><}}}>                    SE,sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos <> '' and a.simulador =<{{{><}}}>                            0,time_to_sec(pva.block),0)),0)) AS ME,sec_to_time(ifnull(sum(if(pa.tipopiloto<{{{><}}}>                            <> 'DUAL' and a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS<{{{><}}}>                                XCSOLO,sec_to_time(ifnull(sum(if(pa.tipopiloto = 'DUAL' and a.simulador =<{{{><}}}>                                0,time_to_sec(pva.timeXC),0)),0)) AS XCDUAL,sec_to_time(ifnull(if(a.simulador<{{{><}}}>                                = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeNightVFR)),0),0))<{{{><}}}>                                AS VFR,sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayIFR))<{{{><}}}>                                + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS<{{{><}}}>                                IFR,sec_to_time(ifnull(if(a.simulador =<{{{><}}}>                                0,sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS<{{{><}}}>                                IFRSIM,sec_to_time(ifnull(sum(if(pa.tipopiloto = 'PIC' and a.simulador =<{{{><}}}>                                0,time_to_sec(pva.block),0)),0)) AS<{{{><}}}>                                PIC,sec_to_time(ifnull(sum(if(pa.tipopiloto = 'CO-PILOT' and a.simulador =<{{{><}}}>                                0,time_to_sec(pva.block),0)),0)) AS<{{{><}}}>                                COPILOT,sec_to_time(ifnull(sum(if(pa.tipopiloto = 'DUAL' and a.simulador =<{{{><}}}>                                0,time_to_sec(pva.block),0)),0)) AS<{{{><}}}>                                'DUAL',sec_to_time(ifnull(sum(if(pa.tipopiloto = 'INSTRUCTOR' and a.simulador =<{{{><}}}>                                0,time_to_sec(pva.block),0)),0)) AS INSTRUCTOR,sec_to_time(if(a.simulador =<{{{><}}}>                                1,sum(time_to_sec(pva.block)),0)) AS FSTD,sum(if(pva.aterrizajevisual is  null,0,pva.aterrizajevisual)) AS<{{{><}}}>                                LANDINGSDAY,sum(if(pva.aterrizajegoaround is null,0,pva.aterrizajegoaround)) AS LANDINGSNIGHT from<{{{><}}}>                                (((((((admin_aerodynamics.personas_rutas_vuelos_automatizacion pva left join<{{{><}}}>                                admin_aerodynamics.personas_vuelos_automatizacion pa on(pa.id =<{{{><}}}>                                pva.idVuelo)) left join admin_aerodynamics.reserva_vuelos rv<{{{><}}}>                                on(pa.idreserva = rv.idReserva)) left join admin_aerodynamics.misiones m<{{{><}}}>                                on(m.idMision = pa.idleccion)) left join admin_aerodynamics.cursos c<{{{><}}}>                                on(c.idCurso = m.idCurso)) left join admin_aerodynamics.aviones a<{{{><}}}>                                on(a.registracion = pa.matricula)) left join admin_aerodynamics.personas<{{{><}}}>                                piloto on(pa.idpiloto = piloto.idPersona)) left join<{{{><}}}>                                admin_aerodynamics.personas instructor on(pa.idinstructor =<{{{><}}}>                                instructor.idPersona)) group by pva.idpiloto,c.idCurso)) vuelos group by<{{{><}}}>                                vuelos.PILOTO,vuelos.idCurso
Servers\aerodynamics.com.es\QueryHistory\304<|||>1<|||>2021-02-25 13:05:05|admin_aerodynamics|422|select vuelos.idReserva AS idReserva,vuelos.idVuelo AS idVuelo,vuelos.idCurso AS<{{{><}}}>idCurso,vuelos.DATE AS DATE,vuelos.DEPARTUREPLACE AS DEPARTUREPLACE,vuelos.DEPARTURETIME AS<{{{><}}}>DEPARTURETIME,vuelos.ARRIVALPLACE AS ARRIVALPLACE,vuelos.ARRIVALTIME AS<{{{><}}}>ARRIVALTIME,vuelos.AIRCRAFTMODEL AS AIRCRAFTMODEL,vuelos.AIRCRAFTREGISTRATION AS<{{{><}}}>AIRCRAFTREGISTRATION,vuelos.PICNAME AS PICNAME,vuelos.REMARKS AS REMARKS,vuelos.PILOTO AS<{{{><}}}>PILOTO,vuelos.CURSO AS CURSO,vuelos.TOTALVUELO AS TOTALVUELO,vuelos.TOTALVUELODAY AS<{{{><}}}>TOTALVUELODAY,vuelos.TOTALVUELONIGHT AS TOTALVUELONIGHT,vuelos.SE AS SE,vuelos.ME AS<{{{><}}}>ME,vuelos.XCSOLO AS XCSOLO,vuelos.XCDUAL AS XCDUAL,vuelos.VFR AS VFR,vuelos.IFR AS<{{{><}}}>IFR,vuelos.IFRSIM AS IFRSIM,vuelos.PIC AS PIC,vuelos.COPILOT AS COPILOT,vuelos.DUAL AS<{{{><}}}>'DUAL',vuelos.INSTRUCTOR AS INSTRUCTOR,vuelos.FSTD AS FSTD,vuelos.LANDINGSDAY AS<{{{><}}}>LANDINGSDAY,vuelos.LANDINGSNIGHT AS LANDINGSNIGHT from ((select pva.idReserva AS idReserva,pva.id AS<{{{><}}}>idVuelo,c.idCurso AS idCurso,date_format(pva.fecha,'%d-%m-%Y') AS DATE,pva.lugarsalida AS<{{{><}}}>DEPARTUREPLACE,pva.despegue AS DEPARTURETIME,pva.lugarllegada AS ARRIVALPLACE,pva.aterrizaje AS<{{{><}}}>ARRIVALTIME,a.modelo AS AIRCRAFTMODEL,a.registracion AS AIRCRAFTREGISTRATION,if(pva.tipopiloto =<{{{><}}}>'PIC',piloto.nombre,if(pva.tipoinstructor = 'PIC',instructor.nombre,'')) AS<{{{><}}}>PICNAME,concat(ifnull(pva.comentarios,''),' PILOT NAME: ',concat(piloto.nombre,' ',if(piloto.segundoNombre<{{{><}}}>is null,ifnull(piloto.apellido,''),concat(ifnull(piloto.segundoNombre,''),' ',ifnull(piloto.apellido,'')))))<{{{><}}}>AS REMARKS,pva.idinstructor AS PILOTO,concat(c.refCurso,' ',c.nombre) AS<{{{><}}}>CURSO,sec_to_time(if(a.simulador = 0,sum(time_to_sec(pva.block)),0)) AS<{{{><}}}>TOTALVUELO,sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayVFR)) +<{{{><}}}>sum(time_to_sec(pva.timeDayIFR)) + sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS<{{{><}}}>TOTALVUELODAY,sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeNightVFR)) +<{{{><}}}>sum(time_to_sec(pva.timeNightIFR)),0),0)) AS TOTALVUELONIGHT,sec_to_time(ifnull(sum(if(a.motorUno <> '' and<{{{><}}}>    a.motorDos = '' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS<{{{><}}}>    SE,sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos <> '' and a.simulador =<{{{><}}}>            0,time_to_sec(pva.block),0)),0)) AS ME,sec_to_time(ifnull(sum(if(pva.tipoinstructor <> 'DUAL'<{{{><}}}>                and a.simulador = 0,time_to_sec(pva.timeXC),0)),0)) AS<{{{><}}}>                XCSOLO,sec_to_time(ifnull(sum(if(pva.tipoinstructor = 'DUAL' and a.simulador =<{{{><}}}>                0,time_to_sec(pva.timeXC),0)),0)) AS XCDUAL,sec_to_time(ifnull(if(a.simulador =<{{{><}}}>                0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeNightVFR)),0),0)) AS<{{{><}}}>                VFR,sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayIFR)) +<{{{><}}}>                sum(time_to_sec(pva.timeNightIFR)),0),0)) AS IFR,sec_to_time(ifnull(if(a.simulador =<{{{><}}}>                0,sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS<{{{><}}}>                IFRSIM,sec_to_time(ifnull(sum(if(pva.tipoinstructor = 'INSTRUCTOR' and a.simulador =<{{{><}}}>                0,time_to_sec(pva.block),0)),0)) AS PIC,sec_to_time(ifnull(sum(if(pva.tipoinstructor =<{{{><}}}>                'INSTRUCTOR' and a.simulador = 0,time_to_sec(pva.block),0)),0)) AS<{{{><}}}>                COPILOT,sec_to_time(ifnull(sum(if(pva.tipoinstructor = 'INSTRUCTOR' and a.simulador =<{{{><}}}>                0,time_to_sec(pva.block),0)),0)) AS 'DUAL',sec_to_time(sum(time_to_sec(pva.block))) AS<{{{><}}}>                INSTRUCTOR,sec_to_time(if(a.simulador = 1,sum(time_to_sec(pva.block)),0)) AS<{{{><}}}>                FSTD,sum(if(pva.aterrizajevisual is  null,0,pva.aterrizajevisual)) AS LANDINGSDAY,sum(if(pva.aterrizajegoaround is null,0,pva.aterrizajegoaround)) AS LANDINGSNIGHT from<{{{><}}}>                ((((((admin_aerodynamics.personas_vuelos_automatizacion pva left join<{{{><}}}>                admin_aerodynamics.reserva_vuelos rv on(pva.idreserva = rv.idReserva)) left join<{{{><}}}>                admin_aerodynamics.misiones m on(m.idMision = pva.idleccion)) left join<{{{><}}}>                admin_aerodynamics.cursos c on(c.idCurso = m.idCurso)) left join<{{{><}}}>                admin_aerodynamics.aviones a on(a.registracion = pva.matricula)) left join<{{{><}}}>                admin_aerodynamics.personas piloto on(pva.idpiloto = piloto.idPersona)) left join<{{{><}}}>                admin_aerodynamics.personas instructor on(pva.idinstructor = instructor.idPersona)) group<{{{><}}}>                by pva.idinstructor,c.idCurso) union (select pa.idreserva AS idReserva,pva.idVuelo AS<{{{><}}}>                idVuelo,pa.idcurso AS idCurso,if(date_format(pva.fecha,'%d-%m-%Y') is null or<{{{><}}}>                date_format(pva.fecha,'%d-%m-%Y') =<{{{><}}}>                '00-00-0000',date_format(pa.fecha,'%d-%m-%Y'),date_format(pva.fecha,'%d-%m-%Y')) AS<{{{><}}}>                DATE,pva.lugarsalida AS DEPARTUREPLACE,pva.despegue AS DEPARTURETIME,pva.lugarllegada<{{{><}}}>                AS ARRIVALPLACE,pva.aterrizaje AS ARRIVALTIME,a.modelo AS AIRCRAFTMODEL,a.registracion<{{{><}}}>                AS AIRCRAFTREGISTRATION,if(pa.tipopiloto = 'PIC',piloto.nombre,if(pa.tipoinstructor =<{{{><}}}>                'PIC',instructor.nombre,'')) AS PICNAME,concat(ifnull(pa.comentarios,''),' PILOT NAME:<{{{><}}}>                ',concat(piloto.nombre,' ',if(piloto.segundoNombre is<{{{><}}}>                null,ifnull(piloto.apellido,''),concat(ifnull(piloto.segundoNombre,''),'<{{{><}}}>                ',ifnull(piloto.apellido,''))))) AS REMARKS,pa.idinstructor AS<{{{><}}}>                PILOTO,concat(c.refCurso,' ',c.nombre) AS CURSO,sec_to_time(if(a.simulador =<{{{><}}}>                0,sum(time_to_sec(pva.block)),0)) AS TOTALVUELO,sec_to_time(ifnull(if(a.simulador =<{{{><}}}>                0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeDayIFR)) +<{{{><}}}>                sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS<{{{><}}}>                TOTALVUELODAY,sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeNightVFR)) +<{{{><}}}>                sum(time_to_sec(pva.timeNightIFR)),0),0)) AS<{{{><}}}>                TOTALVUELONIGHT,sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos = '' and<{{{><}}}>                    a.simulador = 0,time_to_sec(pva.block),0)),0)) AS<{{{><}}}>                    SE,sec_to_time(ifnull(sum(if(a.motorUno <> '' and a.motorDos <> '' and a.simulador =<{{{><}}}>                            0,time_to_sec(pva.block),0)),0)) AS<{{{><}}}>                            ME,sec_to_time(ifnull(sum(if(pa.tipoinstructor <> 'DUAL' and a.simulador =<{{{><}}}>                                0,time_to_sec(pva.timeXC),0)),0)) AS<{{{><}}}>                                XCSOLO,sec_to_time(ifnull(sum(if(pa.tipoinstructor = 'DUAL' and a.simulador =<{{{><}}}>                                0,time_to_sec(pva.timeXC),0)),0)) AS XCDUAL,sec_to_time(ifnull(if(a.simulador<{{{><}}}>                                = 0,sum(time_to_sec(pva.timeDayVFR)) + sum(time_to_sec(pva.timeNightVFR)),0),0))<{{{><}}}>                                AS VFR,sec_to_time(ifnull(if(a.simulador = 0,sum(time_to_sec(pva.timeDayIFR))<{{{><}}}>                                + sum(time_to_sec(pva.timeNightIFR)),0),0)) AS<{{{><}}}>                                IFR,sec_to_time(ifnull(if(a.simulador =<{{{><}}}>                                0,sum(time_to_sec(pva.timeSimulatedIFR)),0),0)) AS<{{{><}}}>                                IFRSIM,sec_to_time(ifnull(sum(if(pa.tipoinstructor = 'INSTRUCTOR' and<{{{><}}}>                                a.simulador = 0,time_to_sec(pva.block),0)),0)) AS<{{{><}}}>                                PIC,sec_to_time(ifnull(sum(if(pa.tipoinstructor = 'INSTRUCTOR' and a.simulador<{{{><}}}>                                = 0,time_to_sec(pva.block),0)),0)) AS<{{{><}}}>                                COPILOT,sec_to_time(ifnull(sum(if(pa.tipoinstructor = 'INSTRUCTOR' and<{{{><}}}>                                a.simulador = 0,time_to_sec(pva.block),0)),0)) AS<{{{><}}}>                                'DUAL',sec_to_time(sum(time_to_sec(pva.block))) AS INSTRUCTOR,sec_to_time(if(a.simulador<{{{><}}}>                                = 1,sum(time_to_sec(pva.block)),0)) AS FSTD,sum(if(pva.aterrizajevisual is  null,0,pva.aterrizajevisual)) AS<{{{><}}}>                                LANDINGSDAY,sum(if(pva.aterrizajegoaround is null,0,pva.aterrizajegoaround)) AS LANDINGSNIGHT from<{{{><}}}>                                (((((((admin_aerodynamics.personas_rutas_vuelos_automatizacion pva left join<{{{><}}}>                                admin_aerodynamics.personas_vuelos_automatizacion pa on(pa.id =<{{{><}}}>                                pva.idVuelo)) left join admin_aerodynamics.reserva_vuelos rv<{{{><}}}>                                on(pa.idreserva = rv.idReserva)) left join admin_aerodynamics.misiones m<{{{><}}}>                                on(m.idMision = pa.idleccion)) left join admin_aerodynamics.cursos c<{{{><}}}>                                on(c.idCurso = m.idCurso)) left join admin_aerodynamics.aviones a<{{{><}}}>                                on(a.registracion = pa.matricula)) left join admin_aerodynamics.personas<{{{><}}}>                                piloto on(pa.idpiloto = piloto.idPersona)) left join<{{{><}}}>                                admin_aerodynamics.personas instructor on(pa.idinstructor =<{{{><}}}>                                instructor.idPersona)) group by pva.idinstructor,c.idCurso)) vuelos group<{{{><}}}>                                by vuelos.PILOTO,vuelos.idCurso
Servers\aerodynamics.com.es\QueryHistory\305<|||>1<|||>2021-02-25 14:02:34|admin_aerodynamics|391|SELECT personas.*,concat(nombre,if(segundoNombre is null," ",concat(" ",segundoNombre," ")),apellido) as nombreCompleto FROM personas_curso LEFT JOIN personas on personas.idPersona=personas_curso.idPersona group by personas.idPersona
Servers\aerodynamics.com.es\QueryHistory\306<|||>1<|||>2021-02-25 14:50:21|admin_aerodynamics|47|SELECT pva.id as id, pva.idreserva as Reserva, misiones.descripcion as LESSONS, misiones.refMision as REFLESSONS, DATE_FORMAT(pva.fecha, "%d-%m-%Y") as "DATE", pva.matricula as AIRCRAFT, TIME_FORMAT(pva.block, "%H:%i") as TOTAL, TIME_FORMAT(if(pva.tiempototal is null,pva.block,pva.tiempototal), "%H:%i") as "BLOCK", TIME_FORMAT(pva.airborne, "%H:%i") as AIRBORNE, concat(piloto.nombre,"/",instructor.nombre) as CREW , TIME_FORMAT(pva.despegue, "%H:%i") as Despegue, TIME_FORMAT(pva.aterrizaje,"%H:%i") as Aterrizaje, TIME_FORMAT(pva.arranque, "%H:%i") as Arranque, TIME_FORMAT(pva.parada , "%H:%i") as Apagado, pva.hobbsout AS "HOBBSOUT", pva.hobbsin AS "HOBBSIN", pva.tachout AS "TACHOUT", pva.tachin AS "TACHIN" FROM personas_vuelos_automatizacion pva RIGHT JOIN reserva_vuelos rv on rv.idReserva=pva.idreserva LEFT JOIN personas piloto on piloto.idPersona=rv.idPiloto LEFT JOIN personas instructor on instructor.idPersona=rv.idInstructor LEFT JOIN aviones a on a.registracion=pva.matricula LEFT JOIN misiones on misiones.idMision=rv.idLeccion WHERE a.idAvion in(20) and pva.fecha between '2021-02-22' and '2021-02-27' ORDER BY pva.fecha DESC ,id DESC
Servers\aerodynamics.com.es\QueryHistory\307<|||>1<|||>2021-02-25 14:55:01|admin_aerodynamics|47|SELECT pva.id as id, pva.idreserva as Reserva, misiones.descripcion as LESSONS, misiones.refMision as REFLESSONS, DATE_FORMAT(pva.fecha, "%d-%m-%Y") as "DATE", pva.matricula as AIRCRAFT, TIME_FORMAT(pva.block, "%H:%i") as TOTAL, TIME_FORMAT(if(pva.tiempototal is null,pva.block,pva.tiempototal), "%H:%i") as "BLOCK", TIME_FORMAT(pva.airborne, "%H:%i") as AIRBORNE, concat(piloto.nombre,"/",instructor.nombre) as CREW , TIME_FORMAT(pva.despegue, "%H:%i") as Despegue, TIME_FORMAT(pva.aterrizaje,"%H:%i") as Aterrizaje, TIME_FORMAT(pva.arranque, "%H:%i") as Arranque, TIME_FORMAT(pva.parada , "%H:%i") as Apagado, pva.hobbsout AS "HOBBSOUT", pva.hobbsin AS "HOBBSIN", pva.tachout AS "TACHOUT", pva.tachin AS "TACHIN" FROM personas_vuelos_automatizacion pva RIGHT JOIN reserva_vuelos rv on rv.idReserva=pva.idreserva LEFT JOIN personas piloto on piloto.idPersona=rv.idPiloto LEFT JOIN personas instructor on instructor.idPersona=rv.idInstructor LEFT JOIN aviones a on a.registracion=pva.matricula LEFT JOIN misiones on misiones.idMision=rv.idLeccion Where a.idAvion in(20) and pva.fecha between '2021-02-22' and '2021-02-27' ORDER BY pva.fecha DESC ,id DESC
Servers\aerodynamics.com.es\QueryHistory\308<|||>1<|||>2021-02-25 14:59:42|admin_aerodynamics|47|SELECT pva.id as id, pva.idreserva as Reserva, misiones.descripcion as LESSONS, misiones.refMision as REFLESSONS, DATE_FORMAT(pva.fecha, "%d-%m-%Y") as "DATE", pva.matricula as AIRCRAFT, TIME_FORMAT(pva.block, "%H:%i") as TOTAL, TIME_FORMAT(if(pva.tiempototal is null,pva.block,pva.tiempototal), "%H:%i") as "BLOCK", TIME_FORMAT(pva.airborne, "%H:%i") as AIRBORNE, concat(piloto.nombre,"/",instructor.nombre) as CREW , TIME_FORMAT(pva.despegue, "%H:%i") as Despegue, TIME_FORMAT(pva.aterrizaje,"%H:%i") as Aterrizaje, TIME_FORMAT(pva.arranque, "%H:%i") as Arranque, TIME_FORMAT(pva.parada , "%H:%i") as Apagado, pva.hobbsout AS "HOBBSOUT", pva.hobbsin AS "HOBBSIN", pva.tachout AS "TACHOUT", pva.tachin AS "TACHIN" FROM personas_vuelos_automatizacion pva RIGHT JOIN reserva_vuelos rv on rv.idReserva=pva.idreserva LEFT JOIN personas piloto on piloto.idPersona=rv.idPiloto LEFT JOIN personas instructor on instructor.idPersona=rv.idInstructor LEFT JOIN aviones a on a.registracion=pva.matricula LEFT JOIN misiones on misiones.idMision=rv.idLeccion Where a.idAvion in(20) and (pva.idpiloto in(3893) or pva.idinstructor in(3893)) and pva.fecha between '2021-02-22' and '2021-02-27' ORDER BY pva.fecha DESC ,id DESC
Servers\aerodynamics.com.es\QueryHistory\309<|||>1<|||>2021-02-25 15:14:29|admin_aerodynamics|47|SELECT pva.id as id, pva.idreserva as Reserva, misiones.descripcion as LESSONS, misiones.refMision as REFLESSONS, DATE_FORMAT(pva.fecha, "%d-%m-%Y") as "DATE", pva.matricula as AIRCRAFT, TIME_FORMAT(pva.block, "%H:%i") as TOTAL, TIME_FORMAT(if(pva.tiempototal is null,pva.block,pva.tiempototal), "%H:%i") as "BLOCK", TIME_FORMAT(pva.airborne, "%H:%i") as AIRBORNE, concat(piloto.nombre,"/",instructor.nombre) as CREW , TIME_FORMAT(pva.despegue, "%H:%i") as Despegue, TIME_FORMAT(pva.aterrizaje,"%H:%i") as Aterrizaje, TIME_FORMAT(pva.arranque, "%H:%i") as Arranque, TIME_FORMAT(pva.parada , "%H:%i") as Apagado, pva.hobbsout AS "HOBBSOUT", pva.hobbsin AS "HOBBSIN", pva.tachout AS "TACHOUT", pva.tachin AS "TACHIN" FROM personas_vuelos_automatizacion pva RIGHT JOIN reserva_vuelos rv on rv.idReserva=pva.idreserva LEFT JOIN personas piloto on piloto.idPersona=rv.idPiloto LEFT JOIN personas instructor on instructor.idPersona=rv.idInstructor LEFT JOIN aviones a on a.registracion=pva.matricula LEFT JOIN misiones on misiones.idMision=rv.idLeccion Where a.idAvion in(20) and (pva.idpiloto in(3483) or pva.idinstructor in(3483)) and pva.fecha between '2021-02-22' and '2021-02-28' ORDER BY pva.fecha DESC ,id DESC
Servers\aerodynamics.com.es\QueryHistory\310<|||>1<|||>2021-02-25 15:15:01|admin_aerodynamics|47|SELECT pva.id as id, pva.idreserva as Reserva, misiones.descripcion as LESSONS, misiones.refMision as REFLESSONS, DATE_FORMAT(pva.fecha, "%d-%m-%Y") as "DATE", pva.matricula as AIRCRAFT, TIME_FORMAT(pva.block, "%H:%i") as TOTAL, TIME_FORMAT(if(pva.tiempototal is null,pva.block,pva.tiempototal), "%H:%i") as "BLOCK", TIME_FORMAT(pva.airborne, "%H:%i") as AIRBORNE, concat(piloto.nombre,"/",instructor.nombre) as CREW , TIME_FORMAT(pva.despegue, "%H:%i") as Despegue, TIME_FORMAT(pva.aterrizaje,"%H:%i") as Aterrizaje, TIME_FORMAT(pva.arranque, "%H:%i") as Arranque, TIME_FORMAT(pva.parada , "%H:%i") as Apagado, pva.hobbsout AS "HOBBSOUT", pva.hobbsin AS "HOBBSIN", pva.tachout AS "TACHOUT", pva.tachin AS "TACHIN" FROM personas_vuelos_automatizacion pva RIGHT JOIN reserva_vuelos rv on rv.idReserva=pva.idreserva LEFT JOIN personas piloto on piloto.idPersona=rv.idPiloto LEFT JOIN personas instructor on instructor.idPersona=rv.idInstructor LEFT JOIN aviones a on a.registracion=pva.matricula LEFT JOIN misiones on misiones.idMision=rv.idLeccion Where a.idAvion in(20) and pva.fecha between '2021-02-22' and '2021-02-28' ORDER BY pva.fecha DESC ,id DESC
Servers\aerodynamics.com.es\QueryHistory\312<|||>1<|||>2021-02-25 15:17:29|admin_aerodynamics|47|SELECT pva.id as id, pva.idreserva as Reserva, misiones.descripcion as LESSONS, misiones.refMision as REFLESSONS, DATE_FORMAT(pva.fecha, "%d-%m-%Y") as "DATE", pva.matricula as AIRCRAFT, TIME_FORMAT(pva.block, "%H:%i") as TOTAL, TIME_FORMAT(if(pva.tiempototal is null,pva.block,pva.tiempototal), "%H:%i") as "BLOCK", TIME_FORMAT(pva.airborne, "%H:%i") as AIRBORNE, concat(piloto.nombre,"/",instructor.nombre) as CREW , TIME_FORMAT(pva.despegue, "%H:%i") as Despegue, TIME_FORMAT(pva.aterrizaje,"%H:%i") as Aterrizaje, TIME_FORMAT(pva.arranque, "%H:%i") as Arranque, TIME_FORMAT(pva.parada , "%H:%i") as Apagado, pva.hobbsout AS "HOBBSOUT", pva.hobbsin AS "HOBBSIN", pva.tachout AS "TACHOUT", pva.tachin AS "TACHIN" FROM personas_vuelos_automatizacion pva RIGHT JOIN reserva_vuelos rv on rv.idReserva=pva.idreserva LEFT JOIN personas piloto on piloto.idPersona=pva.idPiloto LEFT JOIN personas instructor on instructor.idPersona=pva.idInstructor LEFT JOIN aviones a on a.registracion=pva.matricula LEFT JOIN misiones on misiones.idMision=pva.idleccion Where a.idAvion in(20)  and pva.fecha between '2021-02-22' and '2021-02-28' ORDER BY pva.fecha DESC ,id DESC
Servers\aerodynamics.com.es\QueryHistory\313<|||>1<|||>2021-02-25 15:17:59|admin_aerodynamics|47|SELECT pva.id as id, pva.idreserva as Reserva, misiones.descripcion as LESSONS, misiones.refMision as REFLESSONS, DATE_FORMAT(pva.fecha, "%d-%m-%Y") as "DATE", pva.matricula as AIRCRAFT, TIME_FORMAT(pva.block, "%H:%i") as TOTAL, TIME_FORMAT(if(pva.tiempototal is null,pva.block,pva.tiempototal), "%H:%i") as "BLOCK", TIME_FORMAT(pva.airborne, "%H:%i") as AIRBORNE, concat(piloto.nombre,"/",instructor.nombre) as CREW , TIME_FORMAT(pva.despegue, "%H:%i") as Despegue, TIME_FORMAT(pva.aterrizaje,"%H:%i") as Aterrizaje, TIME_FORMAT(pva.arranque, "%H:%i") as Arranque, TIME_FORMAT(pva.parada , "%H:%i") as Apagado, pva.hobbsout AS "HOBBSOUT", pva.hobbsin AS "HOBBSIN", pva.tachout AS "TACHOUT", pva.tachin AS "TACHIN" FROM personas_vuelos_automatizacion pva RIGHT JOIN reserva_vuelos rv on rv.idReserva=pva.idreserva LEFT JOIN personas piloto on piloto.idPersona=pva.idPiloto LEFT JOIN personas instructor on instructor.idPersona=pva.idInstructor LEFT JOIN aviones a on a.registracion=pva.matricula LEFT JOIN misiones on misiones.idMision=pva.idleccion Where a.idAvion in(20) and (pva.idpiloto in(3483) or pva.idinstructor in(3483)) and pva.fecha between '2021-02-22' and '2021-02-28' ORDER BY pva.fecha DESC ,id DESC
Servers\aerodynamics.com.es\QueryHistory\311<|||>1<|||>2021-02-25 15:29:31|admin_aerodynamics|63|UPDATE personas_vuelos_automatizacion SET evaluacionGeneral="noEvaluate" WHERE evaluacionGeneral IS null
Servers\aerodynamics.com.es\QueryHistory\314<|||>1<|||>2021-02-25 15:38:07|admin_aerodynamics|47|SELECT pva.id as id, pva.idreserva as Reserva, misiones.descripcion as LESSONS, misiones.refMision as REFLESSONS, DATE_FORMAT(pva.fecha, "%d-%m-%Y") as "DATE", pva.matricula as AIRCRAFT, TIME_FORMAT(pva.block, "%H:%i") as TOTAL, TIME_FORMAT(if(pva.tiempototal is null,pva.block,pva.tiempototal), "%H:%i") as "BLOCK", TIME_FORMAT(pva.airborne, "%H:%i") as AIRBORNE, concat(piloto.nombre,"/",instructor.nombre) as CREW , TIME_FORMAT(pva.despegue, "%H:%i") as Despegue, TIME_FORMAT(pva.aterrizaje,"%H:%i") as Aterrizaje, TIME_FORMAT(pva.arranque, "%H:%i") as Arranque, TIME_FORMAT(pva.parada , "%H:%i") as Apagado, pva.hobbsout AS "HOBBSOUT", pva.hobbsin AS "HOBBSIN", pva.tachout AS "TACHOUT", pva.tachin AS "TACHIN" FROM personas_vuelos_automatizacion pva RIGHT JOIN reserva_vuelos rv on rv.idReserva=pva.idreserva LEFT JOIN personas piloto on piloto.idPersona=pva.idPiloto LEFT JOIN personas instructor on instructor.idPersona=pva.idInstructor LEFT JOIN aviones a on a.registracion=pva.matricula LEFT JOIN misiones on misiones.idMision=pva.idleccion Where pva.evaluacionGeneral in("noEvaluate") and pva.fecha="2021-02-25" ORDER BY pva.fecha DESC ,id DESC
Servers\aerodynamics.com.es\QueryHistory\315<|||>1<|||>2021-02-25 15:38:18|admin_aerodynamics|31|SELECT pva.id as id, pva.idreserva as Reserva, misiones.descripcion as LESSONS, misiones.refMision as REFLESSONS, DATE_FORMAT(pva.fecha, "%d-%m-%Y") as "DATE", pva.matricula as AIRCRAFT, TIME_FORMAT(pva.block, "%H:%i") as TOTAL, TIME_FORMAT(if(pva.tiempototal is null,pva.block,pva.tiempototal), "%H:%i") as "BLOCK", TIME_FORMAT(pva.airborne, "%H:%i") as AIRBORNE, concat(piloto.nombre,"/",instructor.nombre) as CREW , TIME_FORMAT(pva.despegue, "%H:%i") as Despegue, TIME_FORMAT(pva.aterrizaje,"%H:%i") as Aterrizaje, TIME_FORMAT(pva.arranque, "%H:%i") as Arranque, TIME_FORMAT(pva.parada , "%H:%i") as Apagado, pva.hobbsout AS "HOBBSOUT", pva.hobbsin AS "HOBBSIN", pva.tachout AS "TACHOUT", pva.tachin AS "TACHIN" FROM personas_vuelos_automatizacion pva RIGHT JOIN reserva_vuelos rv on rv.idReserva=pva.idreserva LEFT JOIN personas piloto on piloto.idPersona=pva.idPiloto LEFT JOIN personas instructor on instructor.idPersona=pva.idInstructor LEFT JOIN aviones a on a.registracion=pva.matricula LEFT JOIN misiones on misiones.idMision=pva.idleccion Where pva.evaluacionGeneral in("STD") and pva.fecha="2021-02-25" ORDER BY pva.fecha DESC ,id DESC
Servers\aerodynamics.com.es\QueryHistory\316<|||>1<|||>2021-02-25 15:38:44|admin_aerodynamics|47|SELECT pva.id as id, pva.idreserva as Reserva, misiones.descripcion as LESSONS, misiones.refMision as REFLESSONS, DATE_FORMAT(pva.fecha, "%d-%m-%Y") as "DATE", pva.matricula as AIRCRAFT, TIME_FORMAT(pva.block, "%H:%i") as TOTAL, TIME_FORMAT(if(pva.tiempototal is null,pva.block,pva.tiempototal), "%H:%i") as "BLOCK", TIME_FORMAT(pva.airborne, "%H:%i") as AIRBORNE, concat(piloto.nombre,"/",instructor.nombre) as CREW , TIME_FORMAT(pva.despegue, "%H:%i") as Despegue, TIME_FORMAT(pva.aterrizaje,"%H:%i") as Aterrizaje, TIME_FORMAT(pva.arranque, "%H:%i") as Arranque, TIME_FORMAT(pva.parada , "%H:%i") as Apagado, pva.hobbsout AS "HOBBSOUT", pva.hobbsin AS "HOBBSIN", pva.tachout AS "TACHOUT", pva.tachin AS "TACHIN" FROM personas_vuelos_automatizacion pva RIGHT JOIN reserva_vuelos rv on rv.idReserva=pva.idreserva LEFT JOIN personas piloto on piloto.idPersona=pva.idPiloto LEFT JOIN personas instructor on instructor.idPersona=pva.idInstructor LEFT JOIN aviones a on a.registracion=pva.matricula LEFT JOIN misiones on misiones.idMision=pva.idleccion Where pva.evaluacionGeneral LIKE "%noEvaluate%" and pva.fecha="2021-02-25" ORDER BY pva.fecha DESC ,id DESC
Servers\aerodynamics.com.es\QueryHistory\317<|||>1<|||>2021-02-25 15:38:57|admin_aerodynamics|47|SELECT pva.id as id, pva.idreserva as Reserva, misiones.descripcion as LESSONS, misiones.refMision as REFLESSONS, DATE_FORMAT(pva.fecha, "%d-%m-%Y") as "DATE", pva.matricula as AIRCRAFT, TIME_FORMAT(pva.block, "%H:%i") as TOTAL, TIME_FORMAT(if(pva.tiempototal is null,pva.block,pva.tiempototal), "%H:%i") as "BLOCK", TIME_FORMAT(pva.airborne, "%H:%i") as AIRBORNE, concat(piloto.nombre,"/",instructor.nombre) as CREW , TIME_FORMAT(pva.despegue, "%H:%i") as Despegue, TIME_FORMAT(pva.aterrizaje,"%H:%i") as Aterrizaje, TIME_FORMAT(pva.arranque, "%H:%i") as Arranque, TIME_FORMAT(pva.parada , "%H:%i") as Apagado, pva.hobbsout AS "HOBBSOUT", pva.hobbsin AS "HOBBSIN", pva.tachout AS "TACHOUT", pva.tachin AS "TACHIN" FROM personas_vuelos_automatizacion pva RIGHT JOIN reserva_vuelos rv on rv.idReserva=pva.idreserva LEFT JOIN personas piloto on piloto.idPersona=pva.idPiloto LEFT JOIN personas instructor on instructor.idPersona=pva.idInstructor LEFT JOIN aviones a on a.registracion=pva.matricula LEFT JOIN misiones on misiones.idMision=pva.idleccion Where pva.evaluacionGeneral LIKE "%STD%" and pva.fecha="2021-02-25" ORDER BY pva.fecha DESC ,id DESC
Servers\aerodynamics.com.es\QueryHistory\318<|||>1<|||>2021-02-25 15:39:49|admin_aerodynamics|47|SELECT pva.id as id, pva.idreserva as Reserva, misiones.descripcion as LESSONS, misiones.refMision as REFLESSONS, DATE_FORMAT(pva.fecha, "%d-%m-%Y") as "DATE", pva.matricula as AIRCRAFT, TIME_FORMAT(pva.block, "%H:%i") as TOTAL, TIME_FORMAT(if(pva.tiempototal is null,pva.block,pva.tiempototal), "%H:%i") as "BLOCK", TIME_FORMAT(pva.airborne, "%H:%i") as AIRBORNE, concat(piloto.nombre,"/",instructor.nombre) as CREW , TIME_FORMAT(pva.despegue, "%H:%i") as Despegue, TIME_FORMAT(pva.aterrizaje,"%H:%i") as Aterrizaje, TIME_FORMAT(pva.arranque, "%H:%i") as Arranque, TIME_FORMAT(pva.parada , "%H:%i") as Apagado, pva.hobbsout AS "HOBBSOUT", pva.hobbsin AS "HOBBSIN", pva.tachout AS "TACHOUT", pva.tachin AS "TACHIN" FROM personas_vuelos_automatizacion pva RIGHT JOIN reserva_vuelos rv on rv.idReserva=pva.idreserva LEFT JOIN personas piloto on piloto.idPersona=pva.idPiloto LEFT JOIN personas instructor on instructor.idPersona=pva.idInstructor LEFT JOIN aviones a on a.registracion=pva.matricula LEFT JOIN misiones on misiones.idMision=pva.idleccion Where pva.evaluacionGeneral LIKE "%STD%"  ORDER BY pva.fecha DESC ,id DESC
Servers\aerodynamics.com.es\QueryHistory\319<|||>1<|||>2021-02-25 15:40:12|admin_aerodynamics|46|SELECT pva.id as id, pva.idreserva as Reserva, misiones.descripcion as LESSONS, misiones.refMision as REFLESSONS, DATE_FORMAT(pva.fecha, "%d-%m-%Y") as "DATE", pva.matricula as AIRCRAFT, TIME_FORMAT(pva.block, "%H:%i") as TOTAL, TIME_FORMAT(if(pva.tiempototal is null,pva.block,pva.tiempototal), "%H:%i") as "BLOCK", TIME_FORMAT(pva.airborne, "%H:%i") as AIRBORNE, concat(piloto.nombre,"/",instructor.nombre) as CREW , TIME_FORMAT(pva.despegue, "%H:%i") as Despegue, TIME_FORMAT(pva.aterrizaje,"%H:%i") as Aterrizaje, TIME_FORMAT(pva.arranque, "%H:%i") as Arranque, TIME_FORMAT(pva.parada , "%H:%i") as Apagado, pva.hobbsout AS "HOBBSOUT", pva.hobbsin AS "HOBBSIN", pva.tachout AS "TACHOUT", pva.tachin AS "TACHIN" FROM personas_vuelos_automatizacion pva RIGHT JOIN reserva_vuelos rv on rv.idReserva=pva.idreserva LEFT JOIN personas piloto on piloto.idPersona=pva.idPiloto LEFT JOIN personas instructor on instructor.idPersona=pva.idInstructor LEFT JOIN aviones a on a.registracion=pva.matricula LEFT JOIN misiones on misiones.idMision=pva.idleccion Where pva.evaluacionGeneral IN ('STD')  ORDER BY pva.fecha DESC ,id DESC
Servers\aerodynamics.com.es\QueryHistory\320<|||>1<|||>2021-02-25 15:41:31|admin_aerodynamics|203|SELECT pva.id as id, pva.idreserva as Reserva, misiones.descripcion as LESSONS, misiones.refMision as REFLESSONS, DATE_FORMAT(pva.fecha, "%d-%m-%Y") as "DATE", pva.matricula as AIRCRAFT, TIME_FORMAT(pva.block, "%H:%i") as TOTAL, TIME_FORMAT(if(pva.tiempototal is null,pva.block,pva.tiempototal), "%H:%i") as "BLOCK", TIME_FORMAT(pva.airborne, "%H:%i") as AIRBORNE, concat(piloto.nombre,"/",instructor.nombre) as CREW , TIME_FORMAT(pva.despegue, "%H:%i") as Despegue, TIME_FORMAT(pva.aterrizaje,"%H:%i") as Aterrizaje, TIME_FORMAT(pva.arranque, "%H:%i") as Arranque, TIME_FORMAT(pva.parada , "%H:%i") as Apagado, pva.hobbsout AS "HOBBSOUT", pva.hobbsin AS "HOBBSIN", pva.tachout AS "TACHOUT", pva.tachin AS "TACHIN" FROM personas_vuelos_automatizacion pva RIGHT JOIN reserva_vuelos rv on rv.idReserva=pva.idreserva LEFT JOIN personas piloto on piloto.idPersona=pva.idPiloto LEFT JOIN personas instructor on instructor.idPersona=pva.idInstructor LEFT JOIN aviones a on a.registracion=pva.matricula LEFT JOIN misiones on misiones.idMision=pva.idleccion Where pva.evaluacionGeneral in("noEvaluate") and pva.fecha between '2020-11-25' and '2021-02-25' ORDER BY pva.fecha DESC ,id DESC
Servers\aerodynamics.com.es\QueryHistory\321<|||>1<|||>2021-02-25 15:41:44|admin_aerodynamics|156|SELECT pva.id as id, pva.idreserva as Reserva, misiones.descripcion as LESSONS, misiones.refMision as REFLESSONS, DATE_FORMAT(pva.fecha, "%d-%m-%Y") as "DATE", pva.matricula as AIRCRAFT, TIME_FORMAT(pva.block, "%H:%i") as TOTAL, TIME_FORMAT(if(pva.tiempototal is null,pva.block,pva.tiempototal), "%H:%i") as "BLOCK", TIME_FORMAT(pva.airborne, "%H:%i") as AIRBORNE, concat(piloto.nombre,"/",instructor.nombre) as CREW , TIME_FORMAT(pva.despegue, "%H:%i") as Despegue, TIME_FORMAT(pva.aterrizaje,"%H:%i") as Aterrizaje, TIME_FORMAT(pva.arranque, "%H:%i") as Arranque, TIME_FORMAT(pva.parada , "%H:%i") as Apagado, pva.hobbsout AS "HOBBSOUT", pva.hobbsin AS "HOBBSIN", pva.tachout AS "TACHOUT", pva.tachin AS "TACHIN" FROM personas_vuelos_automatizacion pva RIGHT JOIN reserva_vuelos rv on rv.idReserva=pva.idreserva LEFT JOIN personas piloto on piloto.idPersona=pva.idPiloto LEFT JOIN personas instructor on instructor.idPersona=pva.idInstructor LEFT JOIN aviones a on a.registracion=pva.matricula LEFT JOIN misiones on misiones.idMision=pva.idleccion Where pva.evaluacionGeneral in("noEvaluate","STD") and pva.fecha between '2020-11-25' and '2021-02-25' ORDER BY pva.fecha DESC ,id DESC
Servers\aerodynamics.com.es\QueryHistory\322<|||>1<|||>2021-02-25 15:41:52|admin_aerodynamics|47|SELECT pva.id as id, pva.idreserva as Reserva, misiones.descripcion as LESSONS, misiones.refMision as REFLESSONS, DATE_FORMAT(pva.fecha, "%d-%m-%Y") as "DATE", pva.matricula as AIRCRAFT, TIME_FORMAT(pva.block, "%H:%i") as TOTAL, TIME_FORMAT(if(pva.tiempototal is null,pva.block,pva.tiempototal), "%H:%i") as "BLOCK", TIME_FORMAT(pva.airborne, "%H:%i") as AIRBORNE, concat(piloto.nombre,"/",instructor.nombre) as CREW , TIME_FORMAT(pva.despegue, "%H:%i") as Despegue, TIME_FORMAT(pva.aterrizaje,"%H:%i") as Aterrizaje, TIME_FORMAT(pva.arranque, "%H:%i") as Arranque, TIME_FORMAT(pva.parada , "%H:%i") as Apagado, pva.hobbsout AS "HOBBSOUT", pva.hobbsin AS "HOBBSIN", pva.tachout AS "TACHOUT", pva.tachin AS "TACHIN" FROM personas_vuelos_automatizacion pva RIGHT JOIN reserva_vuelos rv on rv.idReserva=pva.idreserva LEFT JOIN personas piloto on piloto.idPersona=pva.idPiloto LEFT JOIN personas instructor on instructor.idPersona=pva.idInstructor LEFT JOIN aviones a on a.registracion=pva.matricula LEFT JOIN misiones on misiones.idMision=pva.idleccion Where pva.evaluacionGeneral in("STD+","STD") and pva.fecha between '2020-11-25' and '2021-02-25' ORDER BY pva.fecha DESC ,id DESC
Servers\aerodynamics.com.es\QueryHistory\323<|||>1<|||>2021-02-25 16:43:24|admin_aerodynamics|282|SELECT <{{{><}}}>		pva.id as id,<{{{><}}}>      pva.idreserva as Reserva,<{{{><}}}>		misiones.descripcion as LESSONS,<{{{><}}}>		misiones.refMision as REFLESSONS,<{{{><}}}>		DATE_FORMAT(pva.fecha, "%d-%m-%Y") as "DATE",<{{{><}}}>		pva.matricula as AIRCRAFT,<{{{><}}}>		TIME_FORMAT(pva.block, "%H:%i") as TOTAL,<{{{><}}}>		TIME_FORMAT(if(pva.tiempototal is null,pva.block,pva.tiempototal), "%H:%i") as "BLOCK",<{{{><}}}>		TIME_FORMAT(pva.airborne, "%H:%i") as AIRBORNE,<{{{><}}}>		concat(piloto.nombre,"/",instructor.nombre) as CREW ,<{{{><}}}>		TIME_FORMAT(pva.despegue, "%H:%i") as Despegue,<{{{><}}}>		TIME_FORMAT(pva.aterrizaje,"%H:%i") as Aterrizaje,<{{{><}}}>		TIME_FORMAT(pva.arranque, "%H:%i") as Arranque,<{{{><}}}>		TIME_FORMAT(pva.parada , "%H:%i") as Apagado,<{{{><}}}>        pva.hobbsout AS "HOBBSOUT",<{{{><}}}>        pva.hobbsin AS "HOBBSIN",<{{{><}}}>        pva.tachout AS "TACHOUT",<{{{><}}}>        pva.tachin AS "TACHIN"<{{{><}}}>        FROM personas_vuelos_automatizacion pva<{{{><}}}>        LEFT JOIN reserva_vuelos rv on rv.idReserva=pva.idreserva<{{{><}}}>        LEFT JOIN personas piloto on piloto.idPersona=pva.idpiloto<{{{><}}}>        LEFT JOIN personas instructor on instructor.idPersona=pva.idinstructor<{{{><}}}>        LEFT JOIN misiones on misiones.idMision=pva.idleccion<{{{><}}}>        ORDER BY pva.fecha DESC ,id DESC
Servers\aerodynamics.com.es\QueryHistory\324<|||>1<|||>2021-02-25 16:44:07|admin_aerodynamics|188|SELECT <{{{><}}}>		pva.id as id,<{{{><}}}>      pva.idreserva as Reserva,<{{{><}}}>		misiones.descripcion as LESSONS,<{{{><}}}>		DATE_FORMAT(pva.fecha, "%d-%m-%Y") as "DATE",<{{{><}}}>		pva.matricula as AIRCRAFT,<{{{><}}}>		TIME_FORMAT(pva.block, "%H:%i") as TOTAL,<{{{><}}}>		TIME_FORMAT(if(pva.tiempototal is null,pva.block,pva.tiempototal), "%H:%i") as "BLOCK",<{{{><}}}>		TIME_FORMAT(pva.airborne, "%H:%i") as AIRBORNE,<{{{><}}}>		concat(piloto.nombre,"/",instructor.nombre) as CREW ,<{{{><}}}>		TIME_FORMAT(pva.despegue, "%H:%i") as Despegue,<{{{><}}}>		TIME_FORMAT(pva.aterrizaje,"%H:%i") as Aterrizaje,<{{{><}}}>		TIME_FORMAT(pva.arranque, "%H:%i") as Arranque,<{{{><}}}>		TIME_FORMAT(pva.parada , "%H:%i") as Apagado,<{{{><}}}>        CONCAT(pva.lugarSalida,"-",pva.lugarLlegada) AS "ROUTE"<{{{><}}}>        FROM personas_vuelos_automatizacion pva<{{{><}}}>        LEFT JOIN reserva_vuelos rv on rv.idReserva=pva.idreserva<{{{><}}}>        LEFT JOIN personas piloto on piloto.idPersona=pva.idpiloto<{{{><}}}>        LEFT JOIN personas instructor on instructor.idPersona=pva.idinstructor<{{{><}}}>        LEFT JOIN misiones on misiones.idMision=pva.idleccion<{{{><}}}>        ORDER BY pva.fecha DESC ,id DESC
Servers\aerodynamics.com.es\QueryHistory\325<|||>1<|||>2021-02-25 16:44:35|admin_aerodynamics|172|SELECT <{{{><}}}>		pva.id as id,<{{{><}}}>      pva.idreserva as Reserva,<{{{><}}}>		misiones.descripcion as LESSONS,<{{{><}}}>		misiones.refMision as REFLESSONS,<{{{><}}}>		DATE_FORMAT(pva.fecha, "%d-%m-%Y") as "DATE",<{{{><}}}>		pva.matricula as AIRCRAFT,<{{{><}}}>		TIME_FORMAT(pva.block, "%H:%i") as TOTAL,<{{{><}}}>		TIME_FORMAT(if(pva.tiempototal is null,pva.block,pva.tiempototal), "%H:%i") as "BLOCK",<{{{><}}}>		TIME_FORMAT(pva.airborne, "%H:%i") as AIRBORNE,<{{{><}}}>		concat(piloto.nombre,"/",instructor.nombre) as CREW ,<{{{><}}}>		TIME_FORMAT(pva.despegue, "%H:%i") as Despegue,<{{{><}}}>		TIME_FORMAT(pva.aterrizaje,"%H:%i") as Aterrizaje,<{{{><}}}>		TIME_FORMAT(pva.arranque, "%H:%i") as Arranque,<{{{><}}}>		TIME_FORMAT(pva.parada , "%H:%i") as Apagado,<{{{><}}}>        pva.hobbsout AS "HOBBSOUT",<{{{><}}}>        pva.hobbsin AS "HOBBSIN",<{{{><}}}>        pva.tachout AS "TACHOUT",<{{{><}}}>        pva.tachin AS "TACHIN"<{{{><}}}>        FROM personas_vuelos_automatizacion pva<{{{><}}}>        RIGHT JOIN reserva_vuelos rv on rv.idReserva=pva.idreserva<{{{><}}}>        LEFT JOIN personas piloto on piloto.idPersona=pva.idPiloto<{{{><}}}>        LEFT JOIN personas instructor on instructor.idPersona=pva.idInstructor<{{{><}}}>        LEFT JOIN aviones a on a.registracion=pva.matricula<{{{><}}}>        LEFT JOIN misiones on misiones.idMision=pva.idleccion
Servers\aerodynamics.com.es\QueryHistory\326<|||>1<|||>2021-02-25 22:17:30|admin_aerodynamics|46|UPDATE personas_experiencia_previa SET `CURSO`="prueba",`TOTALVUELO`="00:00:00",`TOTALVUELODAY`="00:00:00",`TOTALVUELONIGHT`="00:00:00",`SE`="00:00:00",`ME`="00:00:00",`XCSOLO`="00:00:00",`XCDUAL`="00:00:00",`VFR`="05:00:00",`IFR`="00:00:00",`IFRSIM`="00:00:00",`PIC`="00:00:00",`COPILOT`="00:00:00",`DUAL`="00:00:00",`INSTRUCTOR`="00:00:00",`FSTD`="00:00:00",`LANDINGSDAY`="0",`LANDINGSNIGHT`="0" where id=5
Servers\aerodynamics.com.es\QueryHistory\327<|||>1<|||>2021-02-25 22:18:07|admin_aerodynamics|47|UPDATE personas_experiencia_previa SET `CURSO`="prueba",`TOTALVUELO`="00:00:00",`TOTALVUELODAY`="00:00:00",`TOTALVUELONIGHT`="00:00:00",`SE`="00:00:00",`ME`="00:00:00",`XCSOLO`="00:00:00",`XCDUAL`="00:00:00",`VFR`="05:05:00",`IFR`="00:00:00",`IFRSIM`="00:00:00",`PIC`="00:00:00",`COPILOT`="00:00:00",`DUAL`="00:00:00",`INSTRUCTOR`="00:00:00",`FSTD`="00:00:00",`LANDINGSDAY`="0",`LANDINGSNIGHT`="0" where id=5
Servers\aerodynamics.com.es\QueryHistory\328<|||>1<|||>2021-02-25 22:52:13|admin_aerodynamics|1531|select * FROM (select vuelos.idReserva AS idReserva,vuelos.idVuelo AS idVuelo,vuelos.idCurso AS<{{{><}}}>idCurso,vuelos.DATE AS DATE,vuelos.DEPARTUREPLACE AS DEPARTUREPLACE,vuelos.DEPARTURETIME AS<{{{><}}}>DEPARTURETIME,vuelos.ARRIVALPLACE AS ARRIVALPLACE,vuelos.ARRIVALTIME AS<{{{><}}}>ARRIVALTIME,vuelos.AIRCRAFTMODEL AS AIRCRAFTMODEL,vuelos.AIRCRAFTREGISTRATION AS<{{{><}}}>AIRCRAFTREGISTRATION,vuelos.PICNAME AS PICNAME,vuelos.REMARKS AS REMARKS,vuelos.PILOTO AS<{{{><}}}>PILOTO,vuelos.CURSO AS CURSO,vuelos.TOTALVUELO AS TOTALVUELO,vuelos.TOTALVUELODAY AS<{{{><}}}>TOTALVUELODAY,vuelos.TOTALVUELONIGHT AS TOTALVUELONIGHT,vuelos.SE AS SE,vuelos.ME AS<{{{><}}}>ME,vuelos.XCSOLO AS XCSOLO,vuelos.XCDUAL AS XCDUAL,vuelos.VFR AS VFR,vuelos.IFR AS<{{{><}}}>IFR,vuelos.IFRSIM AS IFRSIM,vuelos.PIC AS PIC,vuelos.COPILOT AS COPILOT,vuelos.DUAL AS<{{{><}}}>'DUAL',vuelos.INSTRUCTOR AS INSTRUCTOR,vuelos.FSTD AS FSTD,vuelos.LANDINGSDAY AS<{{{><}}}>LANDINGSDAY,vuelos.LANDINGSNIGHT AS LANDINGSNIGHT from ((select<{{{><}}}>vista_logbook_piloto_completo_resumen.idReserva AS idReserva,vista_logbook_piloto_completo_resumen.idVuelo AS<{{{><}}}>idVuelo,vista_logbook_piloto_completo_resumen.idCurso AS idCurso,vista_logbook_piloto_completo_resumen.DATE<{{{><}}}>AS DATE,vista_logbook_piloto_completo_resumen.DEPARTUREPLACE AS<{{{><}}}>DEPARTUREPLACE,vista_logbook_piloto_completo_resumen.DEPARTURETIME AS<{{{><}}}>DEPARTURETIME,vista_logbook_piloto_completo_resumen.ARRIVALPLACE AS<{{{><}}}>ARRIVALPLACE,vista_logbook_piloto_completo_resumen.ARRIVALTIME AS<{{{><}}}>ARRIVALTIME,vista_logbook_piloto_completo_resumen.AIRCRAFTMODEL AS<{{{><}}}>AIRCRAFTMODEL,vista_logbook_piloto_completo_resumen.AIRCRAFTREGISTRATION AS<{{{><}}}>AIRCRAFTREGISTRATION,vista_logbook_piloto_completo_resumen.PICNAME AS<{{{><}}}>PICNAME,vista_logbook_piloto_completo_resumen.REMARKS AS<{{{><}}}>REMARKS,vista_logbook_piloto_completo_resumen.PILOTO AS PILOTO,vista_logbook_piloto_completo_resumen.CURSO<{{{><}}}>AS CURSO,vista_logbook_piloto_completo_resumen.TOTALVUELO AS<{{{><}}}>TOTALVUELO,vista_logbook_piloto_completo_resumen.TOTALVUELODAY AS<{{{><}}}>TOTALVUELODAY,vista_logbook_piloto_completo_resumen.TOTALVUELONIGHT AS<{{{><}}}>TOTALVUELONIGHT,vista_logbook_piloto_completo_resumen.SE AS SE,vista_logbook_piloto_completo_resumen.ME AS<{{{><}}}>ME,vista_logbook_piloto_completo_resumen.XCSOLO AS XCSOLO,vista_logbook_piloto_completo_resumen.XCDUAL AS<{{{><}}}>XCDUAL,vista_logbook_piloto_completo_resumen.VFR AS VFR,vista_logbook_piloto_completo_resumen.IFR AS<{{{><}}}>IFR,vista_logbook_piloto_completo_resumen.IFRSIM AS IFRSIM,vista_logbook_piloto_completo_resumen.PIC AS<{{{><}}}>PIC,vista_logbook_piloto_completo_resumen.COPILOT AS COPILOT,vista_logbook_piloto_completo_resumen.DUAL AS<{{{><}}}>'DUAL',vista_logbook_piloto_completo_resumen.INSTRUCTOR AS<{{{><}}}>INSTRUCTOR,vista_logbook_piloto_completo_resumen.FSTD AS<{{{><}}}>FSTD,vista_logbook_piloto_completo_resumen.LANDINGSDAY AS<{{{><}}}>LANDINGSDAY,vista_logbook_piloto_completo_resumen.LANDINGSNIGHT AS LANDINGSNIGHT from<{{{><}}}>admin_aerodynamics.vista_logbook_piloto_completo_resumen) union <{{{><}}}>(select<{{{><}}}>vista_logbook_instructor_completo_resumen.idReserva AS idReserva,<{{{><}}}>vista_logbook_instructor_completo_resumen.idVuelo AS idVuelo,<{{{><}}}>vista_logbook_instructor_completo_resumen.idCurso AS idCurso,<{{{><}}}>vista_logbook_instructor_completo_resumen.DATE AS DATE,<{{{><}}}>vista_logbook_instructor_completo_resumen.DEPARTUREPLACE AS DEPARTUREPLACE,<{{{><}}}>vista_logbook_instructor_completo_resumen.DEPARTURETIME AS DEPARTURETIME,<{{{><}}}>vista_logbook_instructor_completo_resumen.ARRIVALPLACE AS ARRIVALPLACE,<{{{><}}}>vista_logbook_instructor_completo_resumen.ARRIVALTIME AS ARRIVALTIME,<{{{><}}}>vista_logbook_instructor_completo_resumen.AIRCRAFTMODEL AS AIRCRAFTMODEL,<{{{><}}}>vista_logbook_instructor_completo_resumen.AIRCRAFTREGISTRATION AS AIRCRAFTREGISTRATION,<{{{><}}}>vista_logbook_instructor_completo_resumen.PICNAME AS PICNAME,<{{{><}}}>vista_logbook_instructor_completo_resumen.REMARKS AS REMARKS,<{{{><}}}>vista_logbook_instructor_completo_resumen.PILOTO AS PILOTO,<{{{><}}}>vista_logbook_instructor_completo_resumen.CURSO AS CURSO,<{{{><}}}>vista_logbook_instructor_completo_resumen.TOTALVUELO AS TOTALVUELO,<{{{><}}}>vista_logbook_instructor_completo_resumen.TOTALVUELODAY AS TOTALVUELODAY,<{{{><}}}>vista_logbook_instructor_completo_resumen.TOTALVUELONIGHT AS TOTALVUELONIGHT,<{{{><}}}>vista_logbook_instructor_completo_resumen.SE AS SE,<{{{><}}}>vista_logbook_instructor_completo_resumen.ME AS ME,<{{{><}}}>vista_logbook_instructor_completo_resumen.XCSOLO AS XCSOLO,<{{{><}}}>vista_logbook_instructor_completo_resumen.XCDUAL AS XCDUAL,<{{{><}}}>vista_logbook_instructor_completo_resumen.VFR AS VFR,<{{{><}}}>vista_logbook_instructor_completo_resumen.IFR AS IFR,<{{{><}}}>vista_logbook_instructor_completo_resumen.IFRSIM AS IFRSIM,<{{{><}}}>vista_logbook_instructor_completo_resumen.PIC AS PIC,<{{{><}}}>vista_logbook_instructor_completo_resumen.COPILOT AS COPILOT,<{{{><}}}>vista_logbook_instructor_completo_resumen.DUAL AS 'DUAL',<{{{><}}}>vista_logbook_instructor_completo_resumen.INSTRUCTOR AS INSTRUCTOR,<{{{><}}}>vista_logbook_instructor_completo_resumen.FSTD AS FSTD,<{{{><}}}>vista_logbook_instructor_completo_resumen.LANDINGSDAY AS LANDINGSDAY,<{{{><}}}>vista_logbook_instructor_completo_resumen.LANDINGSNIGHT AS LANDINGSNIGHT <{{{><}}}>from admin_aerodynamics.vista_logbook_instructor_completo_resumen)<{{{><}}}> ) vuelos group by<{{{><}}}>vuelos.PILOTO,vuelos.idCurso<{{{><}}}>union <{{{><}}}>(select<{{{><}}}>'0' AS idReserva,<{{{><}}}>'0' AS idVuelo,<{{{><}}}>'0' AS idCurso,<{{{><}}}>'0000-00-00' AS DATE,<{{{><}}}>'EXPPREVIA' AS DEPARTUREPLACE,<{{{><}}}>'00:00:00' AS DEPARTURETIME,<{{{><}}}>'EXPPREVIA' AS ARRIVALPLACE,<{{{><}}}>'00:00:00' AS ARRIVALTIME,<{{{><}}}>'EXPPREVIA' AS AIRCRAFTMODEL,<{{{><}}}>'EXPPREVIA' AS AIRCRAFTREGISTRATION,<{{{><}}}>'EXPPREVIA' AS PICNAME,<{{{><}}}>CURSO AS REMARKS,<{{{><}}}>idPiloto AS PILOTO,<{{{><}}}>CURSO AS CURSO,<{{{><}}}>TOTALVUELO AS TOTALVUELO,<{{{><}}}>TOTALVUELODAY AS TOTALVUELODAY,<{{{><}}}>TOTALVUELONIGHT AS TOTALVUELONIGHT,<{{{><}}}>SE AS SE,<{{{><}}}>ME AS ME,<{{{><}}}>XCSOLO AS XCSOLO,<{{{><}}}>XCDUAL AS XCDUAL,<{{{><}}}>VFR AS VFR,<{{{><}}}>IFR AS IFR,<{{{><}}}>IFRSIM AS IFRSIM,<{{{><}}}>PIC AS PIC,<{{{><}}}>COPILOT AS COPILOT,<{{{><}}}>'DUAL' AS 'DUAL',<{{{><}}}>INSTRUCTOR AS INSTRUCTOR,<{{{><}}}>FSTD AS FSTD,<{{{><}}}>LANDINGSDAY AS LANDINGSDAY,<{{{><}}}>LANDINGSNIGHT AS LANDINGSNIGHT <{{{><}}}>from personas_experiencia_previa GROUP BY id)) vuelos_experiencia
Servers\aerodynamics.com.es\QueryHistory\330<|||>1<|||>2021-02-25 22:54:39|admin_aerodynamics|422|select * FROM (select vuelos.idReserva AS idReserva,vuelos.idVuelo AS idVuelo,vuelos.idCurso AS<{{{><}}}>idCurso,vuelos.DATE AS DATE,vuelos.DEPARTUREPLACE AS DEPARTUREPLACE,vuelos.DEPARTURETIME AS<{{{><}}}>DEPARTURETIME,vuelos.ARRIVALPLACE AS ARRIVALPLACE,vuelos.ARRIVALTIME AS<{{{><}}}>ARRIVALTIME,vuelos.AIRCRAFTMODEL AS AIRCRAFTMODEL,vuelos.AIRCRAFTREGISTRATION AS<{{{><}}}>AIRCRAFTREGISTRATION,vuelos.PICNAME AS PICNAME,vuelos.REMARKS AS REMARKS,vuelos.PILOTO AS<{{{><}}}>PILOTO,vuelos.CURSO AS CURSO,vuelos.TOTALVUELO AS TOTALVUELO,vuelos.TOTALVUELODAY AS<{{{><}}}>TOTALVUELODAY,vuelos.TOTALVUELONIGHT AS TOTALVUELONIGHT,vuelos.SE AS SE,vuelos.ME AS<{{{><}}}>ME,vuelos.XCSOLO AS XCSOLO,vuelos.XCDUAL AS XCDUAL,vuelos.VFR AS VFR,vuelos.IFR AS<{{{><}}}>IFR,vuelos.IFRSIM AS IFRSIM,vuelos.PIC AS PIC,vuelos.COPILOT AS COPILOT,vuelos.DUAL AS<{{{><}}}>'DUAL',vuelos.INSTRUCTOR AS INSTRUCTOR,vuelos.FSTD AS FSTD,vuelos.LANDINGSDAY AS<{{{><}}}>LANDINGSDAY,vuelos.LANDINGSNIGHT AS LANDINGSNIGHT from ((select<{{{><}}}>vista_logbook_piloto_completo_resumen.idReserva AS idReserva,vista_logbook_piloto_completo_resumen.idVuelo AS<{{{><}}}>idVuelo,vista_logbook_piloto_completo_resumen.idCurso AS idCurso,vista_logbook_piloto_completo_resumen.DATE<{{{><}}}>AS DATE,vista_logbook_piloto_completo_resumen.DEPARTUREPLACE AS<{{{><}}}>DEPARTUREPLACE,vista_logbook_piloto_completo_resumen.DEPARTURETIME AS<{{{><}}}>DEPARTURETIME,vista_logbook_piloto_completo_resumen.ARRIVALPLACE AS<{{{><}}}>ARRIVALPLACE,vista_logbook_piloto_completo_resumen.ARRIVALTIME AS<{{{><}}}>ARRIVALTIME,vista_logbook_piloto_completo_resumen.AIRCRAFTMODEL AS<{{{><}}}>AIRCRAFTMODEL,vista_logbook_piloto_completo_resumen.AIRCRAFTREGISTRATION AS<{{{><}}}>AIRCRAFTREGISTRATION,vista_logbook_piloto_completo_resumen.PICNAME AS<{{{><}}}>PICNAME,vista_logbook_piloto_completo_resumen.REMARKS AS<{{{><}}}>REMARKS,vista_logbook_piloto_completo_resumen.PILOTO AS PILOTO,vista_logbook_piloto_completo_resumen.CURSO<{{{><}}}>AS CURSO,vista_logbook_piloto_completo_resumen.TOTALVUELO AS<{{{><}}}>TOTALVUELO,vista_logbook_piloto_completo_resumen.TOTALVUELODAY AS<{{{><}}}>TOTALVUELODAY,vista_logbook_piloto_completo_resumen.TOTALVUELONIGHT AS<{{{><}}}>TOTALVUELONIGHT,vista_logbook_piloto_completo_resumen.SE AS SE,vista_logbook_piloto_completo_resumen.ME AS<{{{><}}}>ME,vista_logbook_piloto_completo_resumen.XCSOLO AS XCSOLO,vista_logbook_piloto_completo_resumen.XCDUAL AS<{{{><}}}>XCDUAL,vista_logbook_piloto_completo_resumen.VFR AS VFR,vista_logbook_piloto_completo_resumen.IFR AS<{{{><}}}>IFR,vista_logbook_piloto_completo_resumen.IFRSIM AS IFRSIM,vista_logbook_piloto_completo_resumen.PIC AS<{{{><}}}>PIC,vista_logbook_piloto_completo_resumen.COPILOT AS COPILOT,vista_logbook_piloto_completo_resumen.DUAL AS<{{{><}}}>'DUAL',vista_logbook_piloto_completo_resumen.INSTRUCTOR AS<{{{><}}}>INSTRUCTOR,vista_logbook_piloto_completo_resumen.FSTD AS<{{{><}}}>FSTD,vista_logbook_piloto_completo_resumen.LANDINGSDAY AS<{{{><}}}>LANDINGSDAY,vista_logbook_piloto_completo_resumen.LANDINGSNIGHT AS LANDINGSNIGHT from<{{{><}}}>admin_aerodynamics.vista_logbook_piloto_completo_resumen) union <{{{><}}}>(select<{{{><}}}>vista_logbook_instructor_completo_resumen.idReserva AS idReserva,<{{{><}}}>vista_logbook_instructor_completo_resumen.idVuelo AS idVuelo,<{{{><}}}>vista_logbook_instructor_completo_resumen.idCurso AS idCurso,<{{{><}}}>vista_logbook_instructor_completo_resumen.DATE AS DATE,<{{{><}}}>vista_logbook_instructor_completo_resumen.DEPARTUREPLACE AS DEPARTUREPLACE,<{{{><}}}>vista_logbook_instructor_completo_resumen.DEPARTURETIME AS DEPARTURETIME,<{{{><}}}>vista_logbook_instructor_completo_resumen.ARRIVALPLACE AS ARRIVALPLACE,<{{{><}}}>vista_logbook_instructor_completo_resumen.ARRIVALTIME AS ARRIVALTIME,<{{{><}}}>vista_logbook_instructor_completo_resumen.AIRCRAFTMODEL AS AIRCRAFTMODEL,<{{{><}}}>vista_logbook_instructor_completo_resumen.AIRCRAFTREGISTRATION AS AIRCRAFTREGISTRATION,<{{{><}}}>vista_logbook_instructor_completo_resumen.PICNAME AS PICNAME,<{{{><}}}>vista_logbook_instructor_completo_resumen.REMARKS AS REMARKS,<{{{><}}}>vista_logbook_instructor_completo_resumen.PILOTO AS PILOTO,<{{{><}}}>vista_logbook_instructor_completo_resumen.CURSO AS CURSO,<{{{><}}}>vista_logbook_instructor_completo_resumen.TOTALVUELO AS TOTALVUELO,<{{{><}}}>vista_logbook_instructor_completo_resumen.TOTALVUELODAY AS TOTALVUELODAY,<{{{><}}}>vista_logbook_instructor_completo_resumen.TOTALVUELONIGHT AS TOTALVUELONIGHT,<{{{><}}}>vista_logbook_instructor_completo_resumen.SE AS SE,<{{{><}}}>vista_logbook_instructor_completo_resumen.ME AS ME,<{{{><}}}>vista_logbook_instructor_completo_resumen.XCSOLO AS XCSOLO,<{{{><}}}>vista_logbook_instructor_completo_resumen.XCDUAL AS XCDUAL,<{{{><}}}>vista_logbook_instructor_completo_resumen.VFR AS VFR,<{{{><}}}>vista_logbook_instructor_completo_resumen.IFR AS IFR,<{{{><}}}>vista_logbook_instructor_completo_resumen.IFRSIM AS IFRSIM,<{{{><}}}>vista_logbook_instructor_completo_resumen.PIC AS PIC,<{{{><}}}>vista_logbook_instructor_completo_resumen.COPILOT AS COPILOT,<{{{><}}}>vista_logbook_instructor_completo_resumen.DUAL AS 'DUAL',<{{{><}}}>vista_logbook_instructor_completo_resumen.INSTRUCTOR AS INSTRUCTOR,<{{{><}}}>vista_logbook_instructor_completo_resumen.FSTD AS FSTD,<{{{><}}}>vista_logbook_instructor_completo_resumen.LANDINGSDAY AS LANDINGSDAY,<{{{><}}}>vista_logbook_instructor_completo_resumen.LANDINGSNIGHT AS LANDINGSNIGHT <{{{><}}}>from admin_aerodynamics.vista_logbook_instructor_completo_resumen)<{{{><}}}> ) vuelos group by<{{{><}}}>vuelos.PILOTO,vuelos.idCurso<{{{><}}}>union <{{{><}}}>(select<{{{><}}}>'0' AS idReserva,<{{{><}}}>'0' AS idVuelo,<{{{><}}}>'0' AS idCurso,<{{{><}}}>'0000-00-00' AS DATE,<{{{><}}}>'EXPPREVIA' AS DEPARTUREPLACE,<{{{><}}}>'00:00:00' AS DEPARTURETIME,<{{{><}}}>'EXPPREVIA' AS ARRIVALPLACE,<{{{><}}}>'00:00:00' AS ARRIVALTIME,<{{{><}}}>'EXPPREVIA' AS AIRCRAFTMODEL,<{{{><}}}>'EXPPREVIA' AS AIRCRAFTREGISTRATION,<{{{><}}}>'EXPPREVIA' AS PICNAME,<{{{><}}}>CURSO AS REMARKS,<{{{><}}}>idPiloto AS PILOTO,<{{{><}}}>CURSO AS CURSO,<{{{><}}}>TOTALVUELO AS TOTALVUELO,<{{{><}}}>TOTALVUELODAY AS TOTALVUELODAY,<{{{><}}}>TOTALVUELONIGHT AS TOTALVUELONIGHT,<{{{><}}}>SE AS SE,<{{{><}}}>ME AS ME,<{{{><}}}>XCSOLO AS XCSOLO,<{{{><}}}>XCDUAL AS XCDUAL,<{{{><}}}>VFR AS VFR,<{{{><}}}>IFR AS IFR,<{{{><}}}>IFRSIM AS IFRSIM,<{{{><}}}>PIC AS PIC,<{{{><}}}>COPILOT AS COPILOT,<{{{><}}}>`DUAL` AS 'DUAL',<{{{><}}}>INSTRUCTOR AS INSTRUCTOR,<{{{><}}}>FSTD AS FSTD,<{{{><}}}>LANDINGSDAY AS LANDINGSDAY,<{{{><}}}>LANDINGSNIGHT AS LANDINGSNIGHT <{{{><}}}>from personas_experiencia_previa GROUP BY id)) vuelos_experiencia
Servers\aerodynamics.com.es\QueryHistory\329<|||>1<|||>2021-02-25 23:00:12|admin_aerodynamics|313|select vuelos.idReserva AS idReserva,vuelos.idVuelo AS idVuelo,vuelos.idCurso AS<{{{><}}}>idCurso,vuelos.DATE AS DATE,vuelos.DEPARTUREPLACE AS DEPARTUREPLACE,vuelos.DEPARTURETIME AS<{{{><}}}>DEPARTURETIME,vuelos.ARRIVALPLACE AS ARRIVALPLACE,vuelos.ARRIVALTIME AS<{{{><}}}>ARRIVALTIME,vuelos.AIRCRAFTMODEL AS AIRCRAFTMODEL,vuelos.AIRCRAFTREGISTRATION AS<{{{><}}}>AIRCRAFTREGISTRATION,vuelos.PICNAME AS PICNAME,vuelos.REMARKS AS REMARKS,vuelos.PILOTO AS<{{{><}}}>PILOTO,vuelos.CURSO AS CURSO,vuelos.TOTALVUELO AS TOTALVUELO,vuelos.TOTALVUELODAY AS<{{{><}}}>TOTALVUELODAY,vuelos.TOTALVUELONIGHT AS TOTALVUELONIGHT,vuelos.SE AS SE,vuelos.ME AS<{{{><}}}>ME,vuelos.XCSOLO AS XCSOLO,vuelos.XCDUAL AS XCDUAL,vuelos.VFR AS VFR,vuelos.IFR AS<{{{><}}}>IFR,vuelos.IFRSIM AS IFRSIM,vuelos.PIC AS PIC,vuelos.COPILOT AS COPILOT,vuelos.DUAL AS<{{{><}}}>'DUAL',vuelos.INSTRUCTOR AS INSTRUCTOR,vuelos.FSTD AS FSTD,vuelos.LANDINGSDAY AS<{{{><}}}>LANDINGSDAY,vuelos.LANDINGSNIGHT AS LANDINGSNIGHT from ((select<{{{><}}}>vista_logbook_piloto_completo_total.idReserva AS idReserva,vista_logbook_piloto_completo_total.idVuelo AS<{{{><}}}>idVuelo,vista_logbook_piloto_completo_total.idCurso AS idCurso,vista_logbook_piloto_completo_total.DATE AS<{{{><}}}>DATE,vista_logbook_piloto_completo_total.DEPARTUREPLACE AS<{{{><}}}>DEPARTUREPLACE,vista_logbook_piloto_completo_total.DEPARTURETIME AS<{{{><}}}>DEPARTURETIME,vista_logbook_piloto_completo_total.ARRIVALPLACE AS<{{{><}}}>ARRIVALPLACE,vista_logbook_piloto_completo_total.ARRIVALTIME AS<{{{><}}}>ARRIVALTIME,vista_logbook_piloto_completo_total.AIRCRAFTMODEL AS<{{{><}}}>AIRCRAFTMODEL,vista_logbook_piloto_completo_total.AIRCRAFTREGISTRATION AS<{{{><}}}>AIRCRAFTREGISTRATION,vista_logbook_piloto_completo_total.PICNAME AS<{{{><}}}>PICNAME,vista_logbook_piloto_completo_total.REMARKS AS REMARKS,vista_logbook_piloto_completo_total.PILOTO AS<{{{><}}}>PILOTO,vista_logbook_piloto_completo_total.CURSO AS CURSO,vista_logbook_piloto_completo_total.TOTALVUELO AS<{{{><}}}>TOTALVUELO,vista_logbook_piloto_completo_total.TOTALVUELODAY AS<{{{><}}}>TOTALVUELODAY,vista_logbook_piloto_completo_total.TOTALVUELONIGHT AS<{{{><}}}>TOTALVUELONIGHT,vista_logbook_piloto_completo_total.SE AS SE,vista_logbook_piloto_completo_total.ME AS<{{{><}}}>ME,vista_logbook_piloto_completo_total.XCSOLO AS XCSOLO,vista_logbook_piloto_completo_total.XCDUAL AS<{{{><}}}>XCDUAL,vista_logbook_piloto_completo_total.VFR AS VFR,vista_logbook_piloto_completo_total.IFR AS<{{{><}}}>IFR,vista_logbook_piloto_completo_total.IFRSIM AS IFRSIM,vista_logbook_piloto_completo_total.PIC AS<{{{><}}}>PIC,vista_logbook_piloto_completo_total.COPILOT AS COPILOT,vista_logbook_piloto_completo_total.DUAL AS<{{{><}}}>'DUAL',vista_logbook_piloto_completo_total.INSTRUCTOR AS INSTRUCTOR,vista_logbook_piloto_completo_total.FSTD<{{{><}}}>AS FSTD,vista_logbook_piloto_completo_total.LANDINGSDAY AS<{{{><}}}>LANDINGSDAY,vista_logbook_piloto_completo_total.LANDINGSNIGHT AS LANDINGSNIGHT from<{{{><}}}>admin_aerodynamics.vista_logbook_piloto_completo_total) union (select<{{{><}}}>vista_logbook_instructor_completo_total.idReserva AS idReserva,vista_logbook_instructor_completo_total.idVuelo<{{{><}}}>AS idVuelo,vista_logbook_instructor_completo_total.idCurso AS<{{{><}}}>idCurso,vista_logbook_instructor_completo_total.DATE AS<{{{><}}}>DATE,vista_logbook_instructor_completo_total.DEPARTUREPLACE AS<{{{><}}}>DEPARTUREPLACE,vista_logbook_instructor_completo_total.DEPARTURETIME AS<{{{><}}}>DEPARTURETIME,vista_logbook_instructor_completo_total.ARRIVALPLACE AS<{{{><}}}>ARRIVALPLACE,vista_logbook_instructor_completo_total.ARRIVALTIME AS<{{{><}}}>ARRIVALTIME,vista_logbook_instructor_completo_total.AIRCRAFTMODEL AS<{{{><}}}>AIRCRAFTMODEL,vista_logbook_instructor_completo_total.AIRCRAFTREGISTRATION AS<{{{><}}}>AIRCRAFTREGISTRATION,vista_logbook_instructor_completo_total.PICNAME AS<{{{><}}}>PICNAME,vista_logbook_instructor_completo_total.REMARKS AS<{{{><}}}>REMARKS,vista_logbook_instructor_completo_total.PILOTO AS<{{{><}}}>PILOTO,vista_logbook_instructor_completo_total.CURSO AS<{{{><}}}>CURSO,vista_logbook_instructor_completo_total.TOTALVUELO AS<{{{><}}}>TOTALVUELO,vista_logbook_instructor_completo_total.TOTALVUELODAY AS<{{{><}}}>TOTALVUELODAY,vista_logbook_instructor_completo_total.TOTALVUELONIGHT AS<{{{><}}}>TOTALVUELONIGHT,vista_logbook_instructor_completo_total.SE AS SE,vista_logbook_instructor_completo_total.ME<{{{><}}}>AS ME,vista_logbook_instructor_completo_total.XCSOLO AS<{{{><}}}>XCSOLO,vista_logbook_instructor_completo_total.XCDUAL AS XCDUAL,vista_logbook_instructor_completo_total.VFR<{{{><}}}>AS VFR,vista_logbook_instructor_completo_total.IFR AS IFR,vista_logbook_instructor_completo_total.IFRSIM AS<{{{><}}}>IFRSIM,vista_logbook_instructor_completo_total.PIC AS PIC,vista_logbook_instructor_completo_total.COPILOT AS<{{{><}}}>COPILOT,vista_logbook_instructor_completo_total.DUAL AS<{{{><}}}>'DUAL',vista_logbook_instructor_completo_total.INSTRUCTOR AS<{{{><}}}>INSTRUCTOR,vista_logbook_instructor_completo_total.FSTD AS<{{{><}}}>FSTD,vista_logbook_instructor_completo_total.LANDINGSDAY AS<{{{><}}}>LANDINGSDAY,vista_logbook_instructor_completo_total.LANDINGSNIGHT AS LANDINGSNIGHT from<{{{><}}}>admin_aerodynamics.vista_logbook_instructor_completo_total)<{{{><}}}>union <{{{><}}}>(select<{{{><}}}>'0' AS idReserva,<{{{><}}}>'0' AS idVuelo,<{{{><}}}>'0' AS idCurso,<{{{><}}}>'0000-00-00' AS DATE,<{{{><}}}>'EXPPREVIA' AS DEPARTUREPLACE,<{{{><}}}>'00:00:00' AS DEPARTURETIME,<{{{><}}}>'EXPPREVIA' AS ARRIVALPLACE,<{{{><}}}>'00:00:00' AS ARRIVALTIME,<{{{><}}}>'EXPPREVIA' AS AIRCRAFTMODEL,<{{{><}}}>'EXPPREVIA' AS AIRCRAFTREGISTRATION,<{{{><}}}>'EXPPREVIA' AS PICNAME,<{{{><}}}>CURSO AS REMARKS,<{{{><}}}>idPiloto AS PILOTO,<{{{><}}}>CURSO AS CURSO,<{{{><}}}>TOTALVUELO AS TOTALVUELO,<{{{><}}}>TOTALVUELODAY AS TOTALVUELODAY,<{{{><}}}>TOTALVUELONIGHT AS TOTALVUELONIGHT,<{{{><}}}>SE AS SE,<{{{><}}}>ME AS ME,<{{{><}}}>XCSOLO AS XCSOLO,<{{{><}}}>XCDUAL AS XCDUAL,<{{{><}}}>VFR AS VFR,<{{{><}}}>IFR AS IFR,<{{{><}}}>IFRSIM AS IFRSIM,<{{{><}}}>PIC AS PIC,<{{{><}}}>COPILOT AS COPILOT,<{{{><}}}>`DUAL` AS 'DUAL',<{{{><}}}>INSTRUCTOR AS INSTRUCTOR,<{{{><}}}>FSTD AS FSTD,<{{{><}}}>LANDINGSDAY AS LANDINGSDAY,<{{{><}}}>LANDINGSNIGHT AS LANDINGSNIGHT <{{{><}}}>from personas_experiencia_previa GROUP BY id)<{{{><}}}><{{{><}}}><{{{><}}}>) vuelos group by vuelos.PILOTO
Servers\aerodynamics.com.es\QueryHistory\331<|||>1<|||>2021-02-25 23:03:08|admin_aerodynamics|375|select vuelos.idReserva AS idReserva,vuelos.idVuelo AS idVuelo,vuelos.idCurso AS<{{{><}}}>idCurso,vuelos.DATE AS DATE,vuelos.DEPARTUREPLACE AS DEPARTUREPLACE,vuelos.DEPARTURETIME AS<{{{><}}}>DEPARTURETIME,vuelos.ARRIVALPLACE AS ARRIVALPLACE,vuelos.ARRIVALTIME AS<{{{><}}}>ARRIVALTIME,vuelos.AIRCRAFTMODEL AS AIRCRAFTMODEL,vuelos.AIRCRAFTREGISTRATION AS<{{{><}}}>AIRCRAFTREGISTRATION,vuelos.PICNAME AS PICNAME,vuelos.REMARKS AS REMARKS,vuelos.PILOTO AS<{{{><}}}>PILOTO,vuelos.CURSO AS CURSO,vuelos.TOTALVUELO AS TOTALVUELO,vuelos.TOTALVUELODAY AS<{{{><}}}>TOTALVUELODAY,vuelos.TOTALVUELONIGHT AS TOTALVUELONIGHT,vuelos.SE AS SE,vuelos.ME AS<{{{><}}}>ME,vuelos.XCSOLO AS XCSOLO,vuelos.XCDUAL AS XCDUAL,vuelos.VFR AS VFR,vuelos.IFR AS<{{{><}}}>IFR,vuelos.IFRSIM AS IFRSIM,vuelos.PIC AS PIC,vuelos.COPILOT AS COPILOT,vuelos.DUAL AS<{{{><}}}>'DUAL',vuelos.INSTRUCTOR AS INSTRUCTOR,vuelos.FSTD AS FSTD,vuelos.LANDINGSDAY AS<{{{><}}}>LANDINGSDAY,vuelos.LANDINGSNIGHT AS LANDINGSNIGHT from ((select<{{{><}}}>vista_logbook_piloto_completo_total.idReserva AS idReserva,vista_logbook_piloto_completo_total.idVuelo AS<{{{><}}}>idVuelo,vista_logbook_piloto_completo_total.idCurso AS idCurso,vista_logbook_piloto_completo_total.DATE AS<{{{><}}}>DATE,vista_logbook_piloto_completo_total.DEPARTUREPLACE AS<{{{><}}}>DEPARTUREPLACE,vista_logbook_piloto_completo_total.DEPARTURETIME AS<{{{><}}}>DEPARTURETIME,vista_logbook_piloto_completo_total.ARRIVALPLACE AS<{{{><}}}>ARRIVALPLACE,vista_logbook_piloto_completo_total.ARRIVALTIME AS<{{{><}}}>ARRIVALTIME,vista_logbook_piloto_completo_total.AIRCRAFTMODEL AS<{{{><}}}>AIRCRAFTMODEL,vista_logbook_piloto_completo_total.AIRCRAFTREGISTRATION AS<{{{><}}}>AIRCRAFTREGISTRATION,vista_logbook_piloto_completo_total.PICNAME AS<{{{><}}}>PICNAME,vista_logbook_piloto_completo_total.REMARKS AS REMARKS,vista_logbook_piloto_completo_total.PILOTO AS<{{{><}}}>PILOTO,vista_logbook_piloto_completo_total.CURSO AS CURSO,vista_logbook_piloto_completo_total.TOTALVUELO AS<{{{><}}}>TOTALVUELO,vista_logbook_piloto_completo_total.TOTALVUELODAY AS<{{{><}}}>TOTALVUELODAY,vista_logbook_piloto_completo_total.TOTALVUELONIGHT AS<{{{><}}}>TOTALVUELONIGHT,vista_logbook_piloto_completo_total.SE AS SE,vista_logbook_piloto_completo_total.ME AS<{{{><}}}>ME,vista_logbook_piloto_completo_total.XCSOLO AS XCSOLO,vista_logbook_piloto_completo_total.XCDUAL AS<{{{><}}}>XCDUAL,vista_logbook_piloto_completo_total.VFR AS VFR,vista_logbook_piloto_completo_total.IFR AS<{{{><}}}>IFR,vista_logbook_piloto_completo_total.IFRSIM AS IFRSIM,vista_logbook_piloto_completo_total.PIC AS<{{{><}}}>PIC,vista_logbook_piloto_completo_total.COPILOT AS COPILOT,vista_logbook_piloto_completo_total.DUAL AS<{{{><}}}>'DUAL',vista_logbook_piloto_completo_total.INSTRUCTOR AS INSTRUCTOR,vista_logbook_piloto_completo_total.FSTD<{{{><}}}>AS FSTD,vista_logbook_piloto_completo_total.LANDINGSDAY AS<{{{><}}}>LANDINGSDAY,vista_logbook_piloto_completo_total.LANDINGSNIGHT AS LANDINGSNIGHT from<{{{><}}}>admin_aerodynamics.vista_logbook_piloto_completo_total) union (select<{{{><}}}>vista_logbook_instructor_completo_total.idReserva AS idReserva,vista_logbook_instructor_completo_total.idVuelo<{{{><}}}>AS idVuelo,vista_logbook_instructor_completo_total.idCurso AS<{{{><}}}>idCurso,vista_logbook_instructor_completo_total.DATE AS<{{{><}}}>DATE,vista_logbook_instructor_completo_total.DEPARTUREPLACE AS<{{{><}}}>DEPARTUREPLACE,vista_logbook_instructor_completo_total.DEPARTURETIME AS<{{{><}}}>DEPARTURETIME,vista_logbook_instructor_completo_total.ARRIVALPLACE AS<{{{><}}}>ARRIVALPLACE,vista_logbook_instructor_completo_total.ARRIVALTIME AS<{{{><}}}>ARRIVALTIME,vista_logbook_instructor_completo_total.AIRCRAFTMODEL AS<{{{><}}}>AIRCRAFTMODEL,vista_logbook_instructor_completo_total.AIRCRAFTREGISTRATION AS<{{{><}}}>AIRCRAFTREGISTRATION,vista_logbook_instructor_completo_total.PICNAME AS<{{{><}}}>PICNAME,vista_logbook_instructor_completo_total.REMARKS AS<{{{><}}}>REMARKS,vista_logbook_instructor_completo_total.PILOTO AS<{{{><}}}>PILOTO,vista_logbook_instructor_completo_total.CURSO AS<{{{><}}}>CURSO,vista_logbook_instructor_completo_total.TOTALVUELO AS<{{{><}}}>TOTALVUELO,vista_logbook_instructor_completo_total.TOTALVUELODAY AS<{{{><}}}>TOTALVUELODAY,vista_logbook_instructor_completo_total.TOTALVUELONIGHT AS<{{{><}}}>TOTALVUELONIGHT,vista_logbook_instructor_completo_total.SE AS SE,vista_logbook_instructor_completo_total.ME<{{{><}}}>AS ME,vista_logbook_instructor_completo_total.XCSOLO AS<{{{><}}}>XCSOLO,vista_logbook_instructor_completo_total.XCDUAL AS XCDUAL,vista_logbook_instructor_completo_total.VFR<{{{><}}}>AS VFR,vista_logbook_instructor_completo_total.IFR AS IFR,vista_logbook_instructor_completo_total.IFRSIM AS<{{{><}}}>IFRSIM,vista_logbook_instructor_completo_total.PIC AS PIC,vista_logbook_instructor_completo_total.COPILOT AS<{{{><}}}>COPILOT,vista_logbook_instructor_completo_total.DUAL AS<{{{><}}}>'DUAL',vista_logbook_instructor_completo_total.INSTRUCTOR AS<{{{><}}}>INSTRUCTOR,vista_logbook_instructor_completo_total.FSTD AS<{{{><}}}>FSTD,vista_logbook_instructor_completo_total.LANDINGSDAY AS<{{{><}}}>LANDINGSDAY,vista_logbook_instructor_completo_total.LANDINGSNIGHT AS LANDINGSNIGHT from<{{{><}}}>admin_aerodynamics.vista_logbook_instructor_completo_total)<{{{><}}}>union <{{{><}}}>(select<{{{><}}}>'0' AS idReserva,<{{{><}}}>'0' AS idVuelo,<{{{><}}}>'0' AS idCurso,<{{{><}}}>'0000-00-00' AS DATE,<{{{><}}}>'EXPPREVIA' AS DEPARTUREPLACE,<{{{><}}}>'00:00:00' AS DEPARTURETIME,<{{{><}}}>'EXPPREVIA' AS ARRIVALPLACE,<{{{><}}}>'00:00:00' AS ARRIVALTIME,<{{{><}}}>'EXPPREVIA' AS AIRCRAFTMODEL,<{{{><}}}>'EXPPREVIA' AS AIRCRAFTREGISTRATION,<{{{><}}}>'EXPPREVIA' AS PICNAME,<{{{><}}}>CURSO AS REMARKS,<{{{><}}}>idPiloto AS PILOTO,<{{{><}}}>CURSO AS CURSO,<{{{><}}}>sec_to_time(sum(time_to_sec(TOTALVUELO))) AS TOTALVUELO,<{{{><}}}>sec_to_time(sum(time_to_sec(TOTALVUELODAY))) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(sum(time_to_sec(TOTALVUELONIGHT))) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(sum(time_to_sec(SE))) AS SE,<{{{><}}}>sec_to_time(sum(time_to_sec(ME))) AS ME,<{{{><}}}>sec_to_time(sum(time_to_sec(XCSOLO))) AS XCSOLO,<{{{><}}}>sec_to_time(sum(time_to_sec(XCDUAL))) AS XCDUAL,<{{{><}}}>sec_to_time(sum(time_to_sec(VFR))) AS VFR,<{{{><}}}>sec_to_time(sum(time_to_sec(IFR))) AS IFR,<{{{><}}}>sec_to_time(sum(time_to_sec(IFRSIM))) AS IFRSIM,<{{{><}}}>sec_to_time(sum(time_to_sec(PIC))) AS PIC,<{{{><}}}>sec_to_time(sum(time_to_sec(COPILOT))) AS COPILOT,<{{{><}}}>sec_to_time(sum(time_to_sec(`DUAL`))) AS 'DUAL',<{{{><}}}>sec_to_time(sum(time_to_sec(INSTRUCTOR))) AS INSTRUCTOR,<{{{><}}}>sec_to_time(sum(time_to_sec(FSTD))) AS FSTD,<{{{><}}}>LANDINGSDAY AS LANDINGSDAY,<{{{><}}}>LANDINGSNIGHT AS LANDINGSNIGHT <{{{><}}}>from personas_experiencia_previa GROUP BY idPiloto)<{{{><}}}><{{{><}}}><{{{><}}}>) vuelos group by vuelos.PILOTO
Servers\aerodynamics.com.es\QueryHistory\333<|||>1<|||>2021-02-25 23:04:40|admin_aerodynamics|47|select<{{{><}}}>'0' AS idReserva,<{{{><}}}>'0' AS idVuelo,<{{{><}}}>'0' AS idCurso,<{{{><}}}>'0000-00-00' AS DATE,<{{{><}}}>'EXPPREVIA' AS DEPARTUREPLACE,<{{{><}}}>'00:00:00' AS DEPARTURETIME,<{{{><}}}>'EXPPREVIA' AS ARRIVALPLACE,<{{{><}}}>'00:00:00' AS ARRIVALTIME,<{{{><}}}>'EXPPREVIA' AS AIRCRAFTMODEL,<{{{><}}}>'EXPPREVIA' AS AIRCRAFTREGISTRATION,<{{{><}}}>'EXPPREVIA' AS PICNAME,<{{{><}}}>CURSO AS REMARKS,<{{{><}}}>idPiloto AS PILOTO,<{{{><}}}>CURSO AS CURSO,<{{{><}}}>sec_to_time(sum(time_to_sec(TOTALVUELO))) AS TOTALVUELO,<{{{><}}}>sec_to_time(sum(time_to_sec(TOTALVUELODAY))) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(sum(time_to_sec(TOTALVUELONIGHT))) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(sum(time_to_sec(SE))) AS SE,<{{{><}}}>sec_to_time(sum(time_to_sec(ME))) AS ME,<{{{><}}}>sec_to_time(sum(time_to_sec(XCSOLO))) AS XCSOLO,<{{{><}}}>sec_to_time(sum(time_to_sec(XCDUAL))) AS XCDUAL,<{{{><}}}>sec_to_time(sum(time_to_sec(VFR))) AS VFR,<{{{><}}}>sec_to_time(sum(time_to_sec(IFR))) AS IFR,<{{{><}}}>sec_to_time(sum(time_to_sec(IFRSIM))) AS IFRSIM,<{{{><}}}>sec_to_time(sum(time_to_sec(PIC))) AS PIC,<{{{><}}}>sec_to_time(sum(time_to_sec(COPILOT))) AS COPILOT,<{{{><}}}>sec_to_time(sum(time_to_sec(`DUAL`))) AS 'DUAL',<{{{><}}}>sec_to_time(sum(time_to_sec(INSTRUCTOR))) AS INSTRUCTOR,<{{{><}}}>sec_to_time(sum(time_to_sec(FSTD))) AS FSTD,<{{{><}}}>sum(LANDINGSDAY) AS LANDINGSDAY,<{{{><}}}>sum(LANDINGSNIGHT) AS LANDINGSNIGHT <{{{><}}}>from personas_experiencia_previa GROUP BY idPiloto
Servers\aerodynamics.com.es\QueryHistory\334<|||>1<|||>2021-02-25 23:05:39|admin_aerodynamics|1187|select vuelos.idReserva AS idReserva,vuelos.idVuelo AS idVuelo,vuelos.idCurso AS<{{{><}}}>idCurso,vuelos.DATE AS DATE,vuelos.DEPARTUREPLACE AS DEPARTUREPLACE,vuelos.DEPARTURETIME AS<{{{><}}}>DEPARTURETIME,vuelos.ARRIVALPLACE AS ARRIVALPLACE,vuelos.ARRIVALTIME AS<{{{><}}}>ARRIVALTIME,vuelos.AIRCRAFTMODEL AS AIRCRAFTMODEL,vuelos.AIRCRAFTREGISTRATION AS<{{{><}}}>AIRCRAFTREGISTRATION,vuelos.PICNAME AS PICNAME,vuelos.REMARKS AS REMARKS,vuelos.PILOTO AS<{{{><}}}>PILOTO,vuelos.CURSO AS CURSO,vuelos.TOTALVUELO AS TOTALVUELO,vuelos.TOTALVUELODAY AS<{{{><}}}>TOTALVUELODAY,vuelos.TOTALVUELONIGHT AS TOTALVUELONIGHT,vuelos.SE AS SE,vuelos.ME AS<{{{><}}}>ME,vuelos.XCSOLO AS XCSOLO,vuelos.XCDUAL AS XCDUAL,vuelos.VFR AS VFR,vuelos.IFR AS<{{{><}}}>IFR,vuelos.IFRSIM AS IFRSIM,vuelos.PIC AS PIC,vuelos.COPILOT AS COPILOT,vuelos.DUAL AS<{{{><}}}>'DUAL',vuelos.INSTRUCTOR AS INSTRUCTOR,vuelos.FSTD AS FSTD,vuelos.LANDINGSDAY AS<{{{><}}}>LANDINGSDAY,vuelos.LANDINGSNIGHT AS LANDINGSNIGHT from ((select<{{{><}}}>vista_logbook_piloto_completo_total.idReserva AS idReserva,vista_logbook_piloto_completo_total.idVuelo AS<{{{><}}}>idVuelo,vista_logbook_piloto_completo_total.idCurso AS idCurso,vista_logbook_piloto_completo_total.DATE AS<{{{><}}}>DATE,vista_logbook_piloto_completo_total.DEPARTUREPLACE AS<{{{><}}}>DEPARTUREPLACE,vista_logbook_piloto_completo_total.DEPARTURETIME AS<{{{><}}}>DEPARTURETIME,vista_logbook_piloto_completo_total.ARRIVALPLACE AS<{{{><}}}>ARRIVALPLACE,vista_logbook_piloto_completo_total.ARRIVALTIME AS<{{{><}}}>ARRIVALTIME,vista_logbook_piloto_completo_total.AIRCRAFTMODEL AS<{{{><}}}>AIRCRAFTMODEL,vista_logbook_piloto_completo_total.AIRCRAFTREGISTRATION AS<{{{><}}}>AIRCRAFTREGISTRATION,vista_logbook_piloto_completo_total.PICNAME AS<{{{><}}}>PICNAME,vista_logbook_piloto_completo_total.REMARKS AS REMARKS,vista_logbook_piloto_completo_total.PILOTO AS<{{{><}}}>PILOTO,vista_logbook_piloto_completo_total.CURSO AS CURSO,vista_logbook_piloto_completo_total.TOTALVUELO AS<{{{><}}}>TOTALVUELO,vista_logbook_piloto_completo_total.TOTALVUELODAY AS<{{{><}}}>TOTALVUELODAY,vista_logbook_piloto_completo_total.TOTALVUELONIGHT AS<{{{><}}}>TOTALVUELONIGHT,vista_logbook_piloto_completo_total.SE AS SE,vista_logbook_piloto_completo_total.ME AS<{{{><}}}>ME,vista_logbook_piloto_completo_total.XCSOLO AS XCSOLO,vista_logbook_piloto_completo_total.XCDUAL AS<{{{><}}}>XCDUAL,vista_logbook_piloto_completo_total.VFR AS VFR,vista_logbook_piloto_completo_total.IFR AS<{{{><}}}>IFR,vista_logbook_piloto_completo_total.IFRSIM AS IFRSIM,vista_logbook_piloto_completo_total.PIC AS<{{{><}}}>PIC,vista_logbook_piloto_completo_total.COPILOT AS COPILOT,vista_logbook_piloto_completo_total.DUAL AS<{{{><}}}>'DUAL',vista_logbook_piloto_completo_total.INSTRUCTOR AS INSTRUCTOR,vista_logbook_piloto_completo_total.FSTD<{{{><}}}>AS FSTD,vista_logbook_piloto_completo_total.LANDINGSDAY AS<{{{><}}}>LANDINGSDAY,vista_logbook_piloto_completo_total.LANDINGSNIGHT AS LANDINGSNIGHT from<{{{><}}}>admin_aerodynamics.vista_logbook_piloto_completo_total) union (select<{{{><}}}>vista_logbook_instructor_completo_total.idReserva AS idReserva,vista_logbook_instructor_completo_total.idVuelo<{{{><}}}>AS idVuelo,vista_logbook_instructor_completo_total.idCurso AS<{{{><}}}>idCurso,vista_logbook_instructor_completo_total.DATE AS<{{{><}}}>DATE,vista_logbook_instructor_completo_total.DEPARTUREPLACE AS<{{{><}}}>DEPARTUREPLACE,vista_logbook_instructor_completo_total.DEPARTURETIME AS<{{{><}}}>DEPARTURETIME,vista_logbook_instructor_completo_total.ARRIVALPLACE AS<{{{><}}}>ARRIVALPLACE,vista_logbook_instructor_completo_total.ARRIVALTIME AS<{{{><}}}>ARRIVALTIME,vista_logbook_instructor_completo_total.AIRCRAFTMODEL AS<{{{><}}}>AIRCRAFTMODEL,vista_logbook_instructor_completo_total.AIRCRAFTREGISTRATION AS<{{{><}}}>AIRCRAFTREGISTRATION,vista_logbook_instructor_completo_total.PICNAME AS<{{{><}}}>PICNAME,vista_logbook_instructor_completo_total.REMARKS AS<{{{><}}}>REMARKS,vista_logbook_instructor_completo_total.PILOTO AS<{{{><}}}>PILOTO,vista_logbook_instructor_completo_total.CURSO AS<{{{><}}}>CURSO,vista_logbook_instructor_completo_total.TOTALVUELO AS<{{{><}}}>TOTALVUELO,vista_logbook_instructor_completo_total.TOTALVUELODAY AS<{{{><}}}>TOTALVUELODAY,vista_logbook_instructor_completo_total.TOTALVUELONIGHT AS<{{{><}}}>TOTALVUELONIGHT,vista_logbook_instructor_completo_total.SE AS SE,vista_logbook_instructor_completo_total.ME<{{{><}}}>AS ME,vista_logbook_instructor_completo_total.XCSOLO AS<{{{><}}}>XCSOLO,vista_logbook_instructor_completo_total.XCDUAL AS XCDUAL,vista_logbook_instructor_completo_total.VFR<{{{><}}}>AS VFR,vista_logbook_instructor_completo_total.IFR AS IFR,vista_logbook_instructor_completo_total.IFRSIM AS<{{{><}}}>IFRSIM,vista_logbook_instructor_completo_total.PIC AS PIC,vista_logbook_instructor_completo_total.COPILOT AS<{{{><}}}>COPILOT,vista_logbook_instructor_completo_total.DUAL AS<{{{><}}}>'DUAL',vista_logbook_instructor_completo_total.INSTRUCTOR AS<{{{><}}}>INSTRUCTOR,vista_logbook_instructor_completo_total.FSTD AS<{{{><}}}>FSTD,vista_logbook_instructor_completo_total.LANDINGSDAY AS<{{{><}}}>LANDINGSDAY,vista_logbook_instructor_completo_total.LANDINGSNIGHT AS LANDINGSNIGHT from<{{{><}}}>admin_aerodynamics.vista_logbook_instructor_completo_total)<{{{><}}}>union <{{{><}}}>(select<{{{><}}}>'0' AS idReserva,<{{{><}}}>'0' AS idVuelo,<{{{><}}}>'0' AS idCurso,<{{{><}}}>'0000-00-00' AS DATE,<{{{><}}}>'EXPPREVIA' AS DEPARTUREPLACE,<{{{><}}}>'00:00:00' AS DEPARTURETIME,<{{{><}}}>'EXPPREVIA' AS ARRIVALPLACE,<{{{><}}}>'00:00:00' AS ARRIVALTIME,<{{{><}}}>'EXPPREVIA' AS AIRCRAFTMODEL,<{{{><}}}>'EXPPREVIA' AS AIRCRAFTREGISTRATION,<{{{><}}}>'EXPPREVIA' AS PICNAME,<{{{><}}}>CURSO AS REMARKS,<{{{><}}}>idPiloto AS PILOTO,<{{{><}}}>CURSO AS CURSO,<{{{><}}}>sec_to_time(sum(time_to_sec(TOTALVUELO))) AS TOTALVUELO,<{{{><}}}>sec_to_time(sum(time_to_sec(TOTALVUELODAY))) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(sum(time_to_sec(TOTALVUELONIGHT))) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(sum(time_to_sec(SE))) AS SE,<{{{><}}}>sec_to_time(sum(time_to_sec(ME))) AS ME,<{{{><}}}>sec_to_time(sum(time_to_sec(XCSOLO))) AS XCSOLO,<{{{><}}}>sec_to_time(sum(time_to_sec(XCDUAL))) AS XCDUAL,<{{{><}}}>sec_to_time(sum(time_to_sec(VFR))) AS VFR,<{{{><}}}>sec_to_time(sum(time_to_sec(IFR))) AS IFR,<{{{><}}}>sec_to_time(sum(time_to_sec(IFRSIM))) AS IFRSIM,<{{{><}}}>sec_to_time(sum(time_to_sec(PIC))) AS PIC,<{{{><}}}>sec_to_time(sum(time_to_sec(COPILOT))) AS COPILOT,<{{{><}}}>sec_to_time(sum(time_to_sec(`DUAL`))) AS 'DUAL',<{{{><}}}>sec_to_time(sum(time_to_sec(INSTRUCTOR))) AS INSTRUCTOR,<{{{><}}}>sec_to_time(sum(time_to_sec(FSTD))) AS FSTD,<{{{><}}}>sum(LANDINGSDAY) AS LANDINGSDAY,<{{{><}}}>sum(LANDINGSNIGHT) AS LANDINGSNIGHT <{{{><}}}>from personas_experiencia_previa GROUP BY idPiloto)<{{{><}}}><{{{><}}}><{{{><}}}>) vuelos group by vuelos.PILOTO
Servers\aerodynamics.com.es\QueryHistory\332<|||>1<|||>2021-02-25 23:12:00|admin_aerodynamics|563|SELECT <{{{><}}}>vuelos.idReserva AS idReserva,<{{{><}}}>vuelos.idVuelo AS idVuelo,<{{{><}}}>vuelos.idCurso AS<{{{><}}}>idCurso,<{{{><}}}>vuelos.DATE AS DATE,<{{{><}}}>vuelos.DEPARTUREPLACE AS DEPARTUREPLACE,<{{{><}}}>vuelos.DEPARTURETIME AS<{{{><}}}>DEPARTURETIME,<{{{><}}}>vuelos.ARRIVALPLACE AS ARRIVALPLACE,<{{{><}}}>vuelos.ARRIVALTIME AS<{{{><}}}>ARRIVALTIME,<{{{><}}}>vuelos.AIRCRAFTMODEL AS AIRCRAFTMODEL,<{{{><}}}>vuelos.AIRCRAFTREGISTRATION AS<{{{><}}}>AIRCRAFTREGISTRATION,<{{{><}}}>vuelos.PICNAME AS PICNAME,<{{{><}}}>vuelos.REMARKS AS REMARKS,<{{{><}}}>vuelos.PILOTO AS<{{{><}}}>PILOTO,<{{{><}}}>vuelos.CURSO AS CURSO,<{{{><}}}>sec_to_time(sum(time_to_sec(vuelos.TOTALVUELO))) AS TOTALVUELO,<{{{><}}}>sec_to_time(sum(time_to_sec(vuelos.TOTALVUELODAY))) AS<{{{><}}}>TOTALVUELODAY,<{{{><}}}>sec_to_time(sum(time_to_sec(vuelos.TOTALVUELONIGHT))) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(sum(time_to_sec(vuelos.SE))) AS SE,<{{{><}}}>sec_to_time(sum(time_to_sec(vuelos.ME))) AS<{{{><}}}>ME,<{{{><}}}>sec_to_time(sum(time_to_sec(vuelos.XCSOLO))) AS XCSOLO,<{{{><}}}>sec_to_time(sum(time_to_sec(vuelos.XCDUAL))) AS XCDUAL,<{{{><}}}>sec_to_time(sum(time_to_sec(vuelos.VFR))) AS VFR,<{{{><}}}>sec_to_time(sum(time_to_sec(vuelos.IFR))) AS<{{{><}}}>IFR,<{{{><}}}>sec_to_time(sum(time_to_sec(vuelos.IFRSIM))) AS IFRSIM,<{{{><}}}>sec_to_time(sum(time_to_sec(vuelos.PIC))) AS PIC,<{{{><}}}>sec_to_time(sum(time_to_sec(vuelos.COPILOT))) AS COPILOT,<{{{><}}}>sec_to_time(sum(time_to_sec(vuelos.DUAL))) AS<{{{><}}}>'DUAL',<{{{><}}}>sec_to_time(sum(time_to_sec(vuelos.INSTRUCTOR))) AS INSTRUCTOR,<{{{><}}}>sec_to_time(sum(time_to_sec(vuelos.FSTD))) AS FSTD,<{{{><}}}>sum(vuelos.LANDINGSDAY) AS<{{{><}}}>LANDINGSDAY,<{{{><}}}>sum(vuelos.LANDINGSNIGHT) AS LANDINGSNIGHT <{{{><}}}>FROM <{{{><}}}>((select<{{{><}}}>vista_logbook_piloto_completo_total.idReserva AS idReserva,vista_logbook_piloto_completo_total.idVuelo AS<{{{><}}}>idVuelo,vista_logbook_piloto_completo_total.idCurso AS idCurso,vista_logbook_piloto_completo_total.DATE AS<{{{><}}}>DATE,vista_logbook_piloto_completo_total.DEPARTUREPLACE AS<{{{><}}}>DEPARTUREPLACE,vista_logbook_piloto_completo_total.DEPARTURETIME AS<{{{><}}}>DEPARTURETIME,vista_logbook_piloto_completo_total.ARRIVALPLACE AS<{{{><}}}>ARRIVALPLACE,vista_logbook_piloto_completo_total.ARRIVALTIME AS<{{{><}}}>ARRIVALTIME,vista_logbook_piloto_completo_total.AIRCRAFTMODEL AS<{{{><}}}>AIRCRAFTMODEL,vista_logbook_piloto_completo_total.AIRCRAFTREGISTRATION AS<{{{><}}}>AIRCRAFTREGISTRATION,vista_logbook_piloto_completo_total.PICNAME AS<{{{><}}}>PICNAME,vista_logbook_piloto_completo_total.REMARKS AS REMARKS,vista_logbook_piloto_completo_total.PILOTO AS<{{{><}}}>PILOTO,vista_logbook_piloto_completo_total.CURSO AS CURSO,vista_logbook_piloto_completo_total.TOTALVUELO AS<{{{><}}}>TOTALVUELO,vista_logbook_piloto_completo_total.TOTALVUELODAY AS<{{{><}}}>TOTALVUELODAY,vista_logbook_piloto_completo_total.TOTALVUELONIGHT AS<{{{><}}}>TOTALVUELONIGHT,vista_logbook_piloto_completo_total.SE AS SE,vista_logbook_piloto_completo_total.ME AS<{{{><}}}>ME,vista_logbook_piloto_completo_total.XCSOLO AS XCSOLO,vista_logbook_piloto_completo_total.XCDUAL AS<{{{><}}}>XCDUAL,vista_logbook_piloto_completo_total.VFR AS VFR,vista_logbook_piloto_completo_total.IFR AS<{{{><}}}>IFR,vista_logbook_piloto_completo_total.IFRSIM AS IFRSIM,vista_logbook_piloto_completo_total.PIC AS<{{{><}}}>PIC,vista_logbook_piloto_completo_total.COPILOT AS COPILOT,vista_logbook_piloto_completo_total.DUAL AS<{{{><}}}>'DUAL',vista_logbook_piloto_completo_total.INSTRUCTOR AS INSTRUCTOR,vista_logbook_piloto_completo_total.FSTD<{{{><}}}>AS FSTD,vista_logbook_piloto_completo_total.LANDINGSDAY AS<{{{><}}}>LANDINGSDAY,vista_logbook_piloto_completo_total.LANDINGSNIGHT AS LANDINGSNIGHT from<{{{><}}}>admin_aerodynamics.vista_logbook_piloto_completo_total) union (select<{{{><}}}>vista_logbook_instructor_completo_total.idReserva AS idReserva,vista_logbook_instructor_completo_total.idVuelo<{{{><}}}>AS idVuelo,vista_logbook_instructor_completo_total.idCurso AS<{{{><}}}>idCurso,vista_logbook_instructor_completo_total.DATE AS<{{{><}}}>DATE,vista_logbook_instructor_completo_total.DEPARTUREPLACE AS<{{{><}}}>DEPARTUREPLACE,vista_logbook_instructor_completo_total.DEPARTURETIME AS<{{{><}}}>DEPARTURETIME,vista_logbook_instructor_completo_total.ARRIVALPLACE AS<{{{><}}}>ARRIVALPLACE,vista_logbook_instructor_completo_total.ARRIVALTIME AS<{{{><}}}>ARRIVALTIME,vista_logbook_instructor_completo_total.AIRCRAFTMODEL AS<{{{><}}}>AIRCRAFTMODEL,vista_logbook_instructor_completo_total.AIRCRAFTREGISTRATION AS<{{{><}}}>AIRCRAFTREGISTRATION,vista_logbook_instructor_completo_total.PICNAME AS<{{{><}}}>PICNAME,vista_logbook_instructor_completo_total.REMARKS AS<{{{><}}}>REMARKS,vista_logbook_instructor_completo_total.PILOTO AS<{{{><}}}>PILOTO,vista_logbook_instructor_completo_total.CURSO AS<{{{><}}}>CURSO,vista_logbook_instructor_completo_total.TOTALVUELO AS<{{{><}}}>TOTALVUELO,vista_logbook_instructor_completo_total.TOTALVUELODAY AS<{{{><}}}>TOTALVUELODAY,vista_logbook_instructor_completo_total.TOTALVUELONIGHT AS<{{{><}}}>TOTALVUELONIGHT,vista_logbook_instructor_completo_total.SE AS SE,vista_logbook_instructor_completo_total.ME<{{{><}}}>AS ME,vista_logbook_instructor_completo_total.XCSOLO AS<{{{><}}}>XCSOLO,vista_logbook_instructor_completo_total.XCDUAL AS XCDUAL,vista_logbook_instructor_completo_total.VFR<{{{><}}}>AS VFR,vista_logbook_instructor_completo_total.IFR AS IFR,vista_logbook_instructor_completo_total.IFRSIM AS<{{{><}}}>IFRSIM,vista_logbook_instructor_completo_total.PIC AS PIC,vista_logbook_instructor_completo_total.COPILOT AS<{{{><}}}>COPILOT,vista_logbook_instructor_completo_total.DUAL AS<{{{><}}}>'DUAL',vista_logbook_instructor_completo_total.INSTRUCTOR AS<{{{><}}}>INSTRUCTOR,vista_logbook_instructor_completo_total.FSTD AS<{{{><}}}>FSTD,vista_logbook_instructor_completo_total.LANDINGSDAY AS<{{{><}}}>LANDINGSDAY,vista_logbook_instructor_completo_total.LANDINGSNIGHT AS LANDINGSNIGHT from<{{{><}}}>admin_aerodynamics.vista_logbook_instructor_completo_total)<{{{><}}}>union <{{{><}}}>(select<{{{><}}}>'0' AS idReserva,<{{{><}}}>'0' AS idVuelo,<{{{><}}}>'0' AS idCurso,<{{{><}}}>'0000-00-00' AS DATE,<{{{><}}}>'EXPPREVIA' AS DEPARTUREPLACE,<{{{><}}}>'00:00:00' AS DEPARTURETIME,<{{{><}}}>'EXPPREVIA' AS ARRIVALPLACE,<{{{><}}}>'00:00:00' AS ARRIVALTIME,<{{{><}}}>'EXPPREVIA' AS AIRCRAFTMODEL,<{{{><}}}>'EXPPREVIA' AS AIRCRAFTREGISTRATION,<{{{><}}}>'EXPPREVIA' AS PICNAME,<{{{><}}}>CURSO AS REMARKS,<{{{><}}}>idPiloto AS PILOTO,<{{{><}}}>CURSO AS CURSO,<{{{><}}}>sec_to_time(sum(time_to_sec(TOTALVUELO))) AS TOTALVUELO,<{{{><}}}>sec_to_time(sum(time_to_sec(TOTALVUELODAY))) AS TOTALVUELODAY,<{{{><}}}>sec_to_time(sum(time_to_sec(TOTALVUELONIGHT))) AS TOTALVUELONIGHT,<{{{><}}}>sec_to_time(sum(time_to_sec(SE))) AS SE,<{{{><}}}>sec_to_time(sum(time_to_sec(ME))) AS ME,<{{{><}}}>sec_to_time(sum(time_to_sec(XCSOLO))) AS XCSOLO,<{{{><}}}>sec_to_time(sum(time_to_sec(XCDUAL))) AS XCDUAL,<{{{><}}}>sec_to_time(sum(time_to_sec(VFR))) AS VFR,<{{{><}}}>sec_to_time(sum(time_to_sec(IFR))) AS IFR,<{{{><}}}>sec_to_time(sum(time_to_sec(IFRSIM))) AS IFRSIM,<{{{><}}}>sec_to_time(sum(time_to_sec(PIC))) AS PIC,<{{{><}}}>sec_to_time(sum(time_to_sec(COPILOT))) AS COPILOT,<{{{><}}}>sec_to_time(sum(time_to_sec(`DUAL`))) AS 'DUAL',<{{{><}}}>sec_to_time(sum(time_to_sec(INSTRUCTOR))) AS INSTRUCTOR,<{{{><}}}>sec_to_time(sum(time_to_sec(FSTD))) AS FSTD,<{{{><}}}>sum(LANDINGSDAY) AS LANDINGSDAY,<{{{><}}}>sum(LANDINGSNIGHT) AS LANDINGSNIGHT <{{{><}}}>from personas_experiencia_previa GROUP BY idPiloto)<{{{><}}}><{{{><}}}><{{{><}}}>) vuelos group by vuelos.PILOTO
Servers\aerodynamics.com.es\QueryHistory\335<|||>1<|||>2021-03-02 12:49:56|admin_aerodynamics|125|select <{{{><}}}>`p`.`idPersona` AS `idPersona`,<{{{><}}}>ifnull(((select sum(`personas_proformas`.`totalProforma`) AS `totalProformas` from `personas_proformas` where `personas_proformas`.`idPersona` = `p`.`idPersona`) * (-1)) - (select<{{{><}}}>sum(`personas_facturas`.`totalFactura`) AS `totalFacturas` <{{{><}}}>from `personas_facturas` where<{{{><}}}>`personas_facturas`.`idProforma` = 0 and `personas_facturas`.`idPersona` = `p`.`idPersona`) + (select<{{{><}}}>sum(`personas_cobros`.`totalCobro`) AS `totalCobros` <{{{><}}}>from `personas_cobros` where `personas_cobros`.`idPersona` =<{{{><}}}>`p`.`idPersona`),0) AS `Balance` <{{{><}}}><{{{><}}}>from `personas` `p`
Servers\aerodynamics.com.es\QueryHistory\1<|||>1<|||>2021-03-02 12:50:28|admin_aerodynamics|31|select <{{{><}}}>`p`.`idPersona` AS `idPersona`,<{{{><}}}>ifnull(((select sum(`personas_proformas`.`totalProforma`) AS `totalProformas` from `personas_proformas` where `personas_proformas`.`idPersona` = `p`.`idPersona`) * (-1)) - (select<{{{><}}}>sum(`personas_facturas`.`totalFactura`) AS `totalFacturas` <{{{><}}}>from `personas_facturas` where<{{{><}}}>`personas_facturas`.`idProforma` = 0 and `personas_facturas`.`idPersona` = `p`.`idPersona`) + (select<{{{><}}}>sum(`personas_cobros`.`totalCobro`) AS `totalCobros` <{{{><}}}>from `personas_cobros` where `personas_cobros`.`idPersona` =<{{{><}}}>`p`.`idPersona`),0) AS `Balance` <{{{><}}}><{{{><}}}>from `personas` `p` WHERE idPersona=3246
Servers\aerodynamics.com.es\QueryHistory\2<|||>1<|||>2021-03-02 12:50:55|admin_aerodynamics|47|select <{{{><}}}>`p`.`idPersona` AS `idPersona`,<{{{><}}}>((select sum(`personas_proformas`.`totalProforma`) AS `totalProformas` from `personas_proformas` where `personas_proformas`.`idPersona` = `p`.`idPersona`) * (-1)) - (select<{{{><}}}>sum(`personas_facturas`.`totalFactura`) AS `totalFacturas` <{{{><}}}>from `personas_facturas` where<{{{><}}}>`personas_facturas`.`idProforma` = 0 and `personas_facturas`.`idPersona` = `p`.`idPersona`) + (select<{{{><}}}>sum(`personas_cobros`.`totalCobro`) AS `totalCobros` <{{{><}}}>from `personas_cobros` where `personas_cobros`.`idPersona` =<{{{><}}}>`p`.`idPersona`) AS `Balance` <{{{><}}}><{{{><}}}>from `personas` `p` WHERE idPersona=3246
Servers\aerodynamics.com.es\QueryHistory\3<|||>1<|||>2021-03-02 12:51:15|admin_aerodynamics|94|select <{{{><}}}>`p`.`idPersona` AS `idPersona`,<{{{><}}}>(select sum(`personas_proformas`.`totalProforma`) AS `totalProformas` from `personas_proformas` where `personas_proformas`.`idPersona` = `p`.`idPersona`) * (-1),<{{{><}}}>((select sum(`personas_proformas`.`totalProforma`) AS `totalProformas` from `personas_proformas` where `personas_proformas`.`idPersona` = `p`.`idPersona`) * (-1)) - (select<{{{><}}}>sum(`personas_facturas`.`totalFactura`) AS `totalFacturas` <{{{><}}}>from `personas_facturas` where<{{{><}}}>`personas_facturas`.`idProforma` = 0 and `personas_facturas`.`idPersona` = `p`.`idPersona`) + (select<{{{><}}}>sum(`personas_cobros`.`totalCobro`) AS `totalCobros` <{{{><}}}>from `personas_cobros` where `personas_cobros`.`idPersona` =<{{{><}}}>`p`.`idPersona`) AS `Balance` <{{{><}}}><{{{><}}}>from `personas` `p` WHERE idPersona=3246
Servers\aerodynamics.com.es\QueryHistory\4<|||>1<|||>2021-03-02 12:52:50|admin_aerodynamics|47|select <{{{><}}}>`p`.`idPersona` AS `idPersona`,<{{{><}}}>(select sum(`personas_proformas`.`totalProforma`) AS `totalProformas` from `personas_proformas` where `personas_proformas`.`idPersona` = `p`.`idPersona`) * (-1),<{{{><}}}>((select sum(`personas_proformas`.`totalProforma`) AS `totalProformas` from `personas_proformas` where `personas_proformas`.`idPersona` = `p`.`idPersona`) * (-1)) - ifnull((select<{{{><}}}>sum(`personas_facturas`.`totalFactura`) AS `totalFacturas` <{{{><}}}>from `personas_facturas` where<{{{><}}}>`personas_facturas`.`idProforma` = 0 and `personas_facturas`.`idPersona` = `p`.`idPersona`),0) + IFNULL((select<{{{><}}}>sum(`personas_cobros`.`totalCobro`) AS `totalCobros` <{{{><}}}>from `personas_cobros` where `personas_cobros`.`idPersona` =<{{{><}}}>`p`.`idPersona`),0) AS `Balance` <{{{><}}}><{{{><}}}>from `personas` `p` WHERE idPersona=3246
Servers\aerodynamics.com.es\QueryHistory\5<|||>1<|||>2021-03-02 12:54:43|admin_aerodynamics|219|select <{{{><}}}>`p`.`idPersona` AS `idPersona`,<{{{><}}}>ifnull((select sum(`personas_proformas`.`totalProforma`) AS `totalProformas` from<{{{><}}}>`personas_proformas` where `personas_proformas`.`idPersona` = `p`.`idPersona`) * -1,0) AS `Proformas`,<{{{><}}}>ifnull((select<{{{><}}}>sum(`personas_facturas`.`totalFactura`) AS `totalFacturas` from `personas_facturas` where<{{{><}}}>`personas_facturas`.`idProforma` = 0 and `personas_facturas`.`idPersona` = `p`.`idPersona`) * -1,0) AS<{{{><}}}>`Facturas`,<{{{><}}}>ifnull((select sum(`personas_cobros`.`totalCobro`) AS `totalCobros` from `personas_cobros` where<{{{><}}}>`personas_cobros`.`idPersona` = `p`.`idPersona`),0) AS `Cobros`,<{{{><}}}><{{{><}}}>ifnull(<{{{><}}}>    ifnull(((select sum(`personas_proformas`.`totalProforma`) AS `totalProformas` from `personas_proformas` where `personas_proformas`.`idPersona` = `p`.`idPersona`) * (-1)),0) - <{{{><}}}>    ifnull((select sum(`personas_facturas`.`totalFactura`) AS `totalFacturas` from `personas_facturas` where `personas_facturas`.`idProforma` = 0 and `personas_facturas`.`idPersona` = `p`.`idPersona`),0) + <{{{><}}}>    ifnull((select sum(`personas_cobros`.`totalCobro`) AS `totalCobros` from `personas_cobros` where `personas_cobros`.`idPersona` =`p`.`idPersona`),0)<{{{><}}}>    <{{{><}}}>    ,0) AS `Balance` <{{{><}}}><{{{><}}}>from `personas` `p`
Servers\aerodynamics.com.es\QueryHistory\6<|||>1<|||>2021-03-02 14:23:41|admin_aerodynamics|250|select `vuelos`.`idReserva` AS `idReserva`,`vuelos`.`idVuelo` AS `idVuelo`,`vuelos`.`idCurso` AS<{{{><}}}>`idCurso`,`vuelos`.`DATE` AS `DATE`,`vuelos`.`DEPARTUREPLACE` AS `DEPARTUREPLACE`,`vuelos`.`DEPARTURETIME` AS<{{{><}}}>`DEPARTURETIME`,`vuelos`.`ARRIVALPLACE` AS `ARRIVALPLACE`,`vuelos`.`ARRIVALTIME` AS<{{{><}}}>`ARRIVALTIME`,`vuelos`.`AIRCRAFTMODEL` AS `AIRCRAFTMODEL`,`vuelos`.`AIRCRAFTREGISTRATION` AS<{{{><}}}>`AIRCRAFTREGISTRATION`,`vuelos`.`PICNAME` AS `PICNAME`,`vuelos`.`REMARKS` AS `REMARKS`,`vuelos`.`PILOTO` AS<{{{><}}}>`PILOTO`,`vuelos`.`CURSO` AS `CURSO`,`vuelos`.`TOTALVUELO` AS `TOTALVUELO`,`vuelos`.`TOTALVUELODAY` AS<{{{><}}}>`TOTALVUELODAY`,`vuelos`.`TOTALVUELONIGHT` AS `TOTALVUELONIGHT`,`vuelos`.`SE` AS `SE`,`vuelos`.`ME` AS<{{{><}}}>`ME`,`vuelos`.`XCSOLO` AS `XCSOLO`,`vuelos`.`XCDUAL` AS `XCDUAL`,`vuelos`.`VFR` AS `VFR`,`vuelos`.`IFR` AS<{{{><}}}>`IFR`,`vuelos`.`IFRSIM` AS `IFRSIM`,`vuelos`.`PIC` AS `PIC`,`vuelos`.`COPILOT` AS `COPILOT`,`vuelos`.`DUAL` AS<{{{><}}}>`DUAL`,`vuelos`.`INSTRUCTOR` AS `INSTRUCTOR`,`vuelos`.`FSTD` AS `FSTD`,`vuelos`.`LANDINGSDAY` AS<{{{><}}}>`LANDINGSDAY`,`vuelos`.`LANDINGSNIGHT` AS `LANDINGSNIGHT` from ((select<{{{><}}}>`vista_logbook_piloto_completo_resumen`.`idReserva` AS `idReserva`,`vista_logbook_piloto_completo_resumen`.`idVuelo` AS<{{{><}}}>`idVuelo`,`vista_logbook_piloto_completo_resumen`.`idCurso` AS `idCurso`,`vista_logbook_piloto_completo_resumen`.`DATE`<{{{><}}}>AS `DATE`,`vista_logbook_piloto_completo_resumen`.`DEPARTUREPLACE` AS<{{{><}}}>`DEPARTUREPLACE`,`vista_logbook_piloto_completo_resumen`.`DEPARTURETIME` AS<{{{><}}}>`DEPARTURETIME`,`vista_logbook_piloto_completo_resumen`.`ARRIVALPLACE` AS<{{{><}}}>`ARRIVALPLACE`,`vista_logbook_piloto_completo_resumen`.`ARRIVALTIME` AS<{{{><}}}>`ARRIVALTIME`,`vista_logbook_piloto_completo_resumen`.`AIRCRAFTMODEL` AS<{{{><}}}>`AIRCRAFTMODEL`,`vista_logbook_piloto_completo_resumen`.`AIRCRAFTREGISTRATION` AS<{{{><}}}>`AIRCRAFTREGISTRATION`,`vista_logbook_piloto_completo_resumen`.`PICNAME` AS<{{{><}}}>`PICNAME`,`vista_logbook_piloto_completo_resumen`.`REMARKS` AS<{{{><}}}>`REMARKS`,`vista_logbook_piloto_completo_resumen`.`PILOTO` AS `PILOTO`,`vista_logbook_piloto_completo_resumen`.`CURSO`<{{{><}}}>AS `CURSO`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_piloto_completo_resumen`.`TOTALVUELO`))),'%H:%i') AS `TOTALVUELO`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_piloto_completo_resumen`.`TOTALVUELODAY`))),'%H:%i') AS `TOTALVUELODAY`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_piloto_completo_resumen`.`TOTALVUELONIGHT`))),'%H:%i') AS `TOTALVUELONIGHT`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_piloto_completo_resumen`.`SE`))),'%H:%i') AS `SE`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_piloto_completo_resumen`.`ME`))),'%H:%i') AS `ME`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_piloto_completo_resumen`.`XCSOLO`))),'%H:%i') AS `XCSOLO`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_piloto_completo_resumen`.`XCDUAL`))),'%H:%i') AS `XCDUAL`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_piloto_completo_resumen`.`VFR`))),'%H:%i') AS `VFR`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_piloto_completo_resumen`.`IFR`))),'%H:%i') AS `IFR`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_piloto_completo_resumen`.`IFRSIM`))),'%H:%i') AS `IFRSIM`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_piloto_completo_resumen`.`PIC`))),'%H:%i') AS `PIC`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_piloto_completo_resumen`.`COPILOT`))),'%H:%i') AS `COPILOT`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_piloto_completo_resumen`.`DUAL`))),'%H:%i') AS `DUAL`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_piloto_completo_resumen`.`INSTRUCTOR`))),'%H:%i') AS `INSTRUCTOR`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_piloto_completo_resumen`.`FSTD`))),'%H:%i') AS `FSTD`,<{{{><}}}>`vista_logbook_piloto_completo_resumen`.`LANDINGSDAY` AS `LANDINGSDAY`,<{{{><}}}>`vista_logbook_piloto_completo_resumen`.`LANDINGSNIGHT` AS `LANDINGSNIGHT` from<{{{><}}}>`admin_aerodynamics`.`vista_logbook_piloto_completo_resumen`) union <{{{><}}}>(select<{{{><}}}>`vista_logbook_instructor_completo_resumen`.`idReserva` AS<{{{><}}}>`idReserva`,`vista_logbook_instructor_completo_resumen`.`idVuelo` AS<{{{><}}}>`idVuelo`,`vista_logbook_instructor_completo_resumen`.`idCurso` AS<{{{><}}}>`idCurso`,`vista_logbook_instructor_completo_resumen`.`DATE` AS<{{{><}}}>`DATE`,`vista_logbook_instructor_completo_resumen`.`DEPARTUREPLACE` AS<{{{><}}}>`DEPARTUREPLACE`,<{{{><}}}>`vista_logbook_instructor_completo_resumen`.`DEPARTURETIME` AS<{{{><}}}>`DEPARTURETIME`,<{{{><}}}>`vista_logbook_instructor_completo_resumen`.`ARRIVALPLACE` AS<{{{><}}}>`ARRIVALPLACE`,<{{{><}}}>`vista_logbook_instructor_completo_resumen`.`ARRIVALTIME` AS<{{{><}}}>`ARRIVALTIME`,<{{{><}}}>`vista_logbook_instructor_completo_resumen`.`AIRCRAFTMODEL` AS<{{{><}}}>`AIRCRAFTMODEL`,<{{{><}}}>`vista_logbook_instructor_completo_resumen`.`AIRCRAFTREGISTRATION` AS<{{{><}}}>`AIRCRAFTREGISTRATION`,<{{{><}}}>`vista_logbook_instructor_completo_resumen`.`PICNAME` AS<{{{><}}}>`PICNAME`,<{{{><}}}>`vista_logbook_instructor_completo_resumen`.`REMARKS` AS<{{{><}}}>`REMARKS`,<{{{><}}}>`vista_logbook_instructor_completo_resumen`.`PILOTO` AS<{{{><}}}>`PILOTO`,<{{{><}}}>`vista_logbook_instructor_completo_resumen`.`CURSO` AS<{{{><}}}>`CURSO`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_instructor_completo_resumen`.`TOTALVUELO`))),'%H:%i') AS<{{{><}}}>`TOTALVUELO`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_instructor_completo_resumen`.`TOTALVUELODAY`))),'%H:%i') AS<{{{><}}}>`TOTALVUELODAY`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_instructor_completo_resumen`.`TOTALVUELONIGHT`))),'%H:%i') AS<{{{><}}}>`TOTALVUELONIGHT`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_instructor_completo_resumen`.`SE`))),'%H:%i') AS<{{{><}}}>`SE`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_instructor_completo_resumen`.`ME`))),'%H:%i') AS `ME`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_instructor_completo_resumen`.`XCSOLO`))),'%H:%i') AS<{{{><}}}>`XCSOLO`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_instructor_completo_resumen`.`XCDUAL`))),'%H:%i') AS<{{{><}}}>`XCDUAL`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_instructor_completo_resumen`.`VFR`))),'%H:%i') AS `VFR`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_instructor_completo_resumen`.`IFR`))),'%H:%i') AS<{{{><}}}>`IFR`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_instructor_completo_resumen`.`IFRSIM`))),'%H:%i') AS `IFRSIM`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_instructor_completo_resumen`.`PIC`))),'%H:%i')<{{{><}}}>AS `PIC`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_instructor_completo_resumen`.`COPILOT`))),'%H:%i') AS<{{{><}}}>`COPILOT`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_instructor_completo_resumen`.`DUAL`))),'%H:%i') AS<{{{><}}}>`DUAL`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_instructor_completo_resumen`.`INSTRUCTOR`))),'%H:%i') AS<{{{><}}}>`INSTRUCTOR`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_instructor_completo_resumen`.`FSTD`))),'%H:%i') AS<{{{><}}}>`FSTD`,<{{{><}}}>`vista_logbook_instructor_completo_resumen`.`LANDINGSDAY` AS<{{{><}}}>`LANDINGSDAY`,<{{{><}}}>`vista_logbook_instructor_completo_resumen`.`LANDINGSNIGHT` AS `LANDINGSNIGHT` from<{{{><}}}>`admin_aerodynamics`.`vista_logbook_instructor_completo_resumen`)) `vuelos` group by<{{{><}}}>`vuelos`.`PILOTO`,`vuelos`.`idCurso`
Servers\aerodynamics.com.es\QueryHistory\7<|||>1<|||>2021-03-02 14:43:22|admin_aerodynamics|1266|select <{{{><}}}>`vuelos`.`idReserva` AS `idReserva`,<{{{><}}}>`vuelos`.`idVuelo` AS `idVuelo`,<{{{><}}}>`vuelos`.`idCurso` AS<{{{><}}}>`idCurso`,<{{{><}}}>`vuelos`.`DATE` AS `DATE`,<{{{><}}}>`vuelos`.`DEPARTUREPLACE` AS `DEPARTUREPLACE`,<{{{><}}}>`vuelos`.`DEPARTURETIME` AS<{{{><}}}>`DEPARTURETIME`,<{{{><}}}>`vuelos`.`ARRIVALPLACE` AS `ARRIVALPLACE`,<{{{><}}}>`vuelos`.`ARRIVALTIME` AS<{{{><}}}>`ARRIVALTIME`,<{{{><}}}>`vuelos`.`AIRCRAFTMODEL` AS `AIRCRAFTMODEL`,<{{{><}}}>`vuelos`.`AIRCRAFTREGISTRATION` AS<{{{><}}}>`AIRCRAFTREGISTRATION`,<{{{><}}}>`vuelos`.`PICNAME` AS `PICNAME`,<{{{><}}}>`vuelos`.`REMARKS` AS `REMARKS`,<{{{><}}}>`vuelos`.`PILOTO` AS<{{{><}}}>`PILOTO`,<{{{><}}}>`vuelos`.`CURSO` AS `CURSO`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`TOTALVUELO`))),'%H:%i') AS `TOTALVUELO`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`TOTALVUELODAY`))),'%H:%i') AS<{{{><}}}>`TOTALVUELODAY`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`TOTALVUELONIGHT`))),'%H:%i') AS `TOTALVUELONIGHT`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`SE`))),'%H:%i') AS `SE`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`ME`))),'%H:%i') AS<{{{><}}}>`ME`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`XCSOLO`))),'%H:%i') AS `XCSOLO`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`XCDUAL`))),'%H:%i') AS `XCDUAL`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`VFR`))),'%H:%i') AS `VFR`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`IFR`))),'%H:%i') AS<{{{><}}}>`IFR`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`IFRSIM`))),'%H:%i') AS `IFRSIM`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`PIC`))),'%H:%i') AS `PIC`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`COPILOT`))),'%H:%i') AS `COPILOT`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`DUAL`))),'%H:%i') AS<{{{><}}}>`DUAL`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`INSTRUCTOR`))),'%H:%i') AS `INSTRUCTOR`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`FSTD`))),'%H:%i') AS `FSTD`,<{{{><}}}>`vuelos`.`LANDINGSDAY` AS<{{{><}}}>`LANDINGSDAY`,<{{{><}}}>`vuelos`.`LANDINGSNIGHT` AS `LANDINGSNIGHT` <{{{><}}}>from ((select<{{{><}}}>`vista_logbook_piloto_completo_resumen`.`idReserva` AS `idReserva`,`vista_logbook_piloto_completo_resumen`.`idVuelo` AS<{{{><}}}>`idVuelo`,`vista_logbook_piloto_completo_resumen`.`idCurso` AS `idCurso`,`vista_logbook_piloto_completo_resumen`.`DATE`<{{{><}}}>AS `DATE`,`vista_logbook_piloto_completo_resumen`.`DEPARTUREPLACE` AS<{{{><}}}>`DEPARTUREPLACE`,`vista_logbook_piloto_completo_resumen`.`DEPARTURETIME` AS<{{{><}}}>`DEPARTURETIME`,`vista_logbook_piloto_completo_resumen`.`ARRIVALPLACE` AS<{{{><}}}>`ARRIVALPLACE`,`vista_logbook_piloto_completo_resumen`.`ARRIVALTIME` AS<{{{><}}}>`ARRIVALTIME`,`vista_logbook_piloto_completo_resumen`.`AIRCRAFTMODEL` AS<{{{><}}}>`AIRCRAFTMODEL`,`vista_logbook_piloto_completo_resumen`.`AIRCRAFTREGISTRATION` AS<{{{><}}}>`AIRCRAFTREGISTRATION`,`vista_logbook_piloto_completo_resumen`.`PICNAME` AS<{{{><}}}>`PICNAME`,`vista_logbook_piloto_completo_resumen`.`REMARKS` AS<{{{><}}}>`REMARKS`,`vista_logbook_piloto_completo_resumen`.`PILOTO` AS `PILOTO`,`vista_logbook_piloto_completo_resumen`.`CURSO`<{{{><}}}>AS `CURSO`,`vista_logbook_piloto_completo_resumen`.`TOTALVUELO` AS<{{{><}}}>`TOTALVUELO`,`vista_logbook_piloto_completo_resumen`.`TOTALVUELODAY` AS<{{{><}}}>`TOTALVUELODAY`,`vista_logbook_piloto_completo_resumen`.`TOTALVUELONIGHT` AS<{{{><}}}>`TOTALVUELONIGHT`,`vista_logbook_piloto_completo_resumen`.`SE` AS `SE`,`vista_logbook_piloto_completo_resumen`.`ME` AS<{{{><}}}>`ME`,`vista_logbook_piloto_completo_resumen`.`XCSOLO` AS `XCSOLO`,`vista_logbook_piloto_completo_resumen`.`XCDUAL` AS<{{{><}}}>`XCDUAL`,`vista_logbook_piloto_completo_resumen`.`VFR` AS `VFR`,`vista_logbook_piloto_completo_resumen`.`IFR` AS<{{{><}}}>`IFR`,`vista_logbook_piloto_completo_resumen`.`IFRSIM` AS `IFRSIM`,`vista_logbook_piloto_completo_resumen`.`PIC` AS<{{{><}}}>`PIC`,`vista_logbook_piloto_completo_resumen`.`COPILOT` AS `COPILOT`,`vista_logbook_piloto_completo_resumen`.`DUAL` AS<{{{><}}}>`DUAL`,`vista_logbook_piloto_completo_resumen`.`INSTRUCTOR` AS<{{{><}}}>`INSTRUCTOR`,`vista_logbook_piloto_completo_resumen`.`FSTD` AS<{{{><}}}>`FSTD`,`vista_logbook_piloto_completo_resumen`.`LANDINGSDAY` AS<{{{><}}}>`LANDINGSDAY`,`vista_logbook_piloto_completo_resumen`.`LANDINGSNIGHT` AS `LANDINGSNIGHT` from<{{{><}}}>`admin_aerodynamics`.`vista_logbook_piloto_completo_resumen`) union (select<{{{><}}}>`vista_logbook_instructor_completo_resumen`.`idReserva` AS<{{{><}}}>`idReserva`,`vista_logbook_instructor_completo_resumen`.`idVuelo` AS<{{{><}}}>`idVuelo`,`vista_logbook_instructor_completo_resumen`.`idCurso` AS<{{{><}}}>`idCurso`,`vista_logbook_instructor_completo_resumen`.`DATE` AS<{{{><}}}>`DATE`,`vista_logbook_instructor_completo_resumen`.`DEPARTUREPLACE` AS<{{{><}}}>`DEPARTUREPLACE`,`vista_logbook_instructor_completo_resumen`.`DEPARTURETIME` AS<{{{><}}}>`DEPARTURETIME`,`vista_logbook_instructor_completo_resumen`.`ARRIVALPLACE` AS<{{{><}}}>`ARRIVALPLACE`,`vista_logbook_instructor_completo_resumen`.`ARRIVALTIME` AS<{{{><}}}>`ARRIVALTIME`,`vista_logbook_instructor_completo_resumen`.`AIRCRAFTMODEL` AS<{{{><}}}>`AIRCRAFTMODEL`,`vista_logbook_instructor_completo_resumen`.`AIRCRAFTREGISTRATION` AS<{{{><}}}>`AIRCRAFTREGISTRATION`,`vista_logbook_instructor_completo_resumen`.`PICNAME` AS<{{{><}}}>`PICNAME`,`vista_logbook_instructor_completo_resumen`.`REMARKS` AS<{{{><}}}>`REMARKS`,`vista_logbook_instructor_completo_resumen`.`PILOTO` AS<{{{><}}}>`PILOTO`,`vista_logbook_instructor_completo_resumen`.`CURSO` AS<{{{><}}}>`CURSO`,`vista_logbook_instructor_completo_resumen`.`TOTALVUELO` AS<{{{><}}}>`TOTALVUELO`,`vista_logbook_instructor_completo_resumen`.`TOTALVUELODAY` AS<{{{><}}}>`TOTALVUELODAY`,`vista_logbook_instructor_completo_resumen`.`TOTALVUELONIGHT` AS<{{{><}}}>`TOTALVUELONIGHT`,`vista_logbook_instructor_completo_resumen`.`SE` AS<{{{><}}}>`SE`,`vista_logbook_instructor_completo_resumen`.`ME` AS `ME`,`vista_logbook_instructor_completo_resumen`.`XCSOLO` AS<{{{><}}}>`XCSOLO`,`vista_logbook_instructor_completo_resumen`.`XCDUAL` AS<{{{><}}}>`XCDUAL`,`vista_logbook_instructor_completo_resumen`.`VFR` AS `VFR`,`vista_logbook_instructor_completo_resumen`.`IFR` AS<{{{><}}}>`IFR`,`vista_logbook_instructor_completo_resumen`.`IFRSIM` AS `IFRSIM`,`vista_logbook_instructor_completo_resumen`.`PIC`<{{{><}}}>AS `PIC`,`vista_logbook_instructor_completo_resumen`.`COPILOT` AS<{{{><}}}>`COPILOT`,`vista_logbook_instructor_completo_resumen`.`DUAL` AS<{{{><}}}>`DUAL`,`vista_logbook_instructor_completo_resumen`.`INSTRUCTOR` AS<{{{><}}}>`INSTRUCTOR`,`vista_logbook_instructor_completo_resumen`.`FSTD` AS<{{{><}}}>`FSTD`,`vista_logbook_instructor_completo_resumen`.`LANDINGSDAY` AS<{{{><}}}>`LANDINGSDAY`,`vista_logbook_instructor_completo_resumen`.`LANDINGSNIGHT` AS `LANDINGSNIGHT` from<{{{><}}}>`admin_aerodynamics`.`vista_logbook_instructor_completo_resumen`)) `vuelos` group by<{{{><}}}>`vuelos`.`PILOTO`,`vuelos`.`idCurso`
Servers\aerodynamics.com.es\QueryHistory\119<|||>1<|||>2021-03-02 14:48:42|admin_aerodynamics|93|select `vuelos`.`idReserva` AS `idReserva`,`vuelos`.`idVuelo` AS `idVuelo`,`vuelos`.`idCurso` AS<{{{><}}}>`idCurso`,<{{{><}}}>`vuelos`.`DATE` AS `DATE`,<{{{><}}}>`vuelos`.`DEPARTUREPLACE` AS `DEPARTUREPLACE`,<{{{><}}}>`vuelos`.`DEPARTURETIME` AS<{{{><}}}>`DEPARTURETIME`,<{{{><}}}>`vuelos`.`ARRIVALPLACE` AS `ARRIVALPLACE`,<{{{><}}}>`vuelos`.`ARRIVALTIME` AS<{{{><}}}>`ARRIVALTIME`,<{{{><}}}>`vuelos`.`AIRCRAFTMODEL` AS `AIRCRAFTMODEL`,<{{{><}}}>`vuelos`.`AIRCRAFTREGISTRATION` AS<{{{><}}}>`AIRCRAFTREGISTRATION`,<{{{><}}}>`vuelos`.`PICNAME` AS `PICNAME`,<{{{><}}}>`vuelos`.`REMARKS` AS `REMARKS`,<{{{><}}}>`vuelos`.`PILOTO` AS<{{{><}}}>`PILOTO`,<{{{><}}}>`vuelos`.`CURSO` AS `CURSO`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`TOTALVUELO`))),'%H:%i') AS `TOTALVUELO`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`TOTALVUELODAY`))),'%H:%i') AS<{{{><}}}>`TOTALVUELODAY`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`TOTALVUELONIGHT`))),'%H:%i') AS `TOTALVUELONIGHT`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`SE`))),'%H:%i') AS `SE`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`ME`))),'%H:%i') AS<{{{><}}}>`ME`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`XCSOLO`))),'%H:%i') AS `XCSOLO`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`XCDUAL`))),'%H:%i') AS `XCDUAL`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`VFR`))),'%H:%i') AS `VFR`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`IFR`))),'%H:%i') AS<{{{><}}}>`IFR`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`IFRSIM`))),'%H:%i') AS `IFRSIM`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`PIC`))),'%H:%i') AS `PIC`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`COPILOT`))),'%H:%i') AS `COPILOT`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`DUAL`))),'%H:%i') AS<{{{><}}}>`DUAL`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`INSTRUCTOR`))),'%H:%i') AS `INSTRUCTOR`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`FSTD`))),'%H:%i') AS `FSTD`,<{{{><}}}>`vuelos`.`LANDINGSDAY` AS<{{{><}}}>`LANDINGSDAY`,<{{{><}}}>`vuelos`.`LANDINGSNIGHT` AS `LANDINGSNIGHT` <{{{><}}}>from ((select `vista_logbook_piloto_completo`.`idReserva` AS<{{{><}}}>`idReserva`,`vista_logbook_piloto_completo`.`idVuelo` AS `idVuelo`,`vista_logbook_piloto_completo`.`idCurso` AS<{{{><}}}>`idCurso`,`vista_logbook_piloto_completo`.`DATE` AS `DATE`,`vista_logbook_piloto_completo`.`DEPARTUREPLACE` AS<{{{><}}}>`DEPARTUREPLACE`,`vista_logbook_piloto_completo`.`DEPARTURETIME` AS<{{{><}}}>`DEPARTURETIME`,`vista_logbook_piloto_completo`.`ARRIVALPLACE` AS<{{{><}}}>`ARRIVALPLACE`,`vista_logbook_piloto_completo`.`ARRIVALTIME` AS<{{{><}}}>`ARRIVALTIME`,`vista_logbook_piloto_completo`.`AIRCRAFTMODEL` AS<{{{><}}}>`AIRCRAFTMODEL`,`vista_logbook_piloto_completo`.`AIRCRAFTREGISTRATION` AS<{{{><}}}>`AIRCRAFTREGISTRATION`,`vista_logbook_piloto_completo`.`PICNAME` AS `PICNAME`,`vista_logbook_piloto_completo`.`REMARKS`<{{{><}}}>AS `REMARKS`,`vista_logbook_piloto_completo`.`PILOTO` AS `PILOTO`,`vista_logbook_piloto_completo`.`CURSO` AS<{{{><}}}>`CURSO`,`vista_logbook_piloto_completo`.`TOTALVUELO` AS `TOTALVUELO`,`vista_logbook_piloto_completo`.`TOTALVUELODAY` AS<{{{><}}}>`TOTALVUELODAY`,`vista_logbook_piloto_completo`.`TOTALVUELONIGHT` AS<{{{><}}}>`TOTALVUELONIGHT`,`vista_logbook_piloto_completo`.`SE` AS `SE`,`vista_logbook_piloto_completo`.`ME` AS<{{{><}}}>`ME`,`vista_logbook_piloto_completo`.`XCSOLO` AS `XCSOLO`,`vista_logbook_piloto_completo`.`XCDUAL` AS<{{{><}}}>`XCDUAL`,`vista_logbook_piloto_completo`.`VFR` AS `VFR`,`vista_logbook_piloto_completo`.`IFR` AS<{{{><}}}>`IFR`,`vista_logbook_piloto_completo`.`IFRSIM` AS `IFRSIM`,`vista_logbook_piloto_completo`.`PIC` AS<{{{><}}}>`PIC`,`vista_logbook_piloto_completo`.`COPILOT` AS `COPILOT`,`vista_logbook_piloto_completo`.`DUAL` AS<{{{><}}}>`DUAL`,`vista_logbook_piloto_completo`.`INSTRUCTOR` AS `INSTRUCTOR`,`vista_logbook_piloto_completo`.`FSTD` AS<{{{><}}}>`FSTD`,`vista_logbook_piloto_completo`.`LANDINGSDAY` AS `LANDINGSDAY`,`vista_logbook_piloto_completo`.`LANDINGSNIGHT` AS<{{{><}}}>`LANDINGSNIGHT` from `admin_aerodynamics`.`vista_logbook_piloto_completo`) union (select<{{{><}}}>`vista_logbook_instructor_completo`.`idReserva` AS `idReserva`,`vista_logbook_instructor_completo`.`idVuelo` AS<{{{><}}}>`idVuelo`,`vista_logbook_instructor_completo`.`idCurso` AS `idCurso`,`vista_logbook_instructor_completo`.`DATE` AS<{{{><}}}>`DATE`,`vista_logbook_instructor_completo`.`DEPARTUREPLACE` AS<{{{><}}}>`DEPARTUREPLACE`,`vista_logbook_instructor_completo`.`DEPARTURETIME` AS<{{{><}}}>`DEPARTURETIME`,`vista_logbook_instructor_completo`.`ARRIVALPLACE` AS<{{{><}}}>`ARRIVALPLACE`,`vista_logbook_instructor_completo`.`ARRIVALTIME` AS<{{{><}}}>`ARRIVALTIME`,`vista_logbook_instructor_completo`.`AIRCRAFTMODEL` AS<{{{><}}}>`AIRCRAFTMODEL`,`vista_logbook_instructor_completo`.`AIRCRAFTREGISTRATION` AS<{{{><}}}>`AIRCRAFTREGISTRATION`,`vista_logbook_instructor_completo`.`PICNAME` AS<{{{><}}}>`PICNAME`,`vista_logbook_instructor_completo`.`REMARKS` AS `REMARKS`,`vista_logbook_instructor_completo`.`PILOTO` AS<{{{><}}}>`PILOTO`,`vista_logbook_instructor_completo`.`CURSO` AS `CURSO`,`vista_logbook_instructor_completo`.`TOTALVUELO` AS<{{{><}}}>`TOTALVUELO`,`vista_logbook_instructor_completo`.`TOTALVUELODAY` AS<{{{><}}}>`TOTALVUELODAY`,`vista_logbook_instructor_completo`.`TOTALVUELONIGHT` AS<{{{><}}}>`TOTALVUELONIGHT`,`vista_logbook_instructor_completo`.`SE` AS `SE`,`vista_logbook_instructor_completo`.`ME` AS<{{{><}}}>`ME`,`vista_logbook_instructor_completo`.`XCSOLO` AS `XCSOLO`,`vista_logbook_instructor_completo`.`XCDUAL` AS<{{{><}}}>`XCDUAL`,`vista_logbook_instructor_completo`.`VFR` AS `VFR`,`vista_logbook_instructor_completo`.`IFR` AS<{{{><}}}>`IFR`,`vista_logbook_instructor_completo`.`IFRSIM` AS `IFRSIM`,`vista_logbook_instructor_completo`.`PIC` AS<{{{><}}}>`PIC`,`vista_logbook_instructor_completo`.`COPILOT` AS `COPILOT`,`vista_logbook_instructor_completo`.`DUAL` AS<{{{><}}}>`DUAL`,`vista_logbook_instructor_completo`.`INSTRUCTOR` AS `INSTRUCTOR`,`vista_logbook_instructor_completo`.`FSTD` AS<{{{><}}}>`FSTD`,`vista_logbook_instructor_completo`.`LANDINGSDAY` AS<{{{><}}}>`LANDINGSDAY`,`vista_logbook_instructor_completo`.`LANDINGSNIGHT` AS `LANDINGSNIGHT` from<{{{><}}}>`admin_aerodynamics`.`vista_logbook_instructor_completo`)) `vuelos` order by str_to_date(`vuelos`.`DATE`,'%d-%m-%Y')<{{{><}}}>desc,`vuelos`.`ARRIVALTIME` desc
Servers\aerodynamics.com.es\QueryHistory\336<|||>1<|||>2021-03-02 15:41:59|admin_aerodynamics|1125|select `vuelos`.`idReserva` AS `idReserva`,`vuelos`.`idVuelo` AS `idVuelo`,`vuelos`.`idCurso` AS `idCurso`,`vuelos`.`DATE` AS `DATE`,`vuelos`.`DEPARTUREPLACE` AS `DEPARTUREPLACE`,`vuelos`.`DEPARTURETIME` AS `DEPARTURETIME`,`vuelos`.`ARRIVALPLACE` AS `ARRIVALPLACE`,`vuelos`.`ARRIVALTIME` AS `ARRIVALTIME`,`vuelos`.`AIRCRAFTMODEL` AS `AIRCRAFTMODEL`,`vuelos`.`AIRCRAFTREGISTRATION` AS `AIRCRAFTREGISTRATION`,`vuelos`.`PICNAME` AS `PICNAME`,`vuelos`.`REMARKS` AS `REMARKS`,`vuelos`.`PILOTO` AS `PILOTO`,`vuelos`.`CURSO` AS `CURSO`,`vuelos`.`TOTALVUELO` AS `TOTALVUELO`,`vuelos`.`TOTALVUELODAY` AS `TOTALVUELODAY`,`vuelos`.`TOTALVUELONIGHT` AS `TOTALVUELONIGHT`,`vuelos`.`SE` AS `SE`,`vuelos`.`ME` AS `ME`,`vuelos`.`XCSOLO` AS `XCSOLO`,`vuelos`.`XCDUAL` AS `XCDUAL`,`vuelos`.`VFR` AS `VFR`,`vuelos`.`IFR` AS `IFR`,`vuelos`.`IFRSIM` AS `IFRSIM`,`vuelos`.`PIC` AS `PIC`,`vuelos`.`COPILOT` AS `COPILOT`,`vuelos`.`DUAL` AS `DUAL`,`vuelos`.`INSTRUCTOR` AS `INSTRUCTOR`,`vuelos`.`FSTD` AS `FSTD`,`vuelos`.`LANDINGSDAY` AS `LANDINGSDAY`,`vuelos`.`LANDINGSNIGHT` AS `LANDINGSNIGHT` from ((select `vista_logbook_piloto_completo`.`idReserva` AS `idReserva`,`vista_logbook_piloto_completo`.`idVuelo` AS `idVuelo`,`vista_logbook_piloto_completo`.`idCurso` AS `idCurso`,`vista_logbook_piloto_completo`.`DATE` AS `DATE`,`vista_logbook_piloto_completo`.`DEPARTUREPLACE` AS `DEPARTUREPLACE`,`vista_logbook_piloto_completo`.`DEPARTURETIME` AS `DEPARTURETIME`,`vista_logbook_piloto_completo`.`ARRIVALPLACE` AS `ARRIVALPLACE`,`vista_logbook_piloto_completo`.`ARRIVALTIME` AS `ARRIVALTIME`,`vista_logbook_piloto_completo`.`AIRCRAFTMODEL` AS `AIRCRAFTMODEL`,`vista_logbook_piloto_completo`.`AIRCRAFTREGISTRATION` AS `AIRCRAFTREGISTRATION`,`vista_logbook_piloto_completo`.`PICNAME` AS `PICNAME`,`vista_logbook_piloto_completo`.`REMARKS` AS `REMARKS`,`vista_logbook_piloto_completo`.`PILOTO` AS `PILOTO`,`vista_logbook_piloto_completo`.`CURSO` AS `CURSO`,`vista_logbook_piloto_completo`.`TOTALVUELO` AS `TOTALVUELO`,`vista_logbook_piloto_completo`.`TOTALVUELODAY` AS `TOTALVUELODAY`,`vista_logbook_piloto_completo`.`TOTALVUELONIGHT` AS `TOTALVUELONIGHT`,`vista_logbook_piloto_completo`.`SE` AS `SE`,`vista_logbook_piloto_completo`.`ME` AS `ME`,`vista_logbook_piloto_completo`.`XCSOLO` AS `XCSOLO`,`vista_logbook_piloto_completo`.`XCDUAL` AS `XCDUAL`,`vista_logbook_piloto_completo`.`VFR` AS `VFR`,`vista_logbook_piloto_completo`.`IFR` AS `IFR`,`vista_logbook_piloto_completo`.`IFRSIM` AS `IFRSIM`,`vista_logbook_piloto_completo`.`PIC` AS `PIC`,`vista_logbook_piloto_completo`.`COPILOT` AS `COPILOT`,`vista_logbook_piloto_completo`.`DUAL` AS `DUAL`,`vista_logbook_piloto_completo`.`INSTRUCTOR` AS `INSTRUCTOR`,`vista_logbook_piloto_completo`.`FSTD` AS `FSTD`,`vista_logbook_piloto_completo`.`LANDINGSDAY` AS `LANDINGSDAY`,`vista_logbook_piloto_completo`.`LANDINGSNIGHT` AS `LANDINGSNIGHT` from `admin_aerodynamics`.`vista_logbook_piloto_completo`) union (select `vista_logbook_instructor_completo`.`idReserva` AS `idReserva`,`vista_logbook_instructor_completo`.`idVuelo` AS `idVuelo`,`vista_logbook_instructor_completo`.`idCurso` AS `idCurso`,`vista_logbook_instructor_completo`.`DATE` AS `DATE`,`vista_logbook_instructor_completo`.`DEPARTUREPLACE` AS `DEPARTUREPLACE`,`vista_logbook_instructor_completo`.`DEPARTURETIME` AS `DEPARTURETIME`,`vista_logbook_instructor_completo`.`ARRIVALPLACE` AS `ARRIVALPLACE`,`vista_logbook_instructor_completo`.`ARRIVALTIME` AS `ARRIVALTIME`,`vista_logbook_instructor_completo`.`AIRCRAFTMODEL` AS `AIRCRAFTMODEL`,`vista_logbook_instructor_completo`.`AIRCRAFTREGISTRATION` AS `AIRCRAFTREGISTRATION`,`vista_logbook_instructor_completo`.`PICNAME` AS `PICNAME`,`vista_logbook_instructor_completo`.`REMARKS` AS `REMARKS`,`vista_logbook_instructor_completo`.`PILOTO` AS `PILOTO`,`vista_logbook_instructor_completo`.`CURSO` AS `CURSO`,`vista_logbook_instructor_completo`.`TOTALVUELO` AS `TOTALVUELO`,`vista_logbook_instructor_completo`.`TOTALVUELODAY` AS `TOTALVUELODAY`,`vista_logbook_instructor_completo`.`TOTALVUELONIGHT` AS `TOTALVUELONIGHT`,`vista_logbook_instructor_completo`.`SE` AS `SE`,`vista_logbook_instructor_completo`.`ME` AS `ME`,`vista_logbook_instructor_completo`.`XCSOLO` AS `XCSOLO`,`vista_logbook_instructor_completo`.`XCDUAL` AS `XCDUAL`,`vista_logbook_instructor_completo`.`VFR` AS `VFR`,`vista_logbook_instructor_completo`.`IFR` AS `IFR`,`vista_logbook_instructor_completo`.`IFRSIM` AS `IFRSIM`,`vista_logbook_instructor_completo`.`PIC` AS `PIC`,`vista_logbook_instructor_completo`.`COPILOT` AS `COPILOT`,`vista_logbook_instructor_completo`.`DUAL` AS `DUAL`,`vista_logbook_instructor_completo`.`INSTRUCTOR` AS `INSTRUCTOR`,`vista_logbook_instructor_completo`.`FSTD` AS `FSTD`,`vista_logbook_instructor_completo`.`LANDINGSDAY` AS `LANDINGSDAY`,`vista_logbook_instructor_completo`.`LANDINGSNIGHT` AS `LANDINGSNIGHT` from `admin_aerodynamics`.`vista_logbook_instructor_completo`)) `vuelos` order by str_to_date(`vuelos`.`DATE`,'%d-%m-%Y') desc,`vuelos`.`ARRIVALTIME` DESC
Servers\aerodynamics.com.es\QueryHistory\338<|||>1<|||>2021-03-02 15:42:35|admin_aerodynamics|78|select `vuelos`.`idReserva` AS `idReserva`,`vuelos`.`idVuelo` AS `idVuelo`,`vuelos`.`idCurso` AS<{{{><}}}>`idCurso`,<{{{><}}}>`vuelos`.`DATE` AS `DATE`,<{{{><}}}>`vuelos`.`DEPARTUREPLACE` AS `DEPARTUREPLACE`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`DEPARTURETIME`))),'%H:%i') AS<{{{><}}}>`DEPARTURETIME`,<{{{><}}}>`vuelos`.`ARRIVALPLACE` AS `ARRIVALPLACE`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`ARRIVALTIME`))),'%H:%i') AS<{{{><}}}>`ARRIVALTIME`,<{{{><}}}>`vuelos`.`AIRCRAFTMODEL` AS `AIRCRAFTMODEL`,<{{{><}}}>`vuelos`.`AIRCRAFTREGISTRATION` AS<{{{><}}}>`AIRCRAFTREGISTRATION`,<{{{><}}}>`vuelos`.`PICNAME` AS `PICNAME`,<{{{><}}}>`vuelos`.`REMARKS` AS `REMARKS`,<{{{><}}}>`vuelos`.`PILOTO` AS<{{{><}}}>`PILOTO`,<{{{><}}}>`vuelos`.`CURSO` AS `CURSO`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`TOTALVUELO`))),'%H:%i') AS `TOTALVUELO`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`TOTALVUELODAY`))),'%H:%i') AS<{{{><}}}>`TOTALVUELODAY`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`TOTALVUELONIGHT`))),'%H:%i') AS `TOTALVUELONIGHT`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`SE`))),'%H:%i') AS `SE`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`ME`))),'%H:%i') AS<{{{><}}}>`ME`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`XCSOLO`))),'%H:%i') AS `XCSOLO`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`XCDUAL`))),'%H:%i') AS `XCDUAL`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`VFR`))),'%H:%i') AS `VFR`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`IFR`))),'%H:%i') AS<{{{><}}}>`IFR`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`IFRSIM`))),'%H:%i') AS `IFRSIM`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`PIC`))),'%H:%i') AS `PIC`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`COPILOT`))),'%H:%i') AS `COPILOT`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`DUAL`))),'%H:%i') AS<{{{><}}}>`DUAL`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`INSTRUCTOR`))),'%H:%i') AS `INSTRUCTOR`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`FSTD`))),'%H:%i') AS `FSTD`,<{{{><}}}>`vuelos`.`LANDINGSDAY` AS<{{{><}}}>`LANDINGSDAY`,<{{{><}}}>`vuelos`.`LANDINGSNIGHT` AS `LANDINGSNIGHT` <{{{><}}}>from ((select `vista_logbook_piloto_completo`.`idReserva` AS<{{{><}}}>`idReserva`,`vista_logbook_piloto_completo`.`idVuelo` AS `idVuelo`,`vista_logbook_piloto_completo`.`idCurso` AS<{{{><}}}>`idCurso`,`vista_logbook_piloto_completo`.`DATE` AS `DATE`,`vista_logbook_piloto_completo`.`DEPARTUREPLACE` AS<{{{><}}}>`DEPARTUREPLACE`,`vista_logbook_piloto_completo`.`DEPARTURETIME` AS<{{{><}}}>`DEPARTURETIME`,`vista_logbook_piloto_completo`.`ARRIVALPLACE` AS<{{{><}}}>`ARRIVALPLACE`,`vista_logbook_piloto_completo`.`ARRIVALTIME` AS<{{{><}}}>`ARRIVALTIME`,`vista_logbook_piloto_completo`.`AIRCRAFTMODEL` AS<{{{><}}}>`AIRCRAFTMODEL`,`vista_logbook_piloto_completo`.`AIRCRAFTREGISTRATION` AS<{{{><}}}>`AIRCRAFTREGISTRATION`,`vista_logbook_piloto_completo`.`PICNAME` AS `PICNAME`,`vista_logbook_piloto_completo`.`REMARKS`<{{{><}}}>AS `REMARKS`,`vista_logbook_piloto_completo`.`PILOTO` AS `PILOTO`,`vista_logbook_piloto_completo`.`CURSO` AS<{{{><}}}>`CURSO`,`vista_logbook_piloto_completo`.`TOTALVUELO` AS `TOTALVUELO`,`vista_logbook_piloto_completo`.`TOTALVUELODAY` AS<{{{><}}}>`TOTALVUELODAY`,`vista_logbook_piloto_completo`.`TOTALVUELONIGHT` AS<{{{><}}}>`TOTALVUELONIGHT`,`vista_logbook_piloto_completo`.`SE` AS `SE`,`vista_logbook_piloto_completo`.`ME` AS<{{{><}}}>`ME`,`vista_logbook_piloto_completo`.`XCSOLO` AS `XCSOLO`,`vista_logbook_piloto_completo`.`XCDUAL` AS<{{{><}}}>`XCDUAL`,`vista_logbook_piloto_completo`.`VFR` AS `VFR`,`vista_logbook_piloto_completo`.`IFR` AS<{{{><}}}>`IFR`,`vista_logbook_piloto_completo`.`IFRSIM` AS `IFRSIM`,`vista_logbook_piloto_completo`.`PIC` AS<{{{><}}}>`PIC`,`vista_logbook_piloto_completo`.`COPILOT` AS `COPILOT`,`vista_logbook_piloto_completo`.`DUAL` AS<{{{><}}}>`DUAL`,`vista_logbook_piloto_completo`.`INSTRUCTOR` AS `INSTRUCTOR`,`vista_logbook_piloto_completo`.`FSTD` AS<{{{><}}}>`FSTD`,`vista_logbook_piloto_completo`.`LANDINGSDAY` AS `LANDINGSDAY`,`vista_logbook_piloto_completo`.`LANDINGSNIGHT` AS<{{{><}}}>`LANDINGSNIGHT` from `admin_aerodynamics`.`vista_logbook_piloto_completo`) union (select<{{{><}}}>`vista_logbook_instructor_completo`.`idReserva` AS `idReserva`,`vista_logbook_instructor_completo`.`idVuelo` AS<{{{><}}}>`idVuelo`,`vista_logbook_instructor_completo`.`idCurso` AS `idCurso`,`vista_logbook_instructor_completo`.`DATE` AS<{{{><}}}>`DATE`,`vista_logbook_instructor_completo`.`DEPARTUREPLACE` AS<{{{><}}}>`DEPARTUREPLACE`,`vista_logbook_instructor_completo`.`DEPARTURETIME` AS<{{{><}}}>`DEPARTURETIME`,`vista_logbook_instructor_completo`.`ARRIVALPLACE` AS<{{{><}}}>`ARRIVALPLACE`,`vista_logbook_instructor_completo`.`ARRIVALTIME` AS<{{{><}}}>`ARRIVALTIME`,`vista_logbook_instructor_completo`.`AIRCRAFTMODEL` AS<{{{><}}}>`AIRCRAFTMODEL`,`vista_logbook_instructor_completo`.`AIRCRAFTREGISTRATION` AS<{{{><}}}>`AIRCRAFTREGISTRATION`,`vista_logbook_instructor_completo`.`PICNAME` AS<{{{><}}}>`PICNAME`,`vista_logbook_instructor_completo`.`REMARKS` AS `REMARKS`,`vista_logbook_instructor_completo`.`PILOTO` AS<{{{><}}}>`PILOTO`,`vista_logbook_instructor_completo`.`CURSO` AS `CURSO`,`vista_logbook_instructor_completo`.`TOTALVUELO` AS<{{{><}}}>`TOTALVUELO`,`vista_logbook_instructor_completo`.`TOTALVUELODAY` AS<{{{><}}}>`TOTALVUELODAY`,`vista_logbook_instructor_completo`.`TOTALVUELONIGHT` AS<{{{><}}}>`TOTALVUELONIGHT`,`vista_logbook_instructor_completo`.`SE` AS `SE`,`vista_logbook_instructor_completo`.`ME` AS<{{{><}}}>`ME`,`vista_logbook_instructor_completo`.`XCSOLO` AS `XCSOLO`,`vista_logbook_instructor_completo`.`XCDUAL` AS<{{{><}}}>`XCDUAL`,`vista_logbook_instructor_completo`.`VFR` AS `VFR`,`vista_logbook_instructor_completo`.`IFR` AS<{{{><}}}>`IFR`,`vista_logbook_instructor_completo`.`IFRSIM` AS `IFRSIM`,`vista_logbook_instructor_completo`.`PIC` AS<{{{><}}}>`PIC`,`vista_logbook_instructor_completo`.`COPILOT` AS `COPILOT`,`vista_logbook_instructor_completo`.`DUAL` AS<{{{><}}}>`DUAL`,`vista_logbook_instructor_completo`.`INSTRUCTOR` AS `INSTRUCTOR`,`vista_logbook_instructor_completo`.`FSTD` AS<{{{><}}}>`FSTD`,`vista_logbook_instructor_completo`.`LANDINGSDAY` AS<{{{><}}}>`LANDINGSDAY`,`vista_logbook_instructor_completo`.`LANDINGSNIGHT` AS `LANDINGSNIGHT` from<{{{><}}}>`admin_aerodynamics`.`vista_logbook_instructor_completo`)) `vuelos` order by str_to_date(`vuelos`.`DATE`,'%d-%m-%Y')<{{{><}}}>desc,`vuelos`.`ARRIVALTIME` desc
Servers\aerodynamics.com.es\QueryHistory\337<|||>1<|||>2021-03-02 15:50:28|admin_aerodynamics|93|select `vuelos`.`idReserva` AS `idReserva`,`vuelos`.`idVuelo` AS `idVuelo`,`vuelos`.`idCurso` AS<{{{><}}}>`idCurso`,<{{{><}}}>`vuelos`.`DATE` AS `DATE`,<{{{><}}}>`vuelos`.`DEPARTUREPLACE` AS `DEPARTUREPLACE`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`DEPARTURETIME`))),'%H:%i') AS<{{{><}}}>`DEPARTURETIME`,<{{{><}}}>`vuelos`.`ARRIVALPLACE` AS `ARRIVALPLACE`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`ARRIVALTIME`))),'%H:%i') AS<{{{><}}}>`ARRIVALTIME`,<{{{><}}}>`vuelos`.`AIRCRAFTMODEL` AS `AIRCRAFTMODEL`,<{{{><}}}>`vuelos`.`AIRCRAFTREGISTRATION` AS<{{{><}}}>`AIRCRAFTREGISTRATION`,<{{{><}}}>`vuelos`.`PICNAME` AS `PICNAME`,<{{{><}}}>`vuelos`.`REMARKS` AS `REMARKS`,<{{{><}}}>`vuelos`.`PILOTO` AS<{{{><}}}>`PILOTO`,<{{{><}}}>`vuelos`.`CURSO` AS `CURSO`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`TOTALVUELO`))),'%H:%i') AS `TOTALVUELO`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`TOTALVUELODAY`))),'%H:%i') AS<{{{><}}}>`TOTALVUELODAY`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`TOTALVUELONIGHT`))),'%H:%i') AS `TOTALVUELONIGHT`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`SE`))),'%H:%i') AS `SE`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`ME`))),'%H:%i') AS<{{{><}}}>`ME`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`XCSOLO`))),'%H:%i') AS `XCSOLO`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`XCDUAL`))),'%H:%i') AS `XCDUAL`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`VFR`))),'%H:%i') AS `VFR`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`IFR`))),'%H:%i') AS<{{{><}}}>`IFR`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`IFRSIM`))),'%H:%i') AS `IFRSIM`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`PIC`))),'%H:%i') AS `PIC`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`COPILOT`))),'%H:%i') AS `COPILOT`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`DUAL`))),'%H:%i') AS<{{{><}}}>`DUAL`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`INSTRUCTOR`))),'%H:%i') AS `INSTRUCTOR`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vuelos`.`FSTD`))),'%H:%i') AS `FSTD`,<{{{><}}}>`vuelos`.`LANDINGSDAY` AS<{{{><}}}>`LANDINGSDAY`,<{{{><}}}>`vuelos`.`LANDINGSNIGHT` AS `LANDINGSNIGHT` <{{{><}}}>from ((select `vista_logbook_piloto_completo`.`idReserva` AS<{{{><}}}>`idReserva`,<{{{><}}}>`vista_logbook_piloto_completo`.`idVuelo` AS `idVuelo`,<{{{><}}}>`vista_logbook_piloto_completo`.`idCurso` AS<{{{><}}}>`idCurso`,<{{{><}}}>`vista_logbook_piloto_completo`.`DATE` AS `DATE`,<{{{><}}}>`vista_logbook_piloto_completo`.`DEPARTUREPLACE` AS<{{{><}}}>`DEPARTUREPLACE`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_piloto_completo`.`DEPARTURETIME`))),'%H:%i') AS<{{{><}}}>`DEPARTURETIME`,<{{{><}}}>`vista_logbook_piloto_completo`.`ARRIVALPLACE` AS<{{{><}}}>`ARRIVALPLACE`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_piloto_completo`.`ARRIVALTIME`))),'%H:%i') AS<{{{><}}}>`ARRIVALTIME`,<{{{><}}}>`vista_logbook_piloto_completo`.`AIRCRAFTMODEL` AS<{{{><}}}>`AIRCRAFTMODEL`,<{{{><}}}>`vista_logbook_piloto_completo`.`AIRCRAFTREGISTRATION` AS<{{{><}}}>`AIRCRAFTREGISTRATION`,<{{{><}}}>`vista_logbook_piloto_completo`.`PICNAME` AS `PICNAME`,<{{{><}}}>`vista_logbook_piloto_completo`.`REMARKS`<{{{><}}}>AS `REMARKS`,<{{{><}}}>`vista_logbook_piloto_completo`.`PILOTO` AS `PILOTO`,<{{{><}}}>`vista_logbook_piloto_completo`.`CURSO` AS<{{{><}}}>`CURSO`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_piloto_completo`.`TOTALVUELO`))),'%H:%i') AS `TOTALVUELO`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_piloto_completo`.`TOTALVUELODAY`))),'%H:%i') AS<{{{><}}}>`TOTALVUELODAY`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_piloto_completo`.`TOTALVUELONIGHT`))),'%H:%i') AS<{{{><}}}>`TOTALVUELONIGHT`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_piloto_completo`.`SE`))),'%H:%i') AS `SE`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_piloto_completo`.`ME`))),'%H:%i') AS<{{{><}}}>`ME`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_piloto_completo`.`XCSOLO`))),'%H:%i') AS `XCSOLO`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_piloto_completo`.`XCDUAL`))),'%H:%i') AS<{{{><}}}>`XCDUAL`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_piloto_completo`.`VFR`))),'%H:%i') AS `VFR`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_piloto_completo`.`IFR`))),'%H:%i') AS<{{{><}}}>`IFR`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_piloto_completo`.`IFRSIM`))),'%H:%i') AS `IFRSIM`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_piloto_completo`.`PIC`))),'%H:%i') AS<{{{><}}}>`PIC`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_piloto_completo`.`COPILOT`))),'%H:%i') AS `COPILOT`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_piloto_completo`.`DUAL`))),'%H:%i') AS<{{{><}}}>`DUAL`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_piloto_completo`.`INSTRUCTOR`))),'%H:%i') AS `INSTRUCTOR`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_piloto_completo`.`FSTD`))),'%H:%i') AS<{{{><}}}>`FSTD`,<{{{><}}}>`vista_logbook_piloto_completo`.`LANDINGSDAY` AS `LANDINGSDAY`,<{{{><}}}>`vista_logbook_piloto_completo`.`LANDINGSNIGHT` AS<{{{><}}}>`LANDINGSNIGHT` from `admin_aerodynamics`.`vista_logbook_piloto_completo`) union (select<{{{><}}}>`vista_logbook_instructor_completo`.`idReserva` AS `idReserva`,<{{{><}}}>`vista_logbook_instructor_completo`.`idVuelo` AS<{{{><}}}>`idVuelo`,<{{{><}}}>`vista_logbook_instructor_completo`.`idCurso` AS `idCurso`,<{{{><}}}>`vista_logbook_instructor_completo`.`DATE` AS<{{{><}}}>`DATE`,<{{{><}}}>`vista_logbook_instructor_completo`.`DEPARTUREPLACE` AS<{{{><}}}>`DEPARTUREPLACE`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_instructor_completo`.`DEPARTURETIME`))),'%H:%i') AS<{{{><}}}>`DEPARTURETIME`,<{{{><}}}>`vista_logbook_instructor_completo`.`ARRIVALPLACE` AS<{{{><}}}>`ARRIVALPLACE`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_instructor_completo`.`ARRIVALTIME`))),'%H:%i') AS<{{{><}}}>`ARRIVALTIME`,<{{{><}}}>`vista_logbook_instructor_completo`.`AIRCRAFTMODEL` AS<{{{><}}}>`AIRCRAFTMODEL`,<{{{><}}}>`vista_logbook_instructor_completo`.`AIRCRAFTREGISTRATION` AS<{{{><}}}>`AIRCRAFTREGISTRATION`,<{{{><}}}>`vista_logbook_instructor_completo`.`PICNAME` AS<{{{><}}}>`PICNAME`,<{{{><}}}>`vista_logbook_instructor_completo`.`REMARKS` AS `REMARKS`,<{{{><}}}>`vista_logbook_instructor_completo`.`PILOTO` AS<{{{><}}}>`PILOTO`,<{{{><}}}>`vista_logbook_instructor_completo`.`CURSO` AS `CURSO`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_instructor_completo`.`TOTALVUELO`))),'%H:%i') AS<{{{><}}}>`TOTALVUELO`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_instructor_completo`.`TOTALVUELODAY`))),'%H:%i') AS<{{{><}}}>`TOTALVUELODAY`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_instructor_completo`.`TOTALVUELONIGHT`))),'%H:%i') AS<{{{><}}}>`TOTALVUELONIGHT`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_instructor_completo`.`SE`))),'%H:%i') AS `SE`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_instructor_completo`.`ME`))),'%H:%i') AS<{{{><}}}>`ME`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_instructor_completo`.`XCSOLO`))),'%H:%i') AS `XCSOLO`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_instructor_completo`.`XCDUAL`))),'%H:%i') AS<{{{><}}}>`XCDUAL`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_instructor_completo`.`VFR`))),'%H:%i') AS `VFR`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_instructor_completo`.`IFR`))),'%H:%i') AS<{{{><}}}>`IFR`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_instructor_completo`.`IFRSIM`))),'%H:%i') AS `IFRSIM`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_instructor_completo`.`PIC`))),'%H:%i') AS<{{{><}}}>`PIC`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_instructor_completo`.`COPILOT`))),'%H:%i') AS `COPILOT`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_instructor_completo`.`DUAL`))),'%H:%i') AS<{{{><}}}>`DUAL`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_instructor_completo`.`INSTRUCTOR`))),'%H:%i') AS `INSTRUCTOR`,<{{{><}}}>date_format(sec_to_time(sum(time_to_sec(`vista_logbook_instructor_completo`.`FSTD`))),'%H:%i') AS<{{{><}}}>`FSTD`,<{{{><}}}>`vista_logbook_instructor_completo`.`LANDINGSDAY` AS<{{{><}}}>`LANDINGSDAY`,<{{{><}}}>`vista_logbook_instructor_completo`.`LANDINGSNIGHT` AS `LANDINGSNIGHT` from<{{{><}}}>`admin_aerodynamics`.`vista_logbook_instructor_completo`)) `vuelos` order by str_to_date(`vuelos`.`DATE`,'%d-%m-%Y')<{{{><}}}>desc,`vuelos`.`ARRIVALTIME` desc
Servers\aerodynamics.com.es\QueryHistory\339<|||>1<|||>2021-03-02 15:52:33|admin_aerodynamics|516|select `vuelos`.`idReserva` AS `idReserva`,`vuelos`.`idVuelo` AS `idVuelo`,`vuelos`.`idCurso` AS<{{{><}}}>`idCurso`,<{{{><}}}>`vuelos`.`DATE` AS `DATE`,<{{{><}}}>`vuelos`.`DEPARTUREPLACE` AS `DEPARTUREPLACE`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vuelos`.`DEPARTURETIME`))),'%H:%i') AS<{{{><}}}>`DEPARTURETIME`,<{{{><}}}>`vuelos`.`ARRIVALPLACE` AS `ARRIVALPLACE`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vuelos`.`ARRIVALTIME`))),'%H:%i') AS<{{{><}}}>`ARRIVALTIME`,<{{{><}}}>`vuelos`.`AIRCRAFTMODEL` AS `AIRCRAFTMODEL`,<{{{><}}}>`vuelos`.`AIRCRAFTREGISTRATION` AS<{{{><}}}>`AIRCRAFTREGISTRATION`,<{{{><}}}>`vuelos`.`PICNAME` AS `PICNAME`,<{{{><}}}>`vuelos`.`REMARKS` AS `REMARKS`,<{{{><}}}>`vuelos`.`PILOTO` AS<{{{><}}}>`PILOTO`,<{{{><}}}>`vuelos`.`CURSO` AS `CURSO`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vuelos`.`TOTALVUELO`))),'%H:%i') AS `TOTALVUELO`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vuelos`.`TOTALVUELODAY`))),'%H:%i') AS<{{{><}}}>`TOTALVUELODAY`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vuelos`.`TOTALVUELONIGHT`))),'%H:%i') AS `TOTALVUELONIGHT`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vuelos`.`SE`))),'%H:%i') AS `SE`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vuelos`.`ME`))),'%H:%i') AS<{{{><}}}>`ME`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vuelos`.`XCSOLO`))),'%H:%i') AS `XCSOLO`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vuelos`.`XCDUAL`))),'%H:%i') AS `XCDUAL`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vuelos`.`VFR`))),'%H:%i') AS `VFR`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vuelos`.`IFR`))),'%H:%i') AS<{{{><}}}>`IFR`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vuelos`.`IFRSIM`))),'%H:%i') AS `IFRSIM`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vuelos`.`PIC`))),'%H:%i') AS `PIC`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vuelos`.`COPILOT`))),'%H:%i') AS `COPILOT`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vuelos`.`DUAL`))),'%H:%i') AS<{{{><}}}>`DUAL`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vuelos`.`INSTRUCTOR`))),'%H:%i') AS `INSTRUCTOR`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vuelos`.`FSTD`))),'%H:%i') AS `FSTD`,<{{{><}}}>`vuelos`.`LANDINGSDAY` AS<{{{><}}}>`LANDINGSDAY`,<{{{><}}}>`vuelos`.`LANDINGSNIGHT` AS `LANDINGSNIGHT` <{{{><}}}>from ((select `vista_logbook_piloto_completo`.`idReserva` AS<{{{><}}}>`idReserva`,<{{{><}}}>`vista_logbook_piloto_completo`.`idVuelo` AS `idVuelo`,<{{{><}}}>`vista_logbook_piloto_completo`.`idCurso` AS<{{{><}}}>`idCurso`,<{{{><}}}>`vista_logbook_piloto_completo`.`DATE` AS `DATE`,<{{{><}}}>`vista_logbook_piloto_completo`.`DEPARTUREPLACE` AS<{{{><}}}>`DEPARTUREPLACE`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vista_logbook_piloto_completo`.`DEPARTURETIME`))),'%H:%i') AS<{{{><}}}>`DEPARTURETIME`,<{{{><}}}>`vista_logbook_piloto_completo`.`ARRIVALPLACE` AS<{{{><}}}>`ARRIVALPLACE`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vista_logbook_piloto_completo`.`ARRIVALTIME`))),'%H:%i') AS<{{{><}}}>`ARRIVALTIME`,<{{{><}}}>`vista_logbook_piloto_completo`.`AIRCRAFTMODEL` AS<{{{><}}}>`AIRCRAFTMODEL`,<{{{><}}}>`vista_logbook_piloto_completo`.`AIRCRAFTREGISTRATION` AS<{{{><}}}>`AIRCRAFTREGISTRATION`,<{{{><}}}>`vista_logbook_piloto_completo`.`PICNAME` AS `PICNAME`,<{{{><}}}>`vista_logbook_piloto_completo`.`REMARKS`<{{{><}}}>AS `REMARKS`,<{{{><}}}>`vista_logbook_piloto_completo`.`PILOTO` AS `PILOTO`,<{{{><}}}>`vista_logbook_piloto_completo`.`CURSO` AS<{{{><}}}>`CURSO`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vista_logbook_piloto_completo`.`TOTALVUELO`))),'%H:%i') AS `TOTALVUELO`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vista_logbook_piloto_completo`.`TOTALVUELODAY`))),'%H:%i') AS<{{{><}}}>`TOTALVUELODAY`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vista_logbook_piloto_completo`.`TOTALVUELONIGHT`))),'%H:%i') AS<{{{><}}}>`TOTALVUELONIGHT`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vista_logbook_piloto_completo`.`SE`))),'%H:%i') AS `SE`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vista_logbook_piloto_completo`.`ME`))),'%H:%i') AS<{{{><}}}>`ME`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vista_logbook_piloto_completo`.`XCSOLO`))),'%H:%i') AS `XCSOLO`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vista_logbook_piloto_completo`.`XCDUAL`))),'%H:%i') AS<{{{><}}}>`XCDUAL`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vista_logbook_piloto_completo`.`VFR`))),'%H:%i') AS `VFR`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vista_logbook_piloto_completo`.`IFR`))),'%H:%i') AS<{{{><}}}>`IFR`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vista_logbook_piloto_completo`.`IFRSIM`))),'%H:%i') AS `IFRSIM`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vista_logbook_piloto_completo`.`PIC`))),'%H:%i') AS<{{{><}}}>`PIC`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vista_logbook_piloto_completo`.`COPILOT`))),'%H:%i') AS `COPILOT`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vista_logbook_piloto_completo`.`DUAL`))),'%H:%i') AS<{{{><}}}>`DUAL`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vista_logbook_piloto_completo`.`INSTRUCTOR`))),'%H:%i') AS `INSTRUCTOR`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vista_logbook_piloto_completo`.`FSTD`))),'%H:%i') AS<{{{><}}}>`FSTD`,<{{{><}}}>`vista_logbook_piloto_completo`.`LANDINGSDAY` AS `LANDINGSDAY`,<{{{><}}}>`vista_logbook_piloto_completo`.`LANDINGSNIGHT` AS<{{{><}}}>`LANDINGSNIGHT` from `admin_aerodynamics`.`vista_logbook_piloto_completo`) union (select<{{{><}}}>`vista_logbook_instructor_completo`.`idReserva` AS `idReserva`,<{{{><}}}>`vista_logbook_instructor_completo`.`idVuelo` AS<{{{><}}}>`idVuelo`,<{{{><}}}>`vista_logbook_instructor_completo`.`idCurso` AS `idCurso`,<{{{><}}}>`vista_logbook_instructor_completo`.`DATE` AS<{{{><}}}>`DATE`,<{{{><}}}>`vista_logbook_instructor_completo`.`DEPARTUREPLACE` AS<{{{><}}}>`DEPARTUREPLACE`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vista_logbook_instructor_completo`.`DEPARTURETIME`))),'%H:%i') AS<{{{><}}}>`DEPARTURETIME`,<{{{><}}}>`vista_logbook_instructor_completo`.`ARRIVALPLACE` AS<{{{><}}}>`ARRIVALPLACE`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vista_logbook_instructor_completo`.`ARRIVALTIME`))),'%H:%i') AS<{{{><}}}>`ARRIVALTIME`,<{{{><}}}>`vista_logbook_instructor_completo`.`AIRCRAFTMODEL` AS<{{{><}}}>`AIRCRAFTMODEL`,<{{{><}}}>`vista_logbook_instructor_completo`.`AIRCRAFTREGISTRATION` AS<{{{><}}}>`AIRCRAFTREGISTRATION`,<{{{><}}}>`vista_logbook_instructor_completo`.`PICNAME` AS<{{{><}}}>`PICNAME`,<{{{><}}}>`vista_logbook_instructor_completo`.`REMARKS` AS `REMARKS`,<{{{><}}}>`vista_logbook_instructor_completo`.`PILOTO` AS<{{{><}}}>`PILOTO`,<{{{><}}}>`vista_logbook_instructor_completo`.`CURSO` AS `CURSO`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vista_logbook_instructor_completo`.`TOTALVUELO`))),'%H:%i') AS<{{{><}}}>`TOTALVUELO`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vista_logbook_instructor_completo`.`TOTALVUELODAY`))),'%H:%i') AS<{{{><}}}>`TOTALVUELODAY`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vista_logbook_instructor_completo`.`TOTALVUELONIGHT`))),'%H:%i') AS<{{{><}}}>`TOTALVUELONIGHT`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vista_logbook_instructor_completo`.`SE`))),'%H:%i') AS `SE`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vista_logbook_instructor_completo`.`ME`))),'%H:%i') AS<{{{><}}}>`ME`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vista_logbook_instructor_completo`.`XCSOLO`))),'%H:%i') AS `XCSOLO`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vista_logbook_instructor_completo`.`XCDUAL`))),'%H:%i') AS<{{{><}}}>`XCDUAL`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vista_logbook_instructor_completo`.`VFR`))),'%H:%i') AS `VFR`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vista_logbook_instructor_completo`.`IFR`))),'%H:%i') AS<{{{><}}}>`IFR`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vista_logbook_instructor_completo`.`IFRSIM`))),'%H:%i') AS `IFRSIM`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vista_logbook_instructor_completo`.`PIC`))),'%H:%i') AS<{{{><}}}>`PIC`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vista_logbook_instructor_completo`.`COPILOT`))),'%H:%i') AS `COPILOT`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vista_logbook_instructor_completo`.`DUAL`))),'%H:%i') AS<{{{><}}}>`DUAL`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vista_logbook_instructor_completo`.`INSTRUCTOR`))),'%H:%i') AS `INSTRUCTOR`,<{{{><}}}>date_format(sec_to_time((time_to_sec(`vista_logbook_instructor_completo`.`FSTD`))),'%H:%i') AS<{{{><}}}>`FSTD`,<{{{><}}}>`vista_logbook_instructor_completo`.`LANDINGSDAY` AS<{{{><}}}>`LANDINGSDAY`,<{{{><}}}>`vista_logbook_instructor_completo`.`LANDINGSNIGHT` AS `LANDINGSNIGHT` from<{{{><}}}>`admin_aerodynamics`.`vista_logbook_instructor_completo`)) `vuelos` order by str_to_date(`vuelos`.`DATE`,'%d-%m-%Y')<{{{><}}}>desc,`vuelos`.`ARRIVALTIME` desc
Servers\aerodynamics.com.es\QueryHistory\340<|||>1<|||>2021-03-02 15:53:52|admin_aerodynamics|125|select `vuelos`.`idReserva` AS `idReserva`,`vuelos`.`idVuelo` AS `idVuelo`,`vuelos`.`idCurso` AS<{{{><}}}>`idCurso`,`vuelos`.`DATE` AS `DATE`,`vuelos`.`DEPARTUREPLACE` AS `DEPARTUREPLACE`,`vuelos`.`DEPARTURETIME` AS<{{{><}}}>`DEPARTURETIME`,`vuelos`.`ARRIVALPLACE` AS `ARRIVALPLACE`,`vuelos`.`ARRIVALTIME` AS<{{{><}}}>`ARRIVALTIME`,`vuelos`.`AIRCRAFTMODEL` AS `AIRCRAFTMODEL`,`vuelos`.`AIRCRAFTREGISTRATION` AS<{{{><}}}>`AIRCRAFTREGISTRATION`,`vuelos`.`PICNAME` AS `PICNAME`,`vuelos`.`REMARKS` AS `REMARKS`,`vuelos`.`PILOTO` AS<{{{><}}}>`PILOTO`,`vuelos`.`CURSO` AS `CURSO`,date_format(sec_to_time((time_to_sec(`vuelos`.`TOTALVUELO`))),'%H:%i') AS<{{{><}}}>`TOTALVUELO`,date_format(sec_to_time((time_to_sec(`vuelos`.`TOTALVUELODAY`))),'%H:%i') AS<{{{><}}}>`TOTALVUELODAY`,date_format(sec_to_time((time_to_sec(`vuelos`.`TOTALVUELONIGHT`))),'%H:%i') AS<{{{><}}}>`TOTALVUELONIGHT`,date_format(sec_to_time((time_to_sec(`vuelos`.`SE`))),'%H:%i') AS<{{{><}}}>`SE`,date_format(sec_to_time((time_to_sec(`vuelos`.`ME`))),'%H:%i') AS<{{{><}}}>`ME`,date_format(sec_to_time((time_to_sec(`vuelos`.`XCSOLO`))),'%H:%i') AS<{{{><}}}>`XCSOLO`,date_format(sec_to_time((time_to_sec(`vuelos`.`XCDUAL`))),'%H:%i') AS<{{{><}}}>`XCDUAL`,date_format(sec_to_time((time_to_sec(`vuelos`.`VFR`))),'%H:%i') AS<{{{><}}}>`VFR`,date_format(sec_to_time((time_to_sec(`vuelos`.`IFR`))),'%H:%i') AS<{{{><}}}>`IFR`,date_format(sec_to_time((time_to_sec(`vuelos`.`IFRSIM`))),'%H:%i') AS<{{{><}}}>`IFRSIM`,date_format(sec_to_time((time_to_sec(`vuelos`.`PIC`))),'%H:%i') AS<{{{><}}}>`PIC`,date_format(sec_to_time((time_to_sec(`vuelos`.`COPILOT`))),'%H:%i') AS<{{{><}}}>`COPILOT`,date_format(sec_to_time((time_to_sec(`vuelos`.`DUAL`))),'%H:%i') AS<{{{><}}}>`DUAL`,date_format(sec_to_time((time_to_sec(`vuelos`.`INSTRUCTOR`))),'%H:%i') AS<{{{><}}}>`INSTRUCTOR`,date_format(sec_to_time((time_to_sec(`vuelos`.`FSTD`))),'%H:%i') AS `FSTD`,(`vuelos`.`LANDINGSDAY`)<{{{><}}}>AS `LANDINGSDAY`,(`vuelos`.`LANDINGSNIGHT`) AS `LANDINGSNIGHT` from ((select<{{{><}}}>`vista_logbook_piloto_completo_total`.`idReserva` AS `idReserva`,`vista_logbook_piloto_completo_total`.`idVuelo` AS<{{{><}}}>`idVuelo`,`vista_logbook_piloto_completo_total`.`idCurso` AS `idCurso`,`vista_logbook_piloto_completo_total`.`DATE` AS<{{{><}}}>`DATE`,`vista_logbook_piloto_completo_total`.`DEPARTUREPLACE` AS<{{{><}}}>`DEPARTUREPLACE`,`vista_logbook_piloto_completo_total`.`DEPARTURETIME` AS<{{{><}}}>`DEPARTURETIME`,`vista_logbook_piloto_completo_total`.`ARRIVALPLACE` AS<{{{><}}}>`ARRIVALPLACE`,`vista_logbook_piloto_completo_total`.`ARRIVALTIME` AS<{{{><}}}>`ARRIVALTIME`,`vista_logbook_piloto_completo_total`.`AIRCRAFTMODEL` AS<{{{><}}}>`AIRCRAFTMODEL`,`vista_logbook_piloto_completo_total`.`AIRCRAFTREGISTRATION` AS<{{{><}}}>`AIRCRAFTREGISTRATION`,`vista_logbook_piloto_completo_total`.`PICNAME` AS<{{{><}}}>`PICNAME`,`vista_logbook_piloto_completo_total`.`REMARKS` AS `REMARKS`,`vista_logbook_piloto_completo_total`.`PILOTO` AS<{{{><}}}>`PILOTO`,`vista_logbook_piloto_completo_total`.`CURSO` AS `CURSO`,`vista_logbook_piloto_completo_total`.`TOTALVUELO` AS<{{{><}}}>`TOTALVUELO`,`vista_logbook_piloto_completo_total`.`TOTALVUELODAY` AS<{{{><}}}>`TOTALVUELODAY`,`vista_logbook_piloto_completo_total`.`TOTALVUELONIGHT` AS<{{{><}}}>`TOTALVUELONIGHT`,`vista_logbook_piloto_completo_total`.`SE` AS `SE`,`vista_logbook_piloto_completo_total`.`ME` AS<{{{><}}}>`ME`,`vista_logbook_piloto_completo_total`.`XCSOLO` AS `XCSOLO`,`vista_logbook_piloto_completo_total`.`XCDUAL` AS<{{{><}}}>`XCDUAL`,`vista_logbook_piloto_completo_total`.`VFR` AS `VFR`,`vista_logbook_piloto_completo_total`.`IFR` AS<{{{><}}}>`IFR`,`vista_logbook_piloto_completo_total`.`IFRSIM` AS `IFRSIM`,`vista_logbook_piloto_completo_total`.`PIC` AS<{{{><}}}>`PIC`,`vista_logbook_piloto_completo_total`.`COPILOT` AS `COPILOT`,`vista_logbook_piloto_completo_total`.`DUAL` AS<{{{><}}}>`DUAL`,`vista_logbook_piloto_completo_total`.`INSTRUCTOR` AS `INSTRUCTOR`,`vista_logbook_piloto_completo_total`.`FSTD`<{{{><}}}>AS `FSTD`,`vista_logbook_piloto_completo_total`.`LANDINGSDAY` AS<{{{><}}}>`LANDINGSDAY`,`vista_logbook_piloto_completo_total`.`LANDINGSNIGHT` AS `LANDINGSNIGHT` from<{{{><}}}>`admin_aerodynamics`.`vista_logbook_piloto_completo_total`) union (select<{{{><}}}>`vista_logbook_instructor_completo_total`.`idReserva` AS `idReserva`,`vista_logbook_instructor_completo_total`.`idVuelo`<{{{><}}}>AS `idVuelo`,`vista_logbook_instructor_completo_total`.`idCurso` AS<{{{><}}}>`idCurso`,`vista_logbook_instructor_completo_total`.`DATE` AS<{{{><}}}>`DATE`,`vista_logbook_instructor_completo_total`.`DEPARTUREPLACE` AS<{{{><}}}>`DEPARTUREPLACE`,`vista_logbook_instructor_completo_total`.`DEPARTURETIME` AS<{{{><}}}>`DEPARTURETIME`,`vista_logbook_instructor_completo_total`.`ARRIVALPLACE` AS<{{{><}}}>`ARRIVALPLACE`,`vista_logbook_instructor_completo_total`.`ARRIVALTIME` AS<{{{><}}}>`ARRIVALTIME`,`vista_logbook_instructor_completo_total`.`AIRCRAFTMODEL` AS<{{{><}}}>`AIRCRAFTMODEL`,`vista_logbook_instructor_completo_total`.`AIRCRAFTREGISTRATION` AS<{{{><}}}>`AIRCRAFTREGISTRATION`,`vista_logbook_instructor_completo_total`.`PICNAME` AS<{{{><}}}>`PICNAME`,`vista_logbook_instructor_completo_total`.`REMARKS` AS<{{{><}}}>`REMARKS`,`vista_logbook_instructor_completo_total`.`PILOTO` AS<{{{><}}}>`PILOTO`,`vista_logbook_instructor_completo_total`.`CURSO` AS<{{{><}}}>`CURSO`,`vista_logbook_instructor_completo_total`.`TOTALVUELO` AS<{{{><}}}>`TOTALVUELO`,`vista_logbook_instructor_completo_total`.`TOTALVUELODAY` AS<{{{><}}}>`TOTALVUELODAY`,`vista_logbook_instructor_completo_total`.`TOTALVUELONIGHT` AS<{{{><}}}>`TOTALVUELONIGHT`,`vista_logbook_instructor_completo_total`.`SE` AS `SE`,`vista_logbook_instructor_completo_total`.`ME`<{{{><}}}>AS `ME`,`vista_logbook_instructor_completo_total`.`XCSOLO` AS<{{{><}}}>`XCSOLO`,`vista_logbook_instructor_completo_total`.`XCDUAL` AS `XCDUAL`,`vista_logbook_instructor_completo_total`.`VFR`<{{{><}}}>AS `VFR`,`vista_logbook_instructor_completo_total`.`IFR` AS `IFR`,`vista_logbook_instructor_completo_total`.`IFRSIM` AS<{{{><}}}>`IFRSIM`,`vista_logbook_instructor_completo_total`.`PIC` AS `PIC`,`vista_logbook_instructor_completo_total`.`COPILOT` AS<{{{><}}}>`COPILOT`,`vista_logbook_instructor_completo_total`.`DUAL` AS<{{{><}}}>`DUAL`,`vista_logbook_instructor_completo_total`.`INSTRUCTOR` AS<{{{><}}}>`INSTRUCTOR`,`vista_logbook_instructor_completo_total`.`FSTD` AS<{{{><}}}>`FSTD`,`vista_logbook_instructor_completo_total`.`LANDINGSDAY` AS<{{{><}}}>`LANDINGSDAY`,`vista_logbook_instructor_completo_total`.`LANDINGSNIGHT` AS `LANDINGSNIGHT` from<{{{><}}}>`admin_aerodynamics`.`vista_logbook_instructor_completo_total`) union (select '0' AS `idReserva`,'0' AS `idVuelo`,'0' AS<{{{><}}}>`idCurso`,'0000-00-00' AS `DATE`,'EXPPREVIA' AS `DEPARTUREPLACE`,'00:00:00' AS `DEPARTURETIME`,'EXPPREVIA' AS<{{{><}}}>`ARRIVALPLACE`,'00:00:00' AS `ARRIVALTIME`,'EXPPREVIA' AS `AIRCRAFTMODEL`,'EXPPREVIA' AS<{{{><}}}>`AIRCRAFTREGISTRATION`,'EXPPREVIA' AS `PICNAME`,`admin_aerodynamics`.`personas_experiencia_previa`.`CURSO` AS<{{{><}}}>`REMARKS`,`admin_aerodynamics`.`personas_experiencia_previa`.`idPiloto` AS<{{{><}}}>`PILOTO`,`admin_aerodynamics`.`personas_experiencia_previa`.`CURSO` AS<{{{><}}}>`CURSO`,sec_to_time((time_to_sec(`admin_aerodynamics`.`personas_experiencia_previa`.`TOTALVUELO`))) AS<{{{><}}}>`TOTALVUELO`,sec_to_time((time_to_sec(`admin_aerodynamics`.`personas_experiencia_previa`.`TOTALVUELODAY`))) AS<{{{><}}}>`TOTALVUELODAY`,sec_to_time((time_to_sec(`admin_aerodynamics`.`personas_experiencia_previa`.`TOTALVUELONIGHT`))) AS<{{{><}}}>`TOTALVUELONIGHT`,sec_to_time((time_to_sec(`admin_aerodynamics`.`personas_experiencia_previa`.`SE`))) AS<{{{><}}}>`SE`,sec_to_time((time_to_sec(`admin_aerodynamics`.`personas_experiencia_previa`.`ME`))) AS<{{{><}}}>`ME`,sec_to_time((time_to_sec(`admin_aerodynamics`.`personas_experiencia_previa`.`XCSOLO`))) AS<{{{><}}}>`XCSOLO`,sec_to_time((time_to_sec(`admin_aerodynamics`.`personas_experiencia_previa`.`XCDUAL`))) AS<{{{><}}}>`XCDUAL`,sec_to_time((time_to_sec(`admin_aerodynamics`.`personas_experiencia_previa`.`VFR`))) AS<{{{><}}}>`VFR`,sec_to_time((time_to_sec(`admin_aerodynamics`.`personas_experiencia_previa`.`IFR`))) AS<{{{><}}}>`IFR`,sec_to_time((time_to_sec(`admin_aerodynamics`.`personas_experiencia_previa`.`IFRSIM`))) AS<{{{><}}}>`IFRSIM`,sec_to_time((time_to_sec(`admin_aerodynamics`.`personas_experiencia_previa`.`PIC`))) AS<{{{><}}}>`PIC`,sec_to_time((time_to_sec(`admin_aerodynamics`.`personas_experiencia_previa`.`COPILOT`))) AS<{{{><}}}>`COPILOT`,sec_to_time((time_to_sec(`admin_aerodynamics`.`personas_experiencia_previa`.`DUAL`))) AS<{{{><}}}>`DUAL`,sec_to_time((time_to_sec(`admin_aerodynamics`.`personas_experiencia_previa`.`INSTRUCTOR`))) AS<{{{><}}}>`INSTRUCTOR`,sec_to_time((time_to_sec(`admin_aerodynamics`.`personas_experiencia_previa`.`FSTD`))) AS<{{{><}}}>`FSTD`,(`admin_aerodynamics`.`personas_experiencia_previa`.`LANDINGSDAY`) AS<{{{><}}}>`LANDINGSDAY`,(`admin_aerodynamics`.`personas_experiencia_previa`.`LANDINGSNIGHT`) AS `LANDINGSNIGHT` from<{{{><}}}>`admin_aerodynamics`.`personas_experiencia_previa` group by<{{{><}}}>`admin_aerodynamics`.`personas_experiencia_previa`.`idPiloto`)) `vuelos` group by `vuelos`.`PILOTO`
Servers\aerodynamics.com.es\QueryHistory\341<|||>1<|||>2021-03-02 15:54:20|admin_aerodynamics|204|select `vuelos`.`idReserva` AS `idReserva`,`vuelos`.`idVuelo` AS `idVuelo`,`vuelos`.`idCurso` AS `idCurso`,`vuelos`.`DATE` AS `DATE`,`vuelos`.`DEPARTUREPLACE` AS `DEPARTUREPLACE`,`vuelos`.`DEPARTURETIME` AS `DEPARTURETIME`,`vuelos`.`ARRIVALPLACE` AS `ARRIVALPLACE`,`vuelos`.`ARRIVALTIME` AS `ARRIVALTIME`,`vuelos`.`AIRCRAFTMODEL` AS `AIRCRAFTMODEL`,`vuelos`.`AIRCRAFTREGISTRATION` AS `AIRCRAFTREGISTRATION`,`vuelos`.`PICNAME` AS `PICNAME`,`vuelos`.`REMARKS` AS `REMARKS`,`vuelos`.`PILOTO` AS `PILOTO`,`vuelos`.`CURSO` AS `CURSO`,date_format(sec_to_time(sum(time_to_sec(`vuelos`.`TOTALVUELO`))),'%H:%i') AS `TOTALVUELO`,date_format(sec_to_time(sum(time_to_sec(`vuelos`.`TOTALVUELODAY`))),'%H:%i') AS `TOTALVUELODAY`,date_format(sec_to_time(sum(time_to_sec(`vuelos`.`TOTALVUELONIGHT`))),'%H:%i') AS `TOTALVUELONIGHT`,date_format(sec_to_time(sum(time_to_sec(`vuelos`.`SE`))),'%H:%i') AS `SE`,date_format(sec_to_time(sum(time_to_sec(`vuelos`.`ME`))),'%H:%i') AS `ME`,date_format(sec_to_time(sum(time_to_sec(`vuelos`.`XCSOLO`))),'%H:%i') AS `XCSOLO`,date_format(sec_to_time(sum(time_to_sec(`vuelos`.`XCDUAL`))),'%H:%i') AS `XCDUAL`,date_format(sec_to_time(sum(time_to_sec(`vuelos`.`VFR`))),'%H:%i') AS `VFR`,date_format(sec_to_time(sum(time_to_sec(`vuelos`.`IFR`))),'%H:%i') AS `IFR`,date_format(sec_to_time(sum(time_to_sec(`vuelos`.`IFRSIM`))),'%H:%i') AS `IFRSIM`,date_format(sec_to_time(sum(time_to_sec(`vuelos`.`PIC`))),'%H:%i') AS `PIC`,date_format(sec_to_time(sum(time_to_sec(`vuelos`.`COPILOT`))),'%H:%i') AS `COPILOT`,date_format(sec_to_time(sum(time_to_sec(`vuelos`.`DUAL`))),'%H:%i') AS `DUAL`,date_format(sec_to_time(sum(time_to_sec(`vuelos`.`INSTRUCTOR`))),'%H:%i') AS `INSTRUCTOR`,date_format(sec_to_time(sum(time_to_sec(`vuelos`.`FSTD`))),'%H:%i') AS `FSTD`,`vuelos`.`LANDINGSDAY` AS `LANDINGSDAY`,`vuelos`.`LANDINGSNIGHT` AS `LANDINGSNIGHT` from ((select `vista_logbook_piloto_completo_resumen`.`idReserva` AS `idReserva`,`vista_logbook_piloto_completo_resumen`.`idVuelo` AS `idVuelo`,`vista_logbook_piloto_completo_resumen`.`idCurso` AS `idCurso`,`vista_logbook_piloto_completo_resumen`.`DATE` AS `DATE`,`vista_logbook_piloto_completo_resumen`.`DEPARTUREPLACE` AS `DEPARTUREPLACE`,`vista_logbook_piloto_completo_resumen`.`DEPARTURETIME` AS `DEPARTURETIME`,`vista_logbook_piloto_completo_resumen`.`ARRIVALPLACE` AS `ARRIVALPLACE`,`vista_logbook_piloto_completo_resumen`.`ARRIVALTIME` AS `ARRIVALTIME`,`vista_logbook_piloto_completo_resumen`.`AIRCRAFTMODEL` AS `AIRCRAFTMODEL`,`vista_logbook_piloto_completo_resumen`.`AIRCRAFTREGISTRATION` AS `AIRCRAFTREGISTRATION`,`vista_logbook_piloto_completo_resumen`.`PICNAME` AS `PICNAME`,`vista_logbook_piloto_completo_resumen`.`REMARKS` AS `REMARKS`,`vista_logbook_piloto_completo_resumen`.`PILOTO` AS `PILOTO`,`vista_logbook_piloto_completo_resumen`.`CURSO` AS `CURSO`,`vista_logbook_piloto_completo_resumen`.`TOTALVUELO` AS `TOTALVUELO`,`vista_logbook_piloto_completo_resumen`.`TOTALVUELODAY` AS `TOTALVUELODAY`,`vista_logbook_piloto_completo_resumen`.`TOTALVUELONIGHT` AS `TOTALVUELONIGHT`,`vista_logbook_piloto_completo_resumen`.`SE` AS `SE`,`vista_logbook_piloto_completo_resumen`.`ME` AS `ME`,`vista_logbook_piloto_completo_resumen`.`XCSOLO` AS `XCSOLO`,`vista_logbook_piloto_completo_resumen`.`XCDUAL` AS `XCDUAL`,`vista_logbook_piloto_completo_resumen`.`VFR` AS `VFR`,`vista_logbook_piloto_completo_resumen`.`IFR` AS `IFR`,`vista_logbook_piloto_completo_resumen`.`IFRSIM` AS `IFRSIM`,`vista_logbook_piloto_completo_resumen`.`PIC` AS `PIC`,`vista_logbook_piloto_completo_resumen`.`COPILOT` AS `COPILOT`,`vista_logbook_piloto_completo_resumen`.`DUAL` AS `DUAL`,`vista_logbook_piloto_completo_resumen`.`INSTRUCTOR` AS `INSTRUCTOR`,`vista_logbook_piloto_completo_resumen`.`FSTD` AS `FSTD`,`vista_logbook_piloto_completo_resumen`.`LANDINGSDAY` AS `LANDINGSDAY`,`vista_logbook_piloto_completo_resumen`.`LANDINGSNIGHT` AS `LANDINGSNIGHT` from `admin_aerodynamics`.`vista_logbook_piloto_completo_resumen`) union (select `vista_logbook_instructor_completo_resumen`.`idReserva` AS `idReserva`,`vista_logbook_instructor_completo_resumen`.`idVuelo` AS `idVuelo`,`vista_logbook_instructor_completo_resumen`.`idCurso` AS `idCurso`,`vista_logbook_instructor_completo_resumen`.`DATE` AS `DATE`,`vista_logbook_instructor_completo_resumen`.`DEPARTUREPLACE` AS `DEPARTUREPLACE`,`vista_logbook_instructor_completo_resumen`.`DEPARTURETIME` AS `DEPARTURETIME`,`vista_logbook_instructor_completo_resumen`.`ARRIVALPLACE` AS `ARRIVALPLACE`,`vista_logbook_instructor_completo_resumen`.`ARRIVALTIME` AS `ARRIVALTIME`,`vista_logbook_instructor_completo_resumen`.`AIRCRAFTMODEL` AS `AIRCRAFTMODEL`,`vista_logbook_instructor_completo_resumen`.`AIRCRAFTREGISTRATION` AS `AIRCRAFTREGISTRATION`,`vista_logbook_instructor_completo_resumen`.`PICNAME` AS `PICNAME`,`vista_logbook_instructor_completo_resumen`.`REMARKS` AS `REMARKS`,`vista_logbook_instructor_completo_resumen`.`PILOTO` AS `PILOTO`,`vista_logbook_instructor_completo_resumen`.`CURSO` AS `CURSO`,`vista_logbook_instructor_completo_resumen`.`TOTALVUELO` AS `TOTALVUELO`,`vista_logbook_instructor_completo_resumen`.`TOTALVUELODAY` AS `TOTALVUELODAY`,`vista_logbook_instructor_completo_resumen`.`TOTALVUELONIGHT` AS `TOTALVUELONIGHT`,`vista_logbook_instructor_completo_resumen`.`SE` AS `SE`,`vista_logbook_instructor_completo_resumen`.`ME` AS `ME`,`vista_logbook_instructor_completo_resumen`.`XCSOLO` AS `XCSOLO`,`vista_logbook_instructor_completo_resumen`.`XCDUAL` AS `XCDUAL`,`vista_logbook_instructor_completo_resumen`.`VFR` AS `VFR`,`vista_logbook_instructor_completo_resumen`.`IFR` AS `IFR`,`vista_logbook_instructor_completo_resumen`.`IFRSIM` AS `IFRSIM`,`vista_logbook_instructor_completo_resumen`.`PIC` AS `PIC`,`vista_logbook_instructor_completo_resumen`.`COPILOT` AS `COPILOT`,`vista_logbook_instructor_completo_resumen`.`DUAL` AS `DUAL`,`vista_logbook_instructor_completo_resumen`.`INSTRUCTOR` AS `INSTRUCTOR`,`vista_logbook_instructor_completo_resumen`.`FSTD` AS `FSTD`,`vista_logbook_instructor_completo_resumen`.`LANDINGSDAY` AS `LANDINGSDAY`,`vista_logbook_instructor_completo_resumen`.`LANDINGSNIGHT` AS `LANDINGSNIGHT` from `admin_aerodynamics`.`vista_logbook_instructor_completo_resumen`)) `vuelos` group by `vuelos`.`PILOTO`,`vuelos`.`idCurso`
Servers\aerodynamics.com.es\QueryHistory\342<|||>1<|||>2021-03-04 10:20:39|admin_aerodynamics|78|DELETE FROM reserva_vuelos WHERE diaReserva<STR_TO_DATE('2021-03-01','%Y-%m-%d')
Servers\aerodynamics.com.es\QueryHistory\343<|||>1<|||>2021-03-04 10:22:20|admin_aerodynamics|62|DELETE FROM personas_vuelos_automatizacion WHERE fecha<STR_TO_DATE('2021-03-01','%Y-%m-%d')
Servers\aerodynamics.com.es\QueryHistory\344<|||>1<|||>2021-03-04 11:01:37|admin_aerodynamics|110|select `vuelos`.`idReserva` AS `idReserva`,`vuelos`.`idVuelo` AS `idVuelo`,`vuelos`.`idCurso` AS<{{{><}}}>`idCurso`,`vuelos`.`DATE` AS `DATE`,`vuelos`.`DEPARTUREPLACE` AS `DEPARTUREPLACE`,`vuelos`.`DEPARTURETIME` AS<{{{><}}}>`DEPARTURETIME`,`vuelos`.`ARRIVALPLACE` AS `ARRIVALPLACE`,`vuelos`.`ARRIVALTIME` AS<{{{><}}}>`ARRIVALTIME`,`vuelos`.`AIRCRAFTMODEL` AS `AIRCRAFTMODEL`,`vuelos`.`AIRCRAFTREGISTRATION` AS<{{{><}}}>`AIRCRAFTREGISTRATION`,`vuelos`.`PICNAME` AS `PICNAME`,`vuelos`.`REMARKS` AS `REMARKS`,`vuelos`.`PILOTO` AS<{{{><}}}>`PILOTO`,`vuelos`.`CURSO` AS `CURSO`,date_format(sec_to_time(sum(time_to_sec(`vuelos`.`TOTALVUELO`))),'%H:%i') AS<{{{><}}}>`TOTALVUELO`,date_format(sec_to_time(sum(time_to_sec(`vuelos`.`TOTALVUELODAY`))),'%H:%i') AS<{{{><}}}>`TOTALVUELODAY`,date_format(sec_to_time(sum(time_to_sec(`vuelos`.`TOTALVUELONIGHT`))),'%H:%i') AS<{{{><}}}>`TOTALVUELONIGHT`,date_format(sec_to_time(sum(time_to_sec(`vuelos`.`SE`))),'%H:%i') AS<{{{><}}}>`SE`,date_format(sec_to_time(sum(time_to_sec(`vuelos`.`ME`))),'%H:%i') AS<{{{><}}}>`ME`,date_format(sec_to_time(sum(time_to_sec(`vuelos`.`XCSOLO`))),'%H:%i') AS<{{{><}}}>`XCSOLO`,date_format(sec_to_time(sum(time_to_sec(`vuelos`.`XCDUAL`))),'%H:%i') AS<{{{><}}}>`XCDUAL`,date_format(sec_to_time(sum(time_to_sec(`vuelos`.`VFR`))),'%H:%i') AS<{{{><}}}>`VFR`,date_format(sec_to_time(sum(time_to_sec(`vuelos`.`IFR`))),'%H:%i') AS<{{{><}}}>`IFR`,date_format(sec_to_time(sum(time_to_sec(`vuelos`.`IFRSIM`))),'%H:%i') AS<{{{><}}}>`IFRSIM`,date_format(sec_to_time(sum(time_to_sec(`vuelos`.`PIC`))),'%H:%i') AS<{{{><}}}>`PIC`,date_format(sec_to_time(sum(time_to_sec(`vuelos`.`COPILOT`))),'%H:%i') AS<{{{><}}}>`COPILOT`,date_format(sec_to_time(sum(time_to_sec(`vuelos`.`DUAL`))),'%H:%i') AS<{{{><}}}>`DUAL`,date_format(sec_to_time(sum(time_to_sec(`vuelos`.`INSTRUCTOR`))),'%H:%i') AS<{{{><}}}>`INSTRUCTOR`,date_format(sec_to_time(sum(time_to_sec(`vuelos`.`FSTD`))),'%H:%i') AS `FSTD`,sum(`vuelos`.`LANDINGSDAY`) AS<{{{><}}}>`LANDINGSDAY`,sum(`vuelos`.`LANDINGSNIGHT`) AS `LANDINGSNIGHT` from <{{{><}}}><{{{><}}}><{{{><}}}>((select<{{{><}}}>`vista_logbook_piloto_completo_total`.`idReserva` AS `idReserva`,`vista_logbook_piloto_completo_total`.`idVuelo` AS<{{{><}}}>`idVuelo`,`vista_logbook_piloto_completo_total`.`idCurso` AS `idCurso`,`vista_logbook_piloto_completo_total`.`DATE` AS<{{{><}}}>`DATE`,`vista_logbook_piloto_completo_total`.`DEPARTUREPLACE` AS<{{{><}}}>`DEPARTUREPLACE`,`vista_logbook_piloto_completo_total`.`DEPARTURETIME` AS<{{{><}}}>`DEPARTURETIME`,`vista_logbook_piloto_completo_total`.`ARRIVALPLACE` AS<{{{><}}}>`ARRIVALPLACE`,`vista_logbook_piloto_completo_total`.`ARRIVALTIME` AS<{{{><}}}>`ARRIVALTIME`,`vista_logbook_piloto_completo_total`.`AIRCRAFTMODEL` AS<{{{><}}}>`AIRCRAFTMODEL`,`vista_logbook_piloto_completo_total`.`AIRCRAFTREGISTRATION` AS<{{{><}}}>`AIRCRAFTREGISTRATION`,`vista_logbook_piloto_completo_total`.`PICNAME` AS<{{{><}}}>`PICNAME`,`vista_logbook_piloto_completo_total`.`REMARKS` AS `REMARKS`,`vista_logbook_piloto_completo_total`.`PILOTO` AS<{{{><}}}>`PILOTO`,`vista_logbook_piloto_completo_total`.`CURSO` AS `CURSO`,`vista_logbook_piloto_completo_total`.`TOTALVUELO` AS<{{{><}}}>`TOTALVUELO`,`vista_logbook_piloto_completo_total`.`TOTALVUELODAY` AS<{{{><}}}>`TOTALVUELODAY`,`vista_logbook_piloto_completo_total`.`TOTALVUELONIGHT` AS<{{{><}}}>`TOTALVUELONIGHT`,`vista_logbook_piloto_completo_total`.`SE` AS `SE`,`vista_logbook_piloto_completo_total`.`ME` AS<{{{><}}}>`ME`,`vista_logbook_piloto_completo_total`.`XCSOLO` AS `XCSOLO`,`vista_logbook_piloto_completo_total`.`XCDUAL` AS<{{{><}}}>`XCDUAL`,`vista_logbook_piloto_completo_total`.`VFR` AS `VFR`,`vista_logbook_piloto_completo_total`.`IFR` AS<{{{><}}}>`IFR`,`vista_logbook_piloto_completo_total`.`IFRSIM` AS `IFRSIM`,`vista_logbook_piloto_completo_total`.`PIC` AS<{{{><}}}>`PIC`,`vista_logbook_piloto_completo_total`.`COPILOT` AS `COPILOT`,`vista_logbook_piloto_completo_total`.`DUAL` AS<{{{><}}}>`DUAL`,`vista_logbook_piloto_completo_total`.`INSTRUCTOR` AS `INSTRUCTOR`,`vista_logbook_piloto_completo_total`.`FSTD`<{{{><}}}>AS `FSTD`,`vista_logbook_piloto_completo_total`.`LANDINGSDAY` AS<{{{><}}}>`LANDINGSDAY`,`vista_logbook_piloto_completo_total`.`LANDINGSNIGHT` AS `LANDINGSNIGHT` from<{{{><}}}>`admin_aerodynamics`.`vista_logbook_piloto_completo_total`) union <{{{><}}}><{{{><}}}><{{{><}}}>(select<{{{><}}}>`vista_logbook_instructor_completo_total`.`idReserva` AS `idReserva`,`vista_logbook_instructor_completo_total`.`idVuelo`<{{{><}}}>AS `idVuelo`,`vista_logbook_instructor_completo_total`.`idCurso` AS<{{{><}}}>`idCurso`,`vista_logbook_instructor_completo_total`.`DATE` AS<{{{><}}}>`DATE`,`vista_logbook_instructor_completo_total`.`DEPARTUREPLACE` AS<{{{><}}}>`DEPARTUREPLACE`,`vista_logbook_instructor_completo_total`.`DEPARTURETIME` AS<{{{><}}}>`DEPARTURETIME`,`vista_logbook_instructor_completo_total`.`ARRIVALPLACE` AS<{{{><}}}>`ARRIVALPLACE`,`vista_logbook_instructor_completo_total`.`ARRIVALTIME` AS<{{{><}}}>`ARRIVALTIME`,`vista_logbook_instructor_completo_total`.`AIRCRAFTMODEL` AS<{{{><}}}>`AIRCRAFTMODEL`,`vista_logbook_instructor_completo_total`.`AIRCRAFTREGISTRATION` AS<{{{><}}}>`AIRCRAFTREGISTRATION`,`vista_logbook_instructor_completo_total`.`PICNAME` AS<{{{><}}}>`PICNAME`,`vista_logbook_instructor_completo_total`.`REMARKS` AS<{{{><}}}>`REMARKS`,`vista_logbook_instructor_completo_total`.`PILOTO` AS<{{{><}}}>`PILOTO`,`vista_logbook_instructor_completo_total`.`CURSO` AS<{{{><}}}>`CURSO`,`vista_logbook_instructor_completo_total`.`TOTALVUELO` AS<{{{><}}}>`TOTALVUELO`,`vista_logbook_instructor_completo_total`.`TOTALVUELODAY` AS<{{{><}}}>`TOTALVUELODAY`,`vista_logbook_instructor_completo_total`.`TOTALVUELONIGHT` AS<{{{><}}}>`TOTALVUELONIGHT`,`vista_logbook_instructor_completo_total`.`SE` AS `SE`,`vista_logbook_instructor_completo_total`.`ME`<{{{><}}}>AS `ME`,`vista_logbook_instructor_completo_total`.`XCSOLO` AS<{{{><}}}>`XCSOLO`,`vista_logbook_instructor_completo_total`.`XCDUAL` AS `XCDUAL`,`vista_logbook_instructor_completo_total`.`VFR`<{{{><}}}>AS `VFR`,`vista_logbook_instructor_completo_total`.`IFR` AS `IFR`,`vista_logbook_instructor_completo_total`.`IFRSIM` AS<{{{><}}}>`IFRSIM`,`vista_logbook_instructor_completo_total`.`PIC` AS `PIC`,`vista_logbook_instructor_completo_total`.`COPILOT` AS<{{{><}}}>`COPILOT`,`vista_logbook_instructor_completo_total`.`DUAL` AS<{{{><}}}>`DUAL`,`vista_logbook_instructor_completo_total`.`INSTRUCTOR` AS<{{{><}}}>`INSTRUCTOR`,`vista_logbook_instructor_completo_total`.`FSTD` AS<{{{><}}}>`FSTD`,`vista_logbook_instructor_completo_total`.`LANDINGSDAY` AS<{{{><}}}>`LANDINGSDAY`,`vista_logbook_instructor_completo_total`.`LANDINGSNIGHT` AS `LANDINGSNIGHT` from<{{{><}}}>`admin_aerodynamics`.`vista_logbook_instructor_completo_total`) <{{{><}}}><{{{><}}}><{{{><}}}>union (select '0' AS `idReserva`,'0' AS `idVuelo`,'0' AS<{{{><}}}>`idCurso`,'0000-00-00' AS `DATE`,'EXPPREVIA' AS `DEPARTUREPLACE`,'00:00:00' AS `DEPARTURETIME`,'EXPPREVIA' AS<{{{><}}}>`ARRIVALPLACE`,'00:00:00' AS `ARRIVALTIME`,'EXPPREVIA' AS `AIRCRAFTMODEL`,'EXPPREVIA' AS<{{{><}}}>`AIRCRAFTREGISTRATION`,'EXPPREVIA' AS `PICNAME`,`admin_aerodynamics`.`personas_experiencia_previa`.`CURSO` AS<{{{><}}}>`REMARKS`,`admin_aerodynamics`.`personas_experiencia_previa`.`idPiloto` AS<{{{><}}}>`PILOTO`,`admin_aerodynamics`.`personas_experiencia_previa`.`CURSO` AS<{{{><}}}>`CURSO`,sec_to_time(time_to_sec(`admin_aerodynamics`.`personas_experiencia_previa`.`TOTALVUELO`)) AS<{{{><}}}>`TOTALVUELO`,sec_to_time(time_to_sec(`admin_aerodynamics`.`personas_experiencia_previa`.`TOTALVUELODAY`)) AS<{{{><}}}>`TOTALVUELODAY`,sec_to_time(time_to_sec(`admin_aerodynamics`.`personas_experiencia_previa`.`TOTALVUELONIGHT`)) AS<{{{><}}}>`TOTALVUELONIGHT`,sec_to_time(time_to_sec(`admin_aerodynamics`.`personas_experiencia_previa`.`SE`)) AS<{{{><}}}>`SE`,sec_to_time(time_to_sec(`admin_aerodynamics`.`personas_experiencia_previa`.`ME`)) AS<{{{><}}}>`ME`,sec_to_time(time_to_sec(`admin_aerodynamics`.`personas_experiencia_previa`.`XCSOLO`)) AS<{{{><}}}>`XCSOLO`,sec_to_time(time_to_sec(`admin_aerodynamics`.`personas_experiencia_previa`.`XCDUAL`)) AS<{{{><}}}>`XCDUAL`,sec_to_time(time_to_sec(`admin_aerodynamics`.`personas_experiencia_previa`.`VFR`)) AS<{{{><}}}>`VFR`,sec_to_time(time_to_sec(`admin_aerodynamics`.`personas_experiencia_previa`.`IFR`)) AS<{{{><}}}>`IFR`,sec_to_time(time_to_sec(`admin_aerodynamics`.`personas_experiencia_previa`.`IFRSIM`)) AS<{{{><}}}>`IFRSIM`,sec_to_time(time_to_sec(`admin_aerodynamics`.`personas_experiencia_previa`.`PIC`)) AS<{{{><}}}>`PIC`,sec_to_time(time_to_sec(`admin_aerodynamics`.`personas_experiencia_previa`.`COPILOT`)) AS<{{{><}}}>`COPILOT`,sec_to_time(time_to_sec(`admin_aerodynamics`.`personas_experiencia_previa`.`DUAL`)) AS<{{{><}}}>`DUAL`,sec_to_time(time_to_sec(`admin_aerodynamics`.`personas_experiencia_previa`.`INSTRUCTOR`)) AS<{{{><}}}>`INSTRUCTOR`,sec_to_time(time_to_sec(`admin_aerodynamics`.`personas_experiencia_previa`.`FSTD`)) AS<{{{><}}}>`FSTD`,`admin_aerodynamics`.`personas_experiencia_previa`.`LANDINGSDAY` AS<{{{><}}}>`LANDINGSDAY`,`admin_aerodynamics`.`personas_experiencia_previa`.`LANDINGSNIGHT` AS `LANDINGSNIGHT` from<{{{><}}}>`admin_aerodynamics`.`personas_experiencia_previa` group by<{{{><}}}>`admin_aerodynamics`.`personas_experiencia_previa`.`idPiloto`)) `vuelos` group by `vuelos`.`PILOTO`
Servers\aerodynamics.com.es\QueryHistory\345<|||>1<|||>2021-03-04 11:07:46|admin_aerodynamics|47|SELECT if(idInstructor IS NOT NULL,"selected","") FROM aviones_instructor WHERE idInstructor=3564
Servers\aerodynamics.com.es\QueryHistory\346<|||>1<|||>2021-03-04 11:07:55|admin_aerodynamics|31|SELECT *,if(idInstructor IS NOT NULL,"selected","") FROM aviones_instructor WHERE idInstructor=3564
Servers\aerodynamics.com.es\QueryHistory\348<|||>1<|||>2021-03-04 11:57:53|admin_aerodynamics|110|select `reserva_vuelos`.`idReserva` AS `idReserva`,`reserva_vuelos`.`diaReserva` AS<{{{><}}}>`diaReserva`,concat(`reserva_vuelos`.`diaReserva`,' ',`reserva_vuelos`.`horaInicio`) AS<{{{><}}}>`inicioReserva`,concat(`reserva_vuelos`.`diaReserva`,' ',`reserva_vuelos`.`horaFin`) AS<{{{><}}}>`finReserva`,`reserva_vuelos`.`idPiloto` AS `idPiloto`,`reserva_vuelos`.`tipoPiloto` AS<{{{><}}}>`tipoPiloto`,`reserva_vuelos`.`idInstructor` AS `idInstructor`,`reserva_vuelos`.`tipoInstructor` AS<{{{><}}}>`tipoInstructor`,`reserva_vuelos`.`idAvion` AS `idAvion`,`aviones`.`registracion` AS<{{{><}}}>`matricula`,`reserva_vuelos`.`idLeccion` AS `idLeccion`,`reserva_vuelos`.`tipoVuelo` AS<{{{><}}}>`tipoVuelo`,`reserva_vuelos`.`tipoVista` AS `tipoVista`,`reserva_vuelos`.`tipoSalida` AS<{{{><}}}>`tipoSalida`,`reserva_vuelos`.`preBriefing` AS `preBriefing`,`reserva_vuelos`.`postBriefing` AS<{{{><}}}>`postBriefing`,`misiones`.`idMision` AS `idMision`,`misiones`.`idCurso` AS `idCurso`,`misiones`.`fase` AS<{{{><}}}>`fase`,`misiones`.`numMision` AS `numMision`,`misiones`.`refMision` AS `refMision`,`misiones`.`nombreMision` AS<{{{><}}}>`nombreMision`,`misiones`.`vfrMision` AS `vfrMision`,`misiones`.`ifrMision` AS `ifrMision`,`misiones`.`tipoMision` AS<{{{><}}}>`tipoMision`,`misiones`.`descripcion` AS `descripcion`,`misiones`.`marcaAvion` AS `marcaAvion`,`misiones`.`modeloAvion`<{{{><}}}>AS `modeloAvion` from ((`reserva_vuelos` left join `misiones` on(`misiones`.`idMision` = `reserva_vuelos`.`idLeccion`))<{{{><}}}>left join `aviones` on(`aviones`.`idAvion` = `reserva_vuelos`.`idAvion`)) WHERE `reserva_vuelos`.`vueloEliminado`=1  group by<{{{><}}}>`reserva_vuelos`.`diaReserva`,`reserva_vuelos`.`horaInicio`,`reserva_vuelos`.`idPiloto`
Servers\aerodynamics.com.es\QueryHistory\349<|||>1<|||>2021-03-04 11:57:59|admin_aerodynamics|172|select `reserva_vuelos`.`idReserva` AS `idReserva`,`reserva_vuelos`.`diaReserva` AS<{{{><}}}>`diaReserva`,concat(`reserva_vuelos`.`diaReserva`,' ',`reserva_vuelos`.`horaInicio`) AS<{{{><}}}>`inicioReserva`,concat(`reserva_vuelos`.`diaReserva`,' ',`reserva_vuelos`.`horaFin`) AS<{{{><}}}>`finReserva`,`reserva_vuelos`.`idPiloto` AS `idPiloto`,`reserva_vuelos`.`tipoPiloto` AS<{{{><}}}>`tipoPiloto`,`reserva_vuelos`.`idInstructor` AS `idInstructor`,`reserva_vuelos`.`tipoInstructor` AS<{{{><}}}>`tipoInstructor`,`reserva_vuelos`.`idAvion` AS `idAvion`,`aviones`.`registracion` AS<{{{><}}}>`matricula`,`reserva_vuelos`.`idLeccion` AS `idLeccion`,`reserva_vuelos`.`tipoVuelo` AS<{{{><}}}>`tipoVuelo`,`reserva_vuelos`.`tipoVista` AS `tipoVista`,`reserva_vuelos`.`tipoSalida` AS<{{{><}}}>`tipoSalida`,`reserva_vuelos`.`preBriefing` AS `preBriefing`,`reserva_vuelos`.`postBriefing` AS<{{{><}}}>`postBriefing`,`misiones`.`idMision` AS `idMision`,`misiones`.`idCurso` AS `idCurso`,`misiones`.`fase` AS<{{{><}}}>`fase`,`misiones`.`numMision` AS `numMision`,`misiones`.`refMision` AS `refMision`,`misiones`.`nombreMision` AS<{{{><}}}>`nombreMision`,`misiones`.`vfrMision` AS `vfrMision`,`misiones`.`ifrMision` AS `ifrMision`,`misiones`.`tipoMision` AS<{{{><}}}>`tipoMision`,`misiones`.`descripcion` AS `descripcion`,`misiones`.`marcaAvion` AS `marcaAvion`,`misiones`.`modeloAvion`<{{{><}}}>AS `modeloAvion` from ((`reserva_vuelos` left join `misiones` on(`misiones`.`idMision` = `reserva_vuelos`.`idLeccion`))<{{{><}}}>left join `aviones` on(`aviones`.`idAvion` = `reserva_vuelos`.`idAvion`)) WHERE `reserva_vuelos`.`vueloEliminado`=0  group by<{{{><}}}>`reserva_vuelos`.`diaReserva`,`reserva_vuelos`.`horaInicio`,`reserva_vuelos`.`idPiloto`
Servers\aerodynamics.com.es\QueryHistory\347<|||>1<|||>2021-03-04 12:10:53|admin_aerodynamics|47|SELECT * FROM reserva_vuelos where idReserva=(select idreserva from personas_vuelos_automatizacion where id=725) and (select idreserva from personas_vuelos_automatizacion where id=725) is not null
Servers\aerodynamics.com.es\QueryHistory\350<|||>1<|||>2021-03-04 12:11:17|admin_aerodynamics|47|SELECT * FROM reserva_vuelos where idReserva=(select idreserva from personas_vuelos_automatizacion where id=5) and (select idreserva from personas_vuelos_automatizacion where id=725) is not null
Servers\aerodynamics.com.es\QueryHistory\351<|||>1<|||>2021-03-04 12:11:22|admin_aerodynamics|47|SELECT * FROM reserva_vuelos where idReserva=(select idreserva from personas_vuelos_automatizacion where id=5) and (select idreserva from personas_vuelos_automatizacion where id=5) is not null
Servers\aerodynamics.com.es\QueryHistory\352<|||>1<|||>2021-03-04 16:10:04|admin_aerodynamics|109|SELECT idPersona,idPrivateRadar,apellido FROM personas 
Servers\aerodynamics.com.es\QueryHistory\353<|||>1<|||>2021-03-04 16:10:27|admin_aerodynamics|157|SELECT idPersona,idPrivateRadar,nombre,segundoNombre,apellido FROM personas 
Servers\aerodynamics.com.es\QueryHistory\354<|||>1<|||>2021-03-04 16:18:31|admin_aerodynamics|750|SELECT idPersona,concat(nombre,' ',apellido) AS nombre FROM personas 
Servers\aerodynamics.com.es\QueryHistory\355<|||>1<|||>2021-03-04 16:26:50|admin_aerodynamics|140|SELECT apellido,idPersona FROM personas 
Servers\aerodynamics.com.es\QueryHistory\356<|||>1<|||>2021-03-04 16:37:18|admin_aerodynamics|140|SELECT apellido,idPersona FROM personas WHERE idtipo=2
Servers\aerodynamics.com.es\QueryHistory\357<|||>1<|||>2021-03-04 16:46:26|admin_aerodynamics|110|SELECT apellido,idPersona FROM personas WHERE idtipo!=2
Servers\aerodynamics.com.es\QueryHistory\358<|||>1<|||>2021-03-04 16:58:53|admin_aerodynamics|125|SELECT concat(nombre,'',apellido) AS nombre ,idPersona FROM personas WHERE idtipo=2
Servers\aerodynamics.com.es\QueryHistory\359<|||>1<|||>2021-03-04 16:58:58|admin_aerodynamics|172|SELECT concat(nombre,' ',apellido) AS nombre ,idPersona FROM personas WHERE idtipo=2
Servers\aerodynamics.com.es\QueryHistory\360<|||>1<|||>2021-03-04 17:00:21|admin_aerodynamics|93|SELECT concat(nombre,' ',apellido) AS nombre ,idPersona FROM personas WHERE idtipo!=2
Servers\aerodynamics.com.es\QueryHistory\361<|||>1<|||>2021-03-05 15:48:09|admin_aerodynamics|62|SELECT * FROM vista_logbook_personas_completo_resumen where PILOTO =5373 GROUP BY PILOTO,idCurso
Servers\aerodynamics.com.es\QueryHistory\362<|||>1<|||>2021-03-05 15:50:46|admin_aerodynamics|63|SELECT * FROM vista_logbook_personas_completo_resumen where PILOTO =5373 
Servers\aerodynamics.com.es\QueryHistory\363<|||>1<|||>2021-03-05 15:51:41|admin_aerodynamics|124|SELECT * FROM vista_logbook_personas_completo_resumen where PILOTO =5373 GROUP BY PILOTO,idCurso;<{{{><}}}><{{{><}}}>SELECT * FROM vista_logbook_personas_completo_total where PILOTO =5373 GROUP BY PILOTO ORDER BY STR_TO_DATE(DATE, "%d-%m-%Y") ASC;
Servers\aerodynamics.com.es\QueryHistory\364<|||>1<|||>2021-03-05 15:52:31|admin_aerodynamics|188|SELECT * FROM vista_logbook_personas_completo_resumen where PILOTO =5373 GROUP BY PILOTO,idCurso;<{{{><}}}><{{{><}}}>SELECT * FROM vista_logbook_personas_completo_total where PILOTO =5373 GROUP BY PILOTO ORDER BY STR_TO_DATE(DATE, "%d-%m-%Y") ASC;<{{{><}}}><{{{><}}}>SELECT * FROM vista_logbook_personas_completo where PILOTO =5373 and idCurso=9 GROUP BY PILOTO,idVuelo,ARRIVALTIME  ORDER BY STR_TO_DATE(DATE, "%d-%m-%Y") ASC
Servers\aerodynamics.com.es\QueryHistory\365<|||>1<|||>2021-03-05 16:27:18|admin_aerodynamics|78|UPDATE personas_vuelos_automatizacion pva<{{{><}}}>        LEFT JOIN aviones a ON a.idAvion = pva.idavion<{{{><}}}>        SET <{{{><}}}>        pva.matricula=a.registracion<{{{><}}}>        WHERE pva.id=695
Servers\arbitraje_notarial\SessionCreated<|||>1<|||>2020-07-16 13:03:35
Servers\arbitraje_notarial\Host<|||>1<|||>dataleanmakers.com.es
Servers\arbitraje_notarial\WindowsAuth<|||>3<|||>0
Servers\arbitraje_notarial\CleartextPluginEnabled<|||>3<|||>0
Servers\arbitraje_notarial\User<|||>1<|||>admin_arbitraje
Servers\arbitraje_notarial\Password<|||>1<|||>686B74707566687969707B7968716C393738402B7
Servers\arbitraje_notarial\LoginPrompt<|||>3<|||>0
Servers\arbitraje_notarial\Port<|||>1<|||>3306
Servers\arbitraje_notarial\NetType<|||>3<|||>0
Servers\arbitraje_notarial\Compressed<|||>3<|||>0
Servers\arbitraje_notarial\LocalTimeZone<|||>3<|||>0
Servers\arbitraje_notarial\QueryTimeout<|||>3<|||>30
Servers\arbitraje_notarial\KeepAlive<|||>3<|||>20
Servers\arbitraje_notarial\FullTableStatus<|||>3<|||>1
Servers\arbitraje_notarial\Databases<|||>1<|||>
Servers\arbitraje_notarial\Library<|||>1<|||>libmariadb.dll
Servers\arbitraje_notarial\Comment<|||>1<|||>
Servers\arbitraje_notarial\StartupScriptFilename<|||>1<|||>
Servers\arbitraje_notarial\TreeBackground<|||>3<|||>536870911
Servers\arbitraje_notarial\SSHtunnelHost<|||>1<|||>
Servers\arbitraje_notarial\SSHtunnelHostPort<|||>3<|||>22
Servers\arbitraje_notarial\SSHtunnelUser<|||>1<|||>
Servers\arbitraje_notarial\SSHtunnelPassword<|||>1<|||>1
Servers\arbitraje_notarial\SSHtunnelTimeout<|||>3<|||>4
Servers\arbitraje_notarial\SSHtunnelPrivateKey<|||>1<|||>
Servers\arbitraje_notarial\SSHtunnelPort<|||>3<|||>3307
Servers\arbitraje_notarial\SSL_Active<|||>3<|||>0
Servers\arbitraje_notarial\SSL_Key<|||>1<|||>
Servers\arbitraje_notarial\SSL_Cert<|||>1<|||>
Servers\arbitraje_notarial\SSL_CA<|||>1<|||>
Servers\arbitraje_notarial\SSL_Cipher<|||>1<|||>
Servers\arbitraje_notarial\ServerVersionFull<|||>1<|||>10.3.28-MariaDB - MariaDB Server
Servers\arbitraje_notarial\ConnectCount<|||>3<|||>42
Servers\arbitraje_notarial\ServerVersion<|||>3<|||>100328
Servers\arbitraje_notarial\LastConnect<|||>1<|||>2021-03-05 08:45:21
Servers\arbitraje_notarial\lastUsedDB<|||>1<|||>admin_arbitraje_notarial
Servers\arbitraje_notarial\FavoriteObjects<|||>1<|||>
Servers\arbitraje_notarial\RefusedCount<|||>3<|||>2
Servers\arbitraje_notarial\IgnoreDatabasePattern<|||>1<|||>
Servers\arbitraje_notarial\admin_arbitraje_notarial|cargas_contratos\Sort<|||>1<|||>1_idContrato|1_idCarga|
Servers\arbitraje_notarial\admin_arbitraje_notarial|codigos_postales\Sort<|||>1<|||>1_idCodigoPostal|
Servers\arbitraje_notarial\admin_arbitraje_notarial|contratos\Sort<|||>1<|||>1_idContrato|
Servers\arbitraje_notarial\admin_arbitraje_notarial|contrato_texto_modificado\Sort<|||>1<|||>1_idBaseContrato|
Servers\arbitraje_notarial\admin_arbitraje_notarial|documentos_bases_contratos\Sort<|||>1<|||>0_textoDocumentoBase|0_fechaCreacionBaseContrato|
Servers\arbitraje_notarial\admin_arbitraje_notarial|inmuebles\Sort<|||>1<|||>0_aireAcondicionado|1_idInmueble|
Servers\arbitraje_notarial\admin_arbitraje_notarial|inmuebles\RecentFilters\1<|||>1<|||>`idInmueble` LIKE '%M?laga%' OR `idTipoInmueble` LIKE '%M?laga%' OR `idCodigoPostal` LIKE '%M?laga%'<{{{><}}}> OR `refPlataforma` LIKE '%M?laga%' OR `idUsuario` LIKE '%M?laga%' OR `direccion` LIKE '%M?laga%'<{{{><}}}> OR `fincaRegistral` LIKE '%M?laga%' OR `registroPropiedad` LIKE '%M?laga%'<{{{><}}}> OR `numRegistro` LIKE '%M?laga%' OR `referenciaCatastral` LIKE '%M?laga%'<{{{><}}}> OR `tipo` LIKE '%M?laga%' OR `precioVenta` LIKE '%M?laga%' OR `precioAlquiler` LIKE '%M?laga%'<{{{><}}}> OR `anyoConstruccion` LIKE '%M?laga%' OR `aireAcondicionado` LIKE '%M?laga%'<{{{><}}}> OR `habitaciones` LIKE '%M?laga%' OR `banyos` LIKE '%M?laga%' OR `patio` LIKE '%M?laga%'<{{{><}}}> OR `balcon` LIKE '%M?laga%' OR `terraza` LIKE '%M?laga%' OR `aseos` LIKE '%M?laga%'<{{{><}}}> OR `ascensor` LIKE '%M?laga%' OR `parking` LIKE '%M?laga%' OR `piscina` LIKE '%M?laga%'<{{{><}}}> OR `metrosUtiles` LIKE '%M?laga%' OR `metrosConstruidos` LIKE '%M?laga%'
Servers\arbitraje_notarial\admin_arbitraje_notarial|personas\Sort<|||>1<|||>1_idPersona|
Servers\arbitraje_notarial\admin_arbitraje_notarial|personas\RecentFilters\1<|||>1<|||>`idPersona` LIKE '%zome%' OR `idUsuario` LIKE '%zome%' OR `idRolPersona` LIKE '%zome%' OR `idTarifa` LIKE '%zome%' OR `idCodigoAgencia` LIKE '%zome%' OR `idComision` LIKE '%zome%' OR `idInmueble` LIKE '%zome%' OR `nombre` LIKE '%zome%'<{{{><}}}> OR `nombreSociedad` LIKE '%zome%' OR `direccion` LIKE '%zome%' OR `personaFiscal` LIKE '%zome%' OR `nacionalidad` LIKE '%zome%' OR `estadoCivil` LIKE '%zome%' OR CAST(`fechaNacimiento` AS CHAR) LIKE '%zome%' OR `dni` LIKE '%zome%'<{{{><}}}> OR `cif` LIKE '%zome%' OR `nie` LIKE '%zome%' OR `pasaporte` LIKE '%zome%' OR `tipoDocumentacion` LIKE '%zome%' OR `telefonos` LIKE '%zome%' OR `fax` LIKE '%zome%' OR `contacto` LIKE '%zome%' OR `email1` LIKE '%zome%'<{{{><}}}> OR `email2` LIKE '%zome%' OR `web` LIKE '%zome%' OR `cuentaBancaria` LIKE '%zome%' OR `estadoContacto` LIKE '%zome%' OR `director` LIKE '%zome%' OR `comercial` LIKE '%zome%' OR `usuarioActivo` LIKE '%zome%' OR `inmobiliaria` LIKE '%zome%'<{{{><}}}> OR `facturaInmediata` LIKE '%zome%' OR `activadoComercial` LIKE '%zome%' OR `estadoCliente` LIKE '%zome%' OR `logoPersona` LIKE '%zome%' OR `idCodigoAgenciaSub` LIKE '%zome%' OR `cifProfesional` LIKE '%zome%' OR `tarifaArrendamiento` LIKE '%zome%'<{{{><}}}> OR `logo` LIKE '%zome%' OR `firma` LIKE '%zome%' OR `idCodigoPostal` LIKE '%zome%' OR `plataforma` LIKE '%zome%' OR `idAgenciaPlataforma` LIKE '%zome%' OR `token` LIKE '%zome%' OR `anotacionesUsuario` LIKE '%zome%'<{{{><}}}> OR `nombre_fiscal` LIKE '%zome%' OR `cif_empresa` LIKE '%zome%' OR CAST(`fechaAlta` AS CHAR) LIKE '%zome%' OR `longitud` LIKE '%zome%' OR `latitud` LIKE '%zome%' OR `provincia` LIKE '%zome%' OR `localidad` LIKE '%zome%'<{{{><}}}> OR `cp` LIKE '%zome%' OR `cargoContacto` LIKE '%zome%' OR `movil` LIKE '%zome%' OR `clave` LIKE '%zome%' OR `notasCondicionesEconomicas` LIKE '%zome%' OR `comisionistaCV` LIKE '%zome%' OR `comisionistaArr` LIKE '%zome%'<{{{><}}}> OR `idInmobiliariaCreadora` LIKE '%zome%' OR `refPlataformaCRM` LIKE '%zome%'
Servers\arbitraje_notarial\admin_arbitraje_notarial|personas\RecentFilters\2<|||>1<|||>`idPersona` LIKE '%testinmovilla%' OR `idUsuario` LIKE '%testinmovilla%' OR `idRolPersona` LIKE '%testinmovilla%' OR `idTarifa` LIKE '%testinmovilla%' OR `idCodigoAgencia` LIKE '%testinmovilla%' OR `idComision` LIKE '%testinmovilla%'<{{{><}}}> OR `idInmueble` LIKE '%testinmovilla%' OR `nombre` LIKE '%testinmovilla%' OR `nombreSociedad` LIKE '%testinmovilla%' OR `direccion` LIKE '%testinmovilla%' OR `personaFiscal` LIKE '%testinmovilla%' OR `nacionalidad` LIKE '%testinmovilla%'<{{{><}}}> OR `estadoCivil` LIKE '%testinmovilla%' OR CAST(`fechaNacimiento` AS CHAR) LIKE '%testinmovilla%' OR `dni` LIKE '%testinmovilla%' OR `cif` LIKE '%testinmovilla%' OR `nie` LIKE '%testinmovilla%' OR `pasaporte` LIKE '%testinmovilla%'<{{{><}}}> OR `tipoDocumentacion` LIKE '%testinmovilla%' OR `telefonos` LIKE '%testinmovilla%' OR `fax` LIKE '%testinmovilla%' OR `contacto` LIKE '%testinmovilla%' OR `email1` LIKE '%testinmovilla%' OR `email2` LIKE '%testinmovilla%'<{{{><}}}> OR `web` LIKE '%testinmovilla%' OR `cuentaBancaria` LIKE '%testinmovilla%' OR `estadoContacto` LIKE '%testinmovilla%' OR `director` LIKE '%testinmovilla%' OR `comercial` LIKE '%testinmovilla%' OR `usuarioActivo` LIKE '%testinmovilla%'<{{{><}}}> OR `inmobiliaria` LIKE '%testinmovilla%' OR `facturaInmediata` LIKE '%testinmovilla%' OR `activadoComercial` LIKE '%testinmovilla%' OR `estadoCliente` LIKE '%testinmovilla%' OR `logoPersona` LIKE '%testinmovilla%'<{{{><}}}> OR `idCodigoAgenciaSub` LIKE '%testinmovilla%' OR `cifProfesional` LIKE '%testinmovilla%' OR `tarifaArrendamiento` LIKE '%testinmovilla%' OR `logo` LIKE '%testinmovilla%' OR `firma` LIKE '%testinmovilla%' OR `idCodigoPostal` LIKE '%testinmovilla%'<{{{><}}}> OR `plataforma` LIKE '%testinmovilla%' OR `idAgenciaPlataforma` LIKE '%testinmovilla%' OR `token` LIKE '%testinmovilla%' OR `anotacionesUsuario` LIKE '%testinmovilla%' OR `nombre_fiscal` LIKE '%testinmovilla%' OR `cif_empresa` LIKE '%testinmovilla%'<{{{><}}}> OR CAST(`fechaAlta` AS CHAR) LIKE '%testinmovilla%' OR `longitud` LIKE '%testinmovilla%' OR `latitud` LIKE '%testinmovilla%' OR `provincia` LIKE '%testinmovilla%' OR `localidad` LIKE '%testinmovilla%' OR `cp` LIKE '%testinmovilla%'<{{{><}}}> OR `cargoContacto` LIKE '%testinmovilla%' OR `movil` LIKE '%testinmovilla%' OR `clave` LIKE '%testinmovilla%' OR `notasCondicionesEconomicas` LIKE '%testinmovilla%' OR `comisionistaCV` LIKE '%testinmovilla%' OR `comisionistaArr` LIKE '%testinmovilla%'<{{{><}}}> OR `idInmobiliariaCreadora` LIKE '%testinmovilla%' OR `refPlataformaCRM` LIKE '%testinmovilla%'
Servers\arbitraje_notarial\admin_arbitraje_notarial|personas\RecentFilters\3<|||>1<|||>`idPersona` LIKE '%jesus%' OR `idUsuario` LIKE '%jesus%' OR `idRolPersona` LIKE '%jesus%' OR `idTarifa` LIKE '%jesus%' OR `idCodigoAgencia` LIKE '%jesus%'<{{{><}}}> OR `idComision` LIKE '%jesus%' OR `idInmueble` LIKE '%jesus%' OR `nombre` LIKE '%jesus%' OR `nombreSociedad` LIKE '%jesus%'<{{{><}}}> OR `direccion` LIKE '%jesus%' OR `personaFiscal` LIKE '%jesus%' OR `nacionalidad` LIKE '%jesus%' OR `estadoCivil` LIKE '%jesus%'<{{{><}}}> OR CAST(`fechaNacimiento` AS CHAR) LIKE '%jesus%' OR `dni` LIKE '%jesus%' OR `cif` LIKE '%jesus%' OR `nie` LIKE '%jesus%'<{{{><}}}> OR `pasaporte` LIKE '%jesus%' OR `tipoDocumentacion` LIKE '%jesus%' OR `telefonos` LIKE '%jesus%' OR `fax` LIKE '%jesus%'<{{{><}}}> OR `contacto` LIKE '%jesus%' OR `email1` LIKE '%jesus%' OR `email2` LIKE '%jesus%' OR `web` LIKE '%jesus%' OR `cuentaBancaria` LIKE '%jesus%'<{{{><}}}> OR `estadoContacto` LIKE '%jesus%' OR `director` LIKE '%jesus%' OR `comercial` LIKE '%jesus%' OR `usuarioActivo` LIKE '%jesus%'<{{{><}}}> OR `inmobiliaria` LIKE '%jesus%' OR `facturaInmediata` LIKE '%jesus%' OR `activadoComercial` LIKE '%jesus%' OR `estadoCliente` LIKE '%jesus%'<{{{><}}}> OR `logoPersona` LIKE '%jesus%' OR `idCodigoAgenciaSub` LIKE '%jesus%' OR `cifProfesional` LIKE '%jesus%' OR `tarifaArrendamiento` LIKE '%jesus%'<{{{><}}}> OR `logo` LIKE '%jesus%' OR `firma` LIKE '%jesus%' OR `idCodigoPostal` LIKE '%jesus%' OR `plataforma` LIKE '%jesus%' OR `idAgenciaPlataforma` LIKE '%jesus%'<{{{><}}}> OR `token` LIKE '%jesus%' OR `anotacionesUsuario` LIKE '%jesus%' OR `nombre_fiscal` LIKE '%jesus%' OR `cif_empresa` LIKE '%jesus%'<{{{><}}}> OR CAST(`fechaAlta` AS CHAR) LIKE '%jesus%' OR `longitud` LIKE '%jesus%' OR `latitud` LIKE '%jesus%' OR `provincia` LIKE '%jesus%'<{{{><}}}> OR `localidad` LIKE '%jesus%' OR `cp` LIKE '%jesus%' OR `cargoContacto` LIKE '%jesus%' OR `movil` LIKE '%jesus%' OR `clave` LIKE '%jesus%'<{{{><}}}> OR `notasCondicionesEconomicas` LIKE '%jesus%' OR `comisionistaCV` LIKE '%jesus%' OR `comisionistaArr` LIKE '%jesus%' OR `idInmobiliariaCreadora` LIKE '%jesus%'<{{{><}}}> OR `refPlataformaCRM` LIKE '%jesus%'
Servers\arbitraje_notarial\admin_arbitraje_notarial|personas\RecentFilters\4<|||>1<|||>`idPersona` LIKE '%zome%' OR `idUsuario` LIKE '%zome%' OR `idRolPersona` LIKE '%zome%' OR `idTarifa` LIKE '%zome%' OR `idCodigoAgencia` LIKE '%zome%'<{{{><}}}> OR `idComision` LIKE '%zome%' OR `idInmueble` LIKE '%zome%' OR `nombre` LIKE '%zome%' OR `nombreSociedad` LIKE '%zome%'<{{{><}}}> OR `direccion` LIKE '%zome%' OR `personaFiscal` LIKE '%zome%' OR `nacionalidad` LIKE '%zome%' OR `estadoCivil` LIKE '%zome%'<{{{><}}}> OR CAST(`fechaNacimiento` AS CHAR) LIKE '%zome%' OR `dni` LIKE '%zome%' OR `cif` LIKE '%zome%' OR `nie` LIKE '%zome%' OR `pasaporte` LIKE '%zome%'<{{{><}}}> OR `tipoDocumentacion` LIKE '%zome%' OR `telefonos` LIKE '%zome%' OR `fax` LIKE '%zome%' OR `contacto` LIKE '%zome%' OR `email1` LIKE '%zome%'<{{{><}}}> OR `email2` LIKE '%zome%' OR `web` LIKE '%zome%' OR `cuentaBancaria` LIKE '%zome%' OR `estadoContacto` LIKE '%zome%' OR `director` LIKE '%zome%'<{{{><}}}> OR `comercial` LIKE '%zome%' OR `usuarioActivo` LIKE '%zome%' OR `inmobiliaria` LIKE '%zome%' OR `facturaInmediata` LIKE '%zome%'<{{{><}}}> OR `activadoComercial` LIKE '%zome%' OR `estadoCliente` LIKE '%zome%' OR `logoPersona` LIKE '%zome%' OR `idCodigoAgenciaSub` LIKE '%zome%'<{{{><}}}> OR `cifProfesional` LIKE '%zome%' OR `tarifaArrendamiento` LIKE '%zome%' OR `logo` LIKE '%zome%' OR `firma` LIKE '%zome%'<{{{><}}}> OR `idCodigoPostal` LIKE '%zome%' OR `plataforma` LIKE '%zome%' OR `idAgenciaPlataforma` LIKE '%zome%' OR `token` LIKE '%zome%'<{{{><}}}> OR `anotacionesUsuario` LIKE '%zome%' OR `nombre_fiscal` LIKE '%zome%' OR `cif_empresa` LIKE '%zome%' OR CAST(`fechaAlta` AS CHAR) LIKE '%zome%'<{{{><}}}> OR `longitud` LIKE '%zome%' OR `latitud` LIKE '%zome%' OR `provincia` LIKE '%zome%' OR `localidad` LIKE '%zome%' OR `cp` LIKE '%zome%'<{{{><}}}> OR `cargoContacto` LIKE '%zome%' OR `movil` LIKE '%zome%' OR `clave` LIKE '%zome%' OR `notasCondicionesEconomicas` LIKE '%zome%'<{{{><}}}> OR `comisionistaCV` LIKE '%zome%' OR `comisionistaArr` LIKE '%zome%' OR `idInmobiliariaCreadora` LIKE '%zome%'
Servers\arbitraje_notarial\admin_arbitraje_notarial|personas\RecentFilters\5<|||>1<|||>`idPersona` LIKE '%inmovi%' OR `idUsuario` LIKE '%inmovi%' OR `idRolPersona` LIKE '%inmovi%' OR `idTarifa` LIKE '%inmovi%'<{{{><}}}> OR `idCodigoAgencia` LIKE '%inmovi%' OR `idComision` LIKE '%inmovi%' OR `idInmueble` LIKE '%inmovi%' OR `nombre` LIKE '%inmovi%'<{{{><}}}> OR `nombreSociedad` LIKE '%inmovi%' OR `direccion` LIKE '%inmovi%' OR `personaFiscal` LIKE '%inmovi%' OR `nacionalidad` LIKE '%inmovi%'<{{{><}}}> OR `estadoCivil` LIKE '%inmovi%' OR CAST(`fechaNacimiento` AS CHAR) LIKE '%inmovi%' OR `dni` LIKE '%inmovi%' OR `cif` LIKE '%inmovi%'<{{{><}}}> OR `nie` LIKE '%inmovi%' OR `pasaporte` LIKE '%inmovi%' OR `tipoDocumentacion` LIKE '%inmovi%' OR `telefonos` LIKE '%inmovi%'<{{{><}}}> OR `fax` LIKE '%inmovi%' OR `contacto` LIKE '%inmovi%' OR `email1` LIKE '%inmovi%' OR `email2` LIKE '%inmovi%' OR `web` LIKE '%inmovi%'<{{{><}}}> OR `cuentaBancaria` LIKE '%inmovi%' OR `estadoContacto` LIKE '%inmovi%' OR `director` LIKE '%inmovi%' OR `comercial` LIKE '%inmovi%'<{{{><}}}> OR `usuarioActivo` LIKE '%inmovi%' OR `inmobiliaria` LIKE '%inmovi%' OR `facturaInmediata` LIKE '%inmovi%' OR `activadoComercial` LIKE '%inmovi%'<{{{><}}}> OR `estadoCliente` LIKE '%inmovi%' OR `logoPersona` LIKE '%inmovi%' OR `idCodigoAgenciaSub` LIKE '%inmovi%' OR `cifProfesional` LIKE '%inmovi%'<{{{><}}}> OR `tarifaArrendamiento` LIKE '%inmovi%' OR `logo` LIKE '%inmovi%' OR `firma` LIKE '%inmovi%' OR `idCodigoPostal` LIKE '%inmovi%'<{{{><}}}> OR `plataforma` LIKE '%inmovi%' OR `idAgenciaPlataforma` LIKE '%inmovi%' OR `token` LIKE '%inmovi%' OR `anotacionesUsuario` LIKE '%inmovi%'<{{{><}}}> OR `nombre_fiscal` LIKE '%inmovi%' OR `cif_empresa` LIKE '%inmovi%' OR CAST(`fechaAlta` AS CHAR) LIKE '%inmovi%' OR `longitud` LIKE '%inmovi%'<{{{><}}}> OR `latitud` LIKE '%inmovi%' OR `provincia` LIKE '%inmovi%' OR `localidad` LIKE '%inmovi%' OR `cp` LIKE '%inmovi%' OR `cargoContacto` LIKE '%inmovi%'<{{{><}}}> OR `movil` LIKE '%inmovi%' OR `clave` LIKE '%inmovi%' OR `notasCondicionesEconomicas` LIKE '%inmovi%' OR `comisionistaCV` LIKE '%inmovi%'<{{{><}}}> OR `comisionistaArr` LIKE '%inmovi%' OR `idInmobiliariaCreadora` LIKE '%inmovi%'
Servers\arbitraje_notarial\admin_arbitraje_notarial|personas\RecentFilters\6<|||>1<|||>`idPersona` LIKE '%inmob%' OR `idUsuario` LIKE '%inmob%' OR `idRolPersona` LIKE '%inmob%' OR `idTarifa` LIKE '%inmob%' OR `idCodigoAgencia` LIKE '%inmob%'<{{{><}}}> OR `idComision` LIKE '%inmob%' OR `idInmueble` LIKE '%inmob%' OR `nombre` LIKE '%inmob%' OR `nombreSociedad` LIKE '%inmob%'<{{{><}}}> OR `direccion` LIKE '%inmob%' OR `personaFiscal` LIKE '%inmob%' OR `nacionalidad` LIKE '%inmob%' OR `estadoCivil` LIKE '%inmob%'<{{{><}}}> OR CAST(`fechaNacimiento` AS CHAR) LIKE '%inmob%' OR `dni` LIKE '%inmob%' OR `cif` LIKE '%inmob%' OR `nie` LIKE '%inmob%'<{{{><}}}> OR `pasaporte` LIKE '%inmob%' OR `tipoDocumentacion` LIKE '%inmob%' OR `telefonos` LIKE '%inmob%' OR `fax` LIKE '%inmob%'<{{{><}}}> OR `contacto` LIKE '%inmob%' OR `email1` LIKE '%inmob%' OR `email2` LIKE '%inmob%' OR `web` LIKE '%inmob%' OR `cuentaBancaria` LIKE '%inmob%'<{{{><}}}> OR `estadoContacto` LIKE '%inmob%' OR `director` LIKE '%inmob%' OR `comercial` LIKE '%inmob%' OR `usuarioActivo` LIKE '%inmob%'<{{{><}}}> OR `inmobiliaria` LIKE '%inmob%' OR `facturaInmediata` LIKE '%inmob%' OR `activadoComercial` LIKE '%inmob%' OR `estadoCliente` LIKE '%inmob%'<{{{><}}}> OR `logoPersona` LIKE '%inmob%' OR `idCodigoAgenciaSub` LIKE '%inmob%' OR `cifProfesional` LIKE '%inmob%' OR `tarifaArrendamiento` LIKE '%inmob%'<{{{><}}}> OR `logo` LIKE '%inmob%' OR `firma` LIKE '%inmob%' OR `idCodigoPostal` LIKE '%inmob%' OR `plataforma` LIKE '%inmob%' OR `idAgenciaPlataforma` LIKE '%inmob%'<{{{><}}}> OR `token` LIKE '%inmob%' OR `anotacionesUsuario` LIKE '%inmob%' OR `nombre_fiscal` LIKE '%inmob%' OR `cif_empresa` LIKE '%inmob%'<{{{><}}}> OR CAST(`fechaAlta` AS CHAR) LIKE '%inmob%' OR `longitud` LIKE '%inmob%' OR `latitud` LIKE '%inmob%' OR `provincia` LIKE '%inmob%'<{{{><}}}> OR `localidad` LIKE '%inmob%' OR `cp` LIKE '%inmob%' OR `cargoContacto` LIKE '%inmob%' OR `movil` LIKE '%inmob%' OR `clave` LIKE '%inmob%'<{{{><}}}> OR `notasCondicionesEconomicas` LIKE '%inmob%' OR `comisionistaCV` LIKE '%inmob%' OR `comisionistaArr` LIKE '%inmob%' OR `idInmobiliariaCreadora` LIKE '%inmob%'
Servers\arbitraje_notarial\admin_arbitraje_notarial|personas\RecentFilters\7<|||>1<|||>`idPersona` LIKE '%inmobilla%' OR `idUsuario` LIKE '%inmobilla%' OR `idRolPersona` LIKE '%inmobilla%' OR `idTarifa` LIKE '%inmobilla%'<{{{><}}}> OR `idCodigoAgencia` LIKE '%inmobilla%' OR `idComision` LIKE '%inmobilla%' OR `idInmueble` LIKE '%inmobilla%' OR `nombre` LIKE '%inmobilla%'<{{{><}}}> OR `nombreSociedad` LIKE '%inmobilla%' OR `direccion` LIKE '%inmobilla%' OR `personaFiscal` LIKE '%inmobilla%' OR `nacionalidad` LIKE '%inmobilla%'<{{{><}}}> OR `estadoCivil` LIKE '%inmobilla%' OR CAST(`fechaNacimiento` AS CHAR) LIKE '%inmobilla%' OR `dni` LIKE '%inmobilla%' OR `cif` LIKE '%inmobilla%'<{{{><}}}> OR `nie` LIKE '%inmobilla%' OR `pasaporte` LIKE '%inmobilla%' OR `tipoDocumentacion` LIKE '%inmobilla%' OR `telefonos` LIKE '%inmobilla%'<{{{><}}}> OR `fax` LIKE '%inmobilla%' OR `contacto` LIKE '%inmobilla%' OR `email1` LIKE '%inmobilla%' OR `email2` LIKE '%inmobilla%'<{{{><}}}> OR `web` LIKE '%inmobilla%' OR `cuentaBancaria` LIKE '%inmobilla%' OR `estadoContacto` LIKE '%inmobilla%' OR `director` LIKE '%inmobilla%'<{{{><}}}> OR `comercial` LIKE '%inmobilla%' OR `usuarioActivo` LIKE '%inmobilla%' OR `inmobiliaria` LIKE '%inmobilla%' OR `facturaInmediata` LIKE '%inmobilla%'<{{{><}}}> OR `activadoComercial` LIKE '%inmobilla%' OR `estadoCliente` LIKE '%inmobilla%' OR `logoPersona` LIKE '%inmobilla%' OR `idCodigoAgenciaSub` LIKE '%inmobilla%'<{{{><}}}> OR `cifProfesional` LIKE '%inmobilla%' OR `tarifaArrendamiento` LIKE '%inmobilla%' OR `logo` LIKE '%inmobilla%' OR `firma` LIKE '%inmobilla%'<{{{><}}}> OR `idCodigoPostal` LIKE '%inmobilla%' OR `plataforma` LIKE '%inmobilla%' OR `idAgenciaPlataforma` LIKE '%inmobilla%' OR `token` LIKE '%inmobilla%'<{{{><}}}> OR `anotacionesUsuario` LIKE '%inmobilla%' OR `nombre_fiscal` LIKE '%inmobilla%' OR `cif_empresa` LIKE '%inmobilla%' OR CAST(`fechaAlta` AS CHAR) LIKE '%inmobilla%'<{{{><}}}> OR `longitud` LIKE '%inmobilla%' OR `latitud` LIKE '%inmobilla%' OR `provincia` LIKE '%inmobilla%' OR `localidad` LIKE '%inmobilla%'<{{{><}}}> OR `cp` LIKE '%inmobilla%' OR `cargoContacto` LIKE '%inmobilla%' OR `movil` LIKE '%inmobilla%' OR `clave` LIKE '%inmobilla%'<{{{><}}}> OR `notasCondicionesEconomicas` LIKE '%inmobilla%' OR `comisionistaCV` LIKE '%inmobilla%' OR `comisionistaArr` LIKE '%inmobilla%'<{{{><}}}> OR `idInmobiliariaCreadora` LIKE '%inmobilla%'
Servers\arbitraje_notarial\admin_arbitraje_notarial|provincias\Sort<|||>1<|||>1_idProvincia|
Servers\arbitraje_notarial\admin_arbitraje_notarial|ref_personas_contratos\Sort<|||>1<|||>1_idPersonaContrato|
Servers\arbitraje_notarial\admin_arbitraje_notarial|tiposFacturas\Sort<|||>1<|||>0_idTipoFactura|
Servers\arbitraje_notarial\admin_arbitraje_notarial|usuarios\Sort<|||>1<|||>1_idUsuario|1_email|
Servers\arbitraje_notarial\QueryHistory\44<|||>1<|||>2020-11-12 14:57:05|admin_arbitraje_notarial|63|UPDATE personas SET tratamiento="D."
Servers\arbitraje_notarial\QueryHistory\6<|||>1<|||>2020-11-12 15:52:43|admin_arbitraje_notarial|78|UPDATE personas SET estadoCivil='casado'
Servers\arbitraje_notarial\QueryHistory\5<|||>1<|||>2020-11-12 15:53:17|admin_arbitraje_notarial|63|UPDATE personas SET nacionalidad='española'
Servers\arbitraje_notarial\QueryHistory\7<|||>1<|||>2020-11-12 16:13:25|admin_arbitraje_notarial|375|SELECT rpc.idPersonaContrato, rpc.idPersona, rpc.idRolPersona, rpc.idContrato, per.idPersona, <{{{><}}}>        CASE WHEN per.personaFiscal != "empresa" THEN CONCAT(per.nombre," ",per.nombre_fiscal, " ", per.cif_empresa )<{{{><}}}>        ELSE per.nombre END as nombre, per.personaFiscal, per.nacionalidad,<{{{><}}}>        per.estadoCivil, per.fechaNacimiento, per.dni, per.telefonos, per.email1, <{{{><}}}>        per.direccion,per.idCodigoPostal, rpc.representanteLegal, cp.idCodigoPostal,<{{{><}}}>        cp.codigo, cp.poblacion, cp.idProvincia, prov.idProvincia, prov.provincia,per.tratamiento as tratamiento,per.cp as cp,per.localidad as localidadpersona,per.provincia as provinciapersona<{{{><}}}>        FROM ref_personas_contratos AS rpc<{{{><}}}>        LEFT JOIN personas AS per ON rpc.idpersona = per.idPersona<{{{><}}}>        LEFT JOIN codigos_postales AS cp ON cp.idCodigoPostal = per.idCodigoPostal<{{{><}}}>        LEFT JOIN provincias AS prov ON prov.idProvincia = cp.idProvincia<{{{><}}}>        
Servers\arbitraje_notarial\QueryHistory\8<|||>1<|||>2020-11-12 16:14:50|admin_arbitraje_notarial|718|SELECT rpc.idPersonaContrato, rpc.idPersona, rpc.idRolPersona, rpc.idContrato, per.idPersona, <{{{><}}}>        CASE WHEN per.personaFiscal != "empresa" THEN CONCAT(per.nombre," ",per.nombre_fiscal, " ", per.cif_empresa )<{{{><}}}>        ELSE per.nombre END as nombre, per.personaFiscal, per.nacionalidad,<{{{><}}}>        per.estadoCivil, per.fechaNacimiento, per.dni, per.telefonos, per.email1, <{{{><}}}>        per.direccion,per.idCodigoPostal, rpc.representanteLegal, cp.idCodigoPostal,<{{{><}}}>        cp.codigo, cp.poblacion, cp.idProvincia, prov.idProvincia, prov.provincia,per.tratamiento as tratamiento,per.cp as cp,per.localidad as localidadpersona,per.provincia as provinciapersona<{{{><}}}>        FROM ref_personas_contratos AS rpc<{{{><}}}>        LEFT JOIN personas AS per ON rpc.idpersona = per.idPersona<{{{><}}}>        LEFT JOIN codigos_postales AS cp ON cp.idCodigoPostal = per.idCodigoPostal<{{{><}}}>        LEFT JOIN provincias AS prov ON prov.idProvincia = cp.idProvincia WHERE nombre IS NOT null<{{{><}}}>        
Servers\arbitraje_notarial\QueryHistory\9<|||>1<|||>2020-11-12 16:15:08|admin_arbitraje_notarial|234|SELECT rpc.idPersonaContrato, rpc.idPersona, rpc.idRolPersona, rpc.idContrato, per.idPersona, <{{{><}}}>        CASE WHEN per.personaFiscal != "empresa" THEN CONCAT(per.nombre," ",per.nombre_fiscal, " ", per.cif_empresa )<{{{><}}}>        ELSE per.nombre END as nombre, per.personaFiscal, per.nacionalidad,<{{{><}}}>        per.estadoCivil, per.fechaNacimiento, per.dni, per.telefonos, per.email1, <{{{><}}}>        per.direccion,per.idCodigoPostal, rpc.representanteLegal, cp.idCodigoPostal,<{{{><}}}>        cp.codigo, cp.poblacion, cp.idProvincia, prov.idProvincia, prov.provincia,per.tratamiento as tratamiento,per.cp as cp,per.localidad as localidadpersona,per.provincia as provinciapersona<{{{><}}}>        FROM ref_personas_contratos AS rpc<{{{><}}}>        LEFT JOIN personas AS per ON rpc.idpersona = per.idPersona<{{{><}}}>        LEFT JOIN codigos_postales AS cp ON cp.idCodigoPostal = per.idCodigoPostal<{{{><}}}>        LEFT JOIN provincias AS prov ON prov.idProvincia = cp.idProvincia WHERE per.nombre IS NOT null<{{{><}}}>        
Servers\arbitraje_notarial\QueryHistory\10<|||>1<|||>2020-11-12 16:15:44|admin_arbitraje_notarial|266|SELECT rpc.idPersonaContrato, rpc.idPersona, rpc.idRolPersona, rpc.idContrato, per.idPersona,per.nombre as nombre, per.personaFiscal, per.nacionalidad,<{{{><}}}>        per.estadoCivil, per.fechaNacimiento, per.dni, per.telefonos, per.email1, <{{{><}}}>        per.direccion,per.idCodigoPostal, rpc.representanteLegal, cp.idCodigoPostal,<{{{><}}}>        cp.codigo, cp.poblacion, cp.idProvincia, prov.idProvincia, prov.provincia,per.tratamiento as tratamiento,per.cp as cp,per.localidad as localidadpersona,per.provincia as provinciapersona<{{{><}}}>        FROM ref_personas_contratos AS rpc<{{{><}}}>        LEFT JOIN personas AS per ON rpc.idpersona = per.idPersona<{{{><}}}>        LEFT JOIN codigos_postales AS cp ON cp.idCodigoPostal = per.idCodigoPostal<{{{><}}}>        LEFT JOIN provincias AS prov ON prov.idProvincia = cp.idProvincia WHERE per.nombre IS NOT null<{{{><}}}>        
Servers\arbitraje_notarial\QueryHistory\11<|||>1<|||>2020-11-12 16:15:58|admin_arbitraje_notarial|156|SELECT rpc.idPersonaContrato, rpc.idPersona, rpc.idRolPersona, rpc.idContrato, per.idPersona,per.nombre as nombre, per.personaFiscal, per.nacionalidad,<{{{><}}}>        per.estadoCivil, per.fechaNacimiento, per.dni, per.telefonos, per.email1, <{{{><}}}>        per.direccion,per.idCodigoPostal, rpc.representanteLegal, cp.idCodigoPostal,<{{{><}}}>        cp.codigo, cp.poblacion, cp.idProvincia, prov.idProvincia, prov.provincia,per.tratamiento as tratamiento,per.cp as cp,per.localidad as localidadpersona,per.provincia as provinciapersona<{{{><}}}>        FROM ref_personas_contratos AS rpc<{{{><}}}>        LEFT JOIN personas AS per ON rpc.idpersona = per.idPersona<{{{><}}}>        LEFT JOIN codigos_postales AS cp ON cp.idCodigoPostal = per.idCodigoPostal<{{{><}}}>        LEFT JOIN provincias AS prov ON prov.idProvincia = cp.idProvincia <{{{><}}}>        
Servers\arbitraje_notarial\QueryHistory\12<|||>1<|||>2020-11-12 16:18:49|admin_arbitraje_notarial|125|SELECT rpc.idPersonaContrato, rpc.idPersona, rpc.idRolPersona, rpc.idContrato, per.idPersona,if(personaFiscal="empresa",CONCAT(per.nombre,' ',per.nombreSociedad,' ',per.dni),per.nombre) AS nombre, per.personaFiscal, per.nacionalidad,<{{{><}}}>        per.estadoCivil, per.fechaNacimiento, per.dni, per.telefonos, per.email1, <{{{><}}}>        per.direccion,per.idCodigoPostal, rpc.representanteLegal, cp.idCodigoPostal,<{{{><}}}>        cp.codigo, cp.poblacion, cp.idProvincia, prov.idProvincia, prov.provincia,per.tratamiento as tratamiento,per.cp as cp,per.localidad as localidadpersona,per.provincia as provinciapersona<{{{><}}}>        FROM ref_personas_contratos AS rpc<{{{><}}}>        LEFT JOIN personas AS per ON rpc.idpersona = per.idPersona<{{{><}}}>        LEFT JOIN codigos_postales AS cp ON cp.idCodigoPostal = per.idCodigoPostal<{{{><}}}>        LEFT JOIN provincias AS prov ON prov.idProvincia = cp.idProvincia <{{{><}}}>        
Servers\arbitraje_notarial\QueryHistory\13<|||>1<|||>2020-11-28 12:28:56|admin_arbitraje_notarial|16|SELECT i.*,ti.* from ref_contratos_anexo_inmuebles<{{{><}}}>        LEFT JOIN inmuebles i on i.idInmueble=ref_contratos_anexo_inmuebles.idInmueble<{{{><}}}>        left join tipos_inmuebles ti on ti.idTipoInmueble= i.idTipoInmueble
Servers\arbitraje_notarial\QueryHistory\1<|||>1<|||>2020-11-28 12:29:57|admin_arbitraje_notarial|16|SELECT i.*,ti.tipoInmueble as tipoInmueble from ref_contratos_anexo_inmuebles<{{{><}}}>        LEFT JOIN inmuebles i on i.idInmueble=ref_contratos_anexo_inmuebles.idInmueble<{{{><}}}>        left join tipos_inmuebles ti on ti.idTipoInmueble= i.idTipoInmueble
Servers\arbitraje_notarial\QueryHistory\2<|||>1<|||>2020-11-28 15:00:13|admin_arbitraje_notarial|16|SELECT i.*,ti.tipoInmueble as tipoInmueble from ref_contratos_anexo_inmuebles<{{{><}}}>        LEFT JOIN inmuebles i on i.idInmueble=ref_contratos_anexo_inmuebles.idInmueble<{{{><}}}>        left join tipos_inmuebles ti on ti.idTipoInmueble= i.idTipoInmueble<{{{><}}}>        where ref_contratos_anexo_inmuebles.idContrato
Servers\arbitraje_notarial\QueryHistory\3<|||>1<|||>2020-11-30 11:33:15|information_schema|32|SELECT COLUMN_NAME, ORDINAL_POSITION, COLUMN_DEFAULT, IS_NULLABLE, DATA_TYPE, COLUMN_TYPE<{{{><}}}>FROM `Columns`<{{{><}}}>WHERE TABLE_NAME = 'inmuebles'
Servers\arbitraje_notarial\QueryHistory\4<|||>1<|||>2020-11-30 11:33:37|information_schema|31|SELECT COLUMN_NAME<{{{><}}}>FROM `Columns`<{{{><}}}>WHERE TABLE_NAME = 'inmuebles'
Servers\arbitraje_notarial\QueryHistory\14<|||>1<|||>2020-11-30 11:33:49|information_schema|32|SELECT COLUMN_NAME AS campo<{{{><}}}>FROM `Columns`<{{{><}}}>WHERE TABLE_NAME = 'inmuebles'
Servers\arbitraje_notarial\QueryHistory\15<|||>1<|||>2020-11-30 11:33:54|information_schema|16|SELECT COLUMN_NAME AS campo<{{{><}}}>FROM Columns<{{{><}}}>WHERE TABLE_NAME = 'inmuebles'
Servers\arbitraje_notarial\QueryHistory\16<|||>1<|||>2020-11-30 11:39:32|information_schema|63|SELECT COLUMN_NAME FROM COLUMNS WHERE TABLE_SCHEMA = "admin_arbitraje_notarial" AND TABLE_NAME = "inmuebles"
Servers\arbitraje_notarial\QueryHistory\17<|||>1<|||>2020-11-30 12:13:37|admin_arbitraje_notarial|781|UPDATE inmuebles SET idTipoInmueble="",direccion="membrillo 1",codigo="29120",localidad="Zangano, El",provincia="Málaga",fincaRegistral="111",registroPropiedad="1111",numRegistro="111",referenciaCatastral="1111",precioVenta="1111",idInmueblePadre="",anyoConstruccion="0",metrosConstruidos="120",metrosUtiles="0",habitaciones="5",banyos="2",aseos="0",balcon="7",patio="1",terraza="1",ascensor="1",parking="1",trastero="1",piscina="1",aireAcondicionado="1",luz="1",agua="1",gas="1",fibra="1",observaciones="prueba update" WHERE idInmueble = 81 LIMIT 1
Servers\arbitraje_notarial\QueryHistory\18<|||>1<|||>2020-11-30 15:15:10|admin_arbitraje_notarial|16|SELECT idPersona FROM personas WHERE (lower(dni) like "%27392247y%") or (lower(cif) like "%27392247y%") limit 1<{{{><}}}>
Servers\arbitraje_notarial\QueryHistory\19<|||>1<|||>2020-11-30 15:15:21|admin_arbitraje_notarial|15|SELECT idPersona FROM personas WHERE (lower(dni) like "%27392247%") or (lower(cif) like "%27392247%") limit 1<{{{><}}}>
Servers\arbitraje_notarial\QueryHistory\20<|||>1<|||>2020-11-30 15:15:52|admin_arbitraje_notarial|31|SELECT idPersona FROM personas WHERE (lower(dni) LIKE '%27392247%') or (lower(cif) LIKE '%27392247%') limit 1<{{{><}}}>
Servers\arbitraje_notarial\QueryHistory\21<|||>1<|||>2020-11-30 15:16:34|admin_arbitraje_notarial|78|SELECT idPersona FROM personas WHERE (lower(dni) LIKE '%27392247%') or (lower(cif) LIKE '%27392247%') LIMIT 1;<{{{><}}}><{{{><}}}>SELECT DISTINCT(dni) FROM personas;<{{{><}}}>
Servers\arbitraje_notarial\QueryHistory\22<|||>1<|||>2020-12-01 17:01:16|admin_arbitraje_notarial|16|SELECT <{{{><}}}>        c.idContrato,<{{{><}}}>        tc.tipoContrato,<{{{><}}}>        c.idInmueble,<{{{><}}}>        inm.direccion,<{{{><}}}>        date_format(c.fechaContrato,'%d-%m-%Y') AS fecha,<{{{><}}}>        if(c.lugarCelebracion IS NULL OR c.lugarCelebracion='','-',c.lugarCelebracion) AS Lugar,<{{{><}}}>        c.precio,<{{{><}}}>        if(finalizado=1,'Finalizado','Editable') as estado <{{{><}}}>        FROM contratos c<{{{><}}}>        LEFT JOIN usuarios u ON u.idUsuario=c.idUsuario<{{{><}}}>        LEFT JOIN personas p ON p.idUsuario=u.idUsuario<{{{><}}}>        LEFT JOIN tipos_contratos tc ON tc.idTipoContrato=c.idTipoContrato<{{{><}}}>        LEFT JOIN inmuebles inm ON inm.idInmueble=c.idInmueble   where p.idPersona=1  GROUP BY c.idContrato ORDER BY idContrato DESC  LIMIT 0,20
Servers\arbitraje_notarial\QueryHistory\23<|||>1<|||>2020-12-01 17:08:17|admin_arbitraje_notarial|16|SELECT <{{{><}}}>        c.idContrato,<{{{><}}}>        tc.tipoContrato,<{{{><}}}>        c.idInmueble,<{{{><}}}>        inm.direccion,<{{{><}}}>        date_format(c.fechaContrato,'%d-%m-%Y') AS fecha,<{{{><}}}>        if(c.lugarCelebracion IS NULL OR c.lugarCelebracion='','-',c.lugarCelebracion) AS Lugar,<{{{><}}}>        c.precio,<{{{><}}}>        if(finalizado=1,'Finalizado','Editable') as estado <{{{><}}}>        FROM contratos c<{{{><}}}>        LEFT JOIN usuarios u ON u.idUsuario=c.idUsuario<{{{><}}}>        LEFT JOIN personas p ON p.idUsuario=u.idUsuario<{{{><}}}>        LEFT JOIN tipos_contratos tc ON tc.idTipoContrato=c.idTipoContrato<{{{><}}}>        LEFT JOIN inmuebles inm ON inm.idInmueble=c.idInmueble   <{{{><}}}>		  where p.idPersona=1  GROUP BY c.idContrato ORDER BY idContrato DESC  LIMIT 0,20
Servers\arbitraje_notarial\QueryHistory\24<|||>1<|||>2020-12-01 17:11:33|admin_arbitraje_notarial|15|SELECT <{{{><}}}>        c.idContrato,<{{{><}}}>        tc.tipoContrato,<{{{><}}}>        c.idInmueble,<{{{><}}}>        inm.direccion,<{{{><}}}>        date_format(c.fechaContrato,'%d-%m-%Y') AS fecha,<{{{><}}}>        if(c.lugarCelebracion IS NULL OR c.lugarCelebracion='','-',c.lugarCelebracion) AS Lugar,<{{{><}}}>        c.precio,<{{{><}}}>        if(finalizado=1,'Finalizado','Editable') as estado <{{{><}}}>        FROM contratos c<{{{><}}}>        LEFT JOIN usuarios u ON u.idUsuario=c.idUsuario<{{{><}}}>        LEFT JOIN personas p ON p.idUsuario=u.idUsuario<{{{><}}}>        LEFT JOIN tipos_contratos tc ON tc.idTipoContrato=c.idTipoContrato<{{{><}}}>        LEFT JOIN inmuebles inm ON inm.idInmueble=c.idInmueble   <{{{><}}}>		   GROUP BY c.idContrato ORDER BY idContrato DESC  LIMIT 0,20
Servers\cardador_crm\SessionCreated<|||>1<|||>2021-01-20 11:31:39
Servers\cardador_crm\Host<|||>1<|||>51.75.233.121
Servers\cardador_crm\WindowsAuth<|||>3<|||>0
Servers\cardador_crm\CleartextPluginEnabled<|||>3<|||>0
Servers\cardador_crm\User<|||>1<|||>cardador
Servers\cardador_crm\Password<|||>1<|||>466475676467727535333533273
Servers\cardador_crm\LoginPrompt<|||>3<|||>0
Servers\cardador_crm\Port<|||>1<|||>3306
Servers\cardador_crm\NetType<|||>3<|||>0
Servers\cardador_crm\Compressed<|||>3<|||>0
Servers\cardador_crm\LocalTimeZone<|||>3<|||>0
Servers\cardador_crm\QueryTimeout<|||>3<|||>30
Servers\cardador_crm\KeepAlive<|||>3<|||>20
Servers\cardador_crm\FullTableStatus<|||>3<|||>1
Servers\cardador_crm\Databases<|||>1<|||>
Servers\cardador_crm\Library<|||>1<|||>libmariadb.dll
Servers\cardador_crm\Comment<|||>1<|||>
Servers\cardador_crm\StartupScriptFilename<|||>1<|||>
Servers\cardador_crm\TreeBackground<|||>3<|||>536870911
Servers\cardador_crm\SSHtunnelHost<|||>1<|||>
Servers\cardador_crm\SSHtunnelHostPort<|||>3<|||>22
Servers\cardador_crm\SSHtunnelUser<|||>1<|||>
Servers\cardador_crm\SSHtunnelPassword<|||>1<|||>2
Servers\cardador_crm\SSHtunnelTimeout<|||>3<|||>4
Servers\cardador_crm\SSHtunnelPrivateKey<|||>1<|||>
Servers\cardador_crm\SSHtunnelPort<|||>3<|||>3307
Servers\cardador_crm\SSL_Active<|||>3<|||>0
Servers\cardador_crm\SSL_Key<|||>1<|||>
Servers\cardador_crm\SSL_Cert<|||>1<|||>
Servers\cardador_crm\SSL_CA<|||>1<|||>
Servers\cardador_crm\SSL_Cipher<|||>1<|||>
Servers\cardador_crm\IgnoreDatabasePattern<|||>1<|||>
Servers\cardador_crm\ServerVersionFull<|||>1<|||>10.3.28-MariaDB - MariaDB Server
Servers\cardador_crm\ConnectCount<|||>3<|||>18
Servers\cardador_crm\ServerVersion<|||>3<|||>100328
Servers\cardador_crm\LastConnect<|||>1<|||>2021-02-24 10:54:14
Servers\cardador_crm\lastUsedDB<|||>1<|||>
Servers\cardador_crm\admin_cardador|clientes\Sort<|||>1<|||>1_idcodcli|
Servers\cardador_crm\admin_cardador|expedientes\Sort<|||>1<|||>0_estado|1_codcliotro|1_idExpediente|
Servers\cardador_crm\admin_cardador|segexp2\Sort<|||>1<|||>1_id|
Servers\cardador_crm\admin_cardador|usuarios\Sort<|||>1<|||>1_idUsuario|
Servers\cardador_crm\QueryHistory\1<|||>1<|||>2021-01-20 11:35:51|admin_cardador|47|CREATE TABLE `roles` (<{{{><}}}>	`idRoles` INT(11) NOT NULL AUTO_INCREMENT,<{{{><}}}>	`nombre` VARCHAR(30) NOT NULL DEFAULT 'Agente' COLLATE 'utf8mb4_general_ci',<{{{><}}}>	`color` VARCHAR(10) NOT NULL DEFAULT '#007bff' COLLATE 'utf8mb4_general_ci',<{{{><}}}>	PRIMARY KEY (`idRoles`) USING BTREE<{{{><}}}>)<{{{><}}}>COLLATE='utf8mb4_general_ci'<{{{><}}}>ENGINE=InnoDB<{{{><}}}>AUTO_INCREMENT=4<{{{><}}}>;
Servers\cardador_crm\QueryHistory\2<|||>1<|||>2021-01-21 16:19:52|admin_cardador|1000|DELETE FROM usuarios WHERE idUsuario=3
Servers\cardador_crm\QueryHistory\3<|||>1<|||>2021-01-25 11:11:35|admin_cardador|31|CREATE TABLE `eventos` (<{{{><}}}>	`idEvento` INT(11) NOT NULL AUTO_INCREMENT,<{{{><}}}>	`title` VARCHAR(100) NOT NULL COLLATE 'utf8mb4_general_ci',<{{{><}}}>	`start` VARCHAR(50) NOT NULL COLLATE 'utf8mb4_general_ci',<{{{><}}}>	`end` VARCHAR(50) NOT NULL COLLATE 'utf8mb4_general_ci',<{{{><}}}>	`allDay` VARCHAR(25) NOT NULL COLLATE 'utf8mb4_general_ci',<{{{><}}}>	`color` VARCHAR(25) NOT NULL COLLATE 'utf8mb4_general_ci',<{{{><}}}>	`textColor` VARCHAR(25) NOT NULL COLLATE 'utf8mb4_general_ci',<{{{><}}}>	`observaciones` VARCHAR(200) NOT NULL COLLATE 'utf8mb4_general_ci',<{{{><}}}>	`usuario` INT(11) NOT NULL COMMENT 'event creator',<{{{><}}}>	`cliente` INT(11) NOT NULL,<{{{><}}}>	`actividad` INT(11) NOT NULL,<{{{><}}}>	`proyecto` INT(11) NOT NULL,<{{{><}}}>	`canalComunicacion` INT(11) NOT NULL,<{{{><}}}>	`estado` INT(11) NOT NULL DEFAULT '0',<{{{><}}}>	PRIMARY KEY (`idEvento`) USING BTREE<{{{><}}}>	<{{{><}}}>)<{{{><}}}>COLLATE='utf8mb4_general_ci'<{{{><}}}>ENGINE=InnoDB<{{{><}}}>AUTO_INCREMENT=128<{{{><}}}>;<{{{><}}}>
Servers\cardador_crm\QueryHistory\4<|||>1<|||>2021-01-25 11:48:45|admin_cardador|31|CREATE TABLE `actividades` (<{{{><}}}>	`idActividad` INT(11) NOT NULL AUTO_INCREMENT,<{{{><}}}>	`nombreActividad` VARCHAR(200) NOT NULL COLLATE 'utf8mb4_general_ci',<{{{><}}}>	PRIMARY KEY (`idActividad`) USING BTREE<{{{><}}}>)<{{{><}}}>COLLATE='utf8mb4_general_ci'<{{{><}}}>ENGINE=InnoDB<{{{><}}}>AUTO_INCREMENT=7<{{{><}}}>;<{{{><}}}>
Servers\cardador_crm\QueryHistory\5<|||>1<|||>2021-01-25 11:51:29|admin_cardador|47|CREATE TABLE `canalcomunicaciones` (<{{{><}}}>	`idCanal` INT(11) NOT NULL AUTO_INCREMENT,<{{{><}}}>	`nombreCanal` VARCHAR(200) NOT NULL COLLATE 'utf8mb4_general_ci',<{{{><}}}>	PRIMARY KEY (`idCanal`) USING BTREE<{{{><}}}>)<{{{><}}}>COLLATE='utf8mb4_general_ci'<{{{><}}}>ENGINE=InnoDB<{{{><}}}>AUTO_INCREMENT=5<{{{><}}}>;<{{{><}}}>
Servers\cardador_crm\QueryHistory\6<|||>1<|||>2021-01-25 11:57:41|admin_cardador|32|CREATE TABLE `estados` (<{{{><}}}>	`idEstados` INT(11) NOT NULL AUTO_INCREMENT,<{{{><}}}>	`nombre` VARCHAR(100) NOT NULL COLLATE 'utf8mb4_general_ci',<{{{><}}}>	`color` VARCHAR(7) NOT NULL COLLATE 'utf8mb4_general_ci',<{{{><}}}>	`textColor` VARCHAR(7) NOT NULL COLLATE 'utf8mb4_general_ci',<{{{><}}}>	PRIMARY KEY (`idEstados`) USING BTREE<{{{><}}}>)<{{{><}}}>COLLATE='utf8mb4_general_ci'<{{{><}}}>ENGINE=InnoDB<{{{><}}}>AUTO_INCREMENT=54<{{{><}}}>;<{{{><}}}>
Servers\cardador_crm\QueryHistory\7<|||>1<|||>2021-01-25 22:16:36|admin_cardador|47|CREATE TABLE `origenes` (<{{{><}}}>	`idOrigen` INT(11) NOT NULL AUTO_INCREMENT,<{{{><}}}>	`nombre` VARCHAR(200) NOT NULL COLLATE 'utf8mb4_general_ci',<{{{><}}}>	`color` VARCHAR(7) NOT NULL COLLATE 'utf8mb4_general_ci',<{{{><}}}>	`textColor` VARCHAR(7) NOT NULL COLLATE 'utf8mb4_general_ci',<{{{><}}}>	PRIMARY KEY (`idOrigen`) USING BTREE<{{{><}}}>)<{{{><}}}>COLLATE='utf8mb4_general_ci'<{{{><}}}>ENGINE=InnoDB<{{{><}}}>AUTO_INCREMENT=11<{{{><}}}>;<{{{><}}}>
Servers\cardador_crm\QueryHistory\8<|||>1<|||>2021-01-25 22:17:24|admin_cardador|47|CREATE TABLE `correo` (<{{{><}}}>	`nombre` VARCHAR(100) NOT NULL COLLATE 'utf8mb4_general_ci',<{{{><}}}>	`email` VARCHAR(100) NOT NULL COLLATE 'utf8mb4_general_ci',<{{{><}}}>	`password` VARCHAR(100) NOT NULL COLLATE 'utf8mb4_general_ci',<{{{><}}}>	`host` VARCHAR(100) NOT NULL COLLATE 'utf8mb4_general_ci',<{{{><}}}>	`puerto` INT(11) NOT NULL DEFAULT '0',<{{{><}}}>	`retraso` INT(11) NOT NULL DEFAULT '0'<{{{><}}}>)<{{{><}}}>COLLATE='utf8mb4_general_ci'<{{{><}}}>ENGINE=InnoDB<{{{><}}}>;<{{{><}}}>
Servers\cardador_crm\QueryHistory\9<|||>1<|||>2021-01-25 23:17:13|admin_cardador|62|CREATE TABLE `archivos` (<{{{><}}}>	`idArchivo` INT(11) NOT NULL AUTO_INCREMENT,<{{{><}}}>	`fecha_creacion` DATETIME NOT NULL DEFAULT current_timestamp(),<{{{><}}}>	`nombre` VARCHAR(200) NOT NULL COLLATE 'utf8mb4_general_ci',<{{{><}}}>	`extension` VARCHAR(200) NOT NULL COLLATE 'utf8mb4_general_ci',<{{{><}}}>	`ruta` VARCHAR(300) NOT NULL COLLATE 'utf8mb4_general_ci',<{{{><}}}>	`bytes` BIGINT(20) NOT NULL DEFAULT '0',<{{{><}}}>	`publico` INT(1) NOT NULL DEFAULT '0',<{{{><}}}>	`cliente` INT(11) NOT NULL DEFAULT '1',<{{{><}}}>	`usuario` INT(11) NOT NULL DEFAULT '1',<{{{><}}}>	PRIMARY KEY (`idArchivo`) USING BTREE,<{{{><}}}>	INDEX `FK_almacenamiento_clientes` (`cliente`) USING BTREE,<{{{><}}}>	INDEX `FK_almacenamiento_usuarios` (`usuario`) USING BTREE,<{{{><}}}>	CONSTRAINT `FK_almacenamiento_clientes` FOREIGN KEY (`cliente`) REFERENCES `admin_cardador`.`clientes` (`idcodcli`) ON UPDATE NO ACTION ON DELETE NO ACTION,<{{{><}}}>	CONSTRAINT `FK_almacenamiento_usuarios` FOREIGN KEY (`usuario`) REFERENCES `admin_cardador`.`usuarios` (`idUsuario`) ON UPDATE NO ACTION ON DELETE NO ACTION<{{{><}}}>)<{{{><}}}>COLLATE='utf8mb4_general_ci'<{{{><}}}>ENGINE=InnoDB<{{{><}}}>AUTO_INCREMENT=52<{{{><}}}>;<{{{><}}}>
Servers\cardador_crm\QueryHistory\10<|||>1<|||>2021-01-27 22:08:05|admin_cardador|46|UPDATE fasesCliente SET orden="2" WHERE idFase=15
Servers\cardador_crm\QueryHistory\11<|||>1<|||>2021-01-27 22:09:11|admin_cardador|31|UPDATE fasesCliente SET orden="6" WHERE idFase=3
Servers\cardador_crm\QueryHistory\12<|||>1<|||>2021-01-27 23:02:34|admin_cardador|47|UPDATE clientes SET idFase=(SELECT idFase from fasesCliente where orden=1) WHERE idcodcli=931
Servers\cardador_crm\QueryHistory\14<|||>1<|||>2021-01-27 23:04:32|admin_cardador|78|UPDATE clientes SET idFase=(SELECT idFase from fasesCliente where orden=1) WHERE idcodcli=931;<{{{><}}}><{{{><}}}>SELECT idFase from fasesCliente where orden=1;
Servers\cardador_crm\QueryHistory\13<|||>1<|||>2021-01-29 09:24:42|admin_cardador|32|SELECT eventos.*, usuarios.nombre AS nombreUsuario FROM eventos LEFT JOIN usuarios ON eventos.usuario = usuarios.idUsuario LEFT JOIN roles ON usuarios.rol = roles.idRoles WHERE roles.idRoles > 1 OR usuarios.idUsuario = 1
Servers\cardador_crm\QueryHistory\15<|||>1<|||>2021-01-29 09:26:02|admin_cardador|31|SELECT eventos.*, usuarios.nombre AS nombreUsuario <{{{><}}}>FROM eventos <{{{><}}}>LEFT JOIN usuarios ON eventos.usuario = usuarios.idUsuario <{{{><}}}>LEFT JOIN roles ON usuarios.rol = roles.idRoles WHERE roles.idRoles > 1 OR usuarios.idUsuario = 1
Servers\cardador_crm\QueryHistory\16<|||>1<|||>2021-01-29 09:38:36|admin_cardador|46|CREATE TABLE `eventosusuarios` (<{{{><}}}>	`id` INT(11) NOT NULL AUTO_INCREMENT,<{{{><}}}>	`idEvento` INT(11) NOT NULL,<{{{><}}}>	`idUsuario` INT(11) NOT NULL,<{{{><}}}>	PRIMARY KEY (`id`) USING BTREE,<{{{><}}}>	INDEX `idEvento` (`idEvento`) USING BTREE,<{{{><}}}>	INDEX `idUsuario` (`idUsuario`) USING BTREE,<{{{><}}}>	CONSTRAINT `FK_eventosusuarios_eventos` FOREIGN KEY (`idEvento`) REFERENCES `admin_cardador`.`eventos` (`idEvento`) ON UPDATE NO ACTION ON DELETE NO ACTION,<{{{><}}}>	CONSTRAINT `FK_eventosusuarios_usuarios` FOREIGN KEY (`idUsuario`) REFERENCES `admin_cardador`.`usuarios` (`idUsuario`) ON UPDATE NO ACTION ON DELETE NO ACTION<{{{><}}}>)<{{{><}}}>COMMENT='Un evento puede tener multiples usuarios'<{{{><}}}>COLLATE='utf8mb4_general_ci'<{{{><}}}>ENGINE=InnoDB<{{{><}}}>AUTO_INCREMENT=1<{{{><}}}>;<{{{><}}}>
Servers\cardador_crm\QueryHistory\17<|||>1<|||>2021-01-29 14:53:54|admin_cardador|47|CREATE TABLE `fasesClientePotencial` (<{{{><}}}>	`idFase` INT(11) NOT NULL AUTO_INCREMENT,<{{{><}}}>	`descripcion` VARCHAR(200) NOT NULL COLLATE 'utf8_general_ci',<{{{><}}}>	`orden` INT(11) NULL DEFAULT NULL,<{{{><}}}>	`color` VARCHAR(50) NULL DEFAULT '#ACFFFC' COLLATE 'utf8_general_ci',<{{{><}}}>	PRIMARY KEY (`idFase`) USING BTREE<{{{><}}}>)<{{{><}}}>COLLATE='utf8_general_ci'<{{{><}}}>ENGINE=InnoDB<{{{><}}}>AUTO_INCREMENT=25<{{{><}}}>;<{{{><}}}>
Servers\cardador_crm\QueryHistory\18<|||>1<|||>2021-01-30 12:55:51|admin_cardador|407|SELECT idcodcli,snombrecli,stelefonocli,<{{{><}}}>        (SELECT count(idExpediente) FROM expedientes where expedientes.codcliente=c.idcodcli) as numExpedientes,<{{{><}}}>        (SELECT count(idcontacto) FROM contactoscliente where contactoscliente.idcliente=c.idcodcli) as numContactos, <{{{><}}}>        (SELECT count(idArchivo) FROM archivos where cliente=c.idcodcli) as numDocumentos,<{{{><}}}>        (SELECT count(idEvento) FROM eventos where cliente=c.idcodcli) as numActividades <{{{><}}}>        FROM clientes c<{{{><}}}>        where clipoten=0 and c.idFase=1 <{{{><}}}>         and (SELECT count(idExpediente) FROM expedientes where expedientes.codcliente=c.idcodcli)>0 Group by c.idcodcli<{{{><}}}>
Servers\cardador_crm\QueryHistory\19<|||>1<|||>2021-02-01 11:56:41|admin_cardador|94|UPDATE clientes SET idFase=0 WHERE clipoten=0
Servers\cardador_crm\QueryHistory\20<|||>1<|||>2021-02-01 16:46:45|admin_cardador|3625|UPDATE segexp2 SET idExpediente=(SELECT idExpediente FROM expedientes WHERE expedientes.inumexp=segexp2.inumexp AND expedientes.iyear=segexp2.iyear LIMIT 1)
Servers\cardador_crm\QueryHistory\21<|||>1<|||>2021-02-01 16:49:23|admin_cardador|422|UPDATE segexp2 SET icodcli=(SELECT codcliente FROM expedientes WHERE expedientes.idExpediente=segexp2.idExpediente LIMIT 1)
Servers\cardador_crm\QueryHistory\22<|||>1<|||>2021-02-10 09:15:42|admin_cardador|47|SELECT <{{{><}}}>                                eventos.*,<{{{><}}}>                                usuarios.nombre  AS nombreUsuario<{{{><}}}>                            FROM eventos <{{{><}}}>                                LEFT JOIN usuarios ON eventos.usuario = usuarios.idUsuario<{{{><}}}>                                LEFT JOIN roles ON usuarios.rol = roles.idRoles<{{{><}}}>                            WHERE  usuarios.idUsuario in (select idUsuario From eventosusuarios where idUsuario=10)
Servers\cardador_crm\QueryHistory\23<|||>1<|||>2021-02-10 09:16:07|admin_cardador|63|(select idUsuario From eventosusuarios where idUsuario=10)
Servers\cardador_crm\QueryHistory\24<|||>1<|||>2021-02-10 09:16:43|admin_cardador|47|SELECT <{{{><}}}>                                eventos.*,<{{{><}}}>                                usuarios.nombre  AS nombreUsuario<{{{><}}}>                            FROM eventos <{{{><}}}>                                LEFT JOIN usuarios ON eventos.usuario = usuarios.idUsuario<{{{><}}}>                                LEFT JOIN roles ON usuarios.rol = roles.idRoles<{{{><}}}>                            WHERE  eventos.idEvento in (select idEvento From eventosusuarios where idUsuario=10)
Servers\eaficonta\SessionCreated<|||>1<|||>2020-08-11 08:33:01
Servers\eaficonta\Host<|||>1<|||>eaficonta.com
Servers\eaficonta\WindowsAuth<|||>3<|||>0
Servers\eaficonta\CleartextPluginEnabled<|||>3<|||>0
Servers\eaficonta\User<|||>1<|||>pedro.silva
Servers\eaficonta\Password<|||>1<|||>537B7750735E5C5951697F7C786E7B567
Servers\eaficonta\LoginPrompt<|||>3<|||>0
Servers\eaficonta\Port<|||>1<|||>1925
Servers\eaficonta\NetType<|||>3<|||>0
Servers\eaficonta\Compressed<|||>3<|||>0
Servers\eaficonta\LocalTimeZone<|||>3<|||>0
Servers\eaficonta\QueryTimeout<|||>3<|||>30
Servers\eaficonta\KeepAlive<|||>3<|||>20
Servers\eaficonta\FullTableStatus<|||>3<|||>1
Servers\eaficonta\Databases<|||>1<|||>
Servers\eaficonta\Library<|||>1<|||>libmariadb.dll
Servers\eaficonta\Comment<|||>1<|||>
Servers\eaficonta\StartupScriptFilename<|||>1<|||>
Servers\eaficonta\TreeBackground<|||>3<|||>536870911
Servers\eaficonta\SSHtunnelHost<|||>1<|||>
Servers\eaficonta\SSHtunnelHostPort<|||>3<|||>22
Servers\eaficonta\SSHtunnelUser<|||>1<|||>
Servers\eaficonta\SSHtunnelPassword<|||>1<|||>7
Servers\eaficonta\SSHtunnelTimeout<|||>3<|||>4
Servers\eaficonta\SSHtunnelPrivateKey<|||>1<|||>
Servers\eaficonta\SSHtunnelPort<|||>3<|||>3307
Servers\eaficonta\SSL_Active<|||>3<|||>0
Servers\eaficonta\SSL_Key<|||>1<|||>
Servers\eaficonta\SSL_Cert<|||>1<|||>
Servers\eaficonta\SSL_CA<|||>1<|||>
Servers\eaficonta\SSL_Cipher<|||>1<|||>
Servers\eaficonta\ServerVersionFull<|||>1<|||>10.4.13-MariaDB - mariadb.org binary distribution
Servers\eaficonta\ConnectCount<|||>3<|||>5
Servers\eaficonta\ServerVersion<|||>3<|||>100413
Servers\eaficonta\LastConnect<|||>1<|||>2020-10-01 13:12:24
Servers\eaficonta\lastUsedDB<|||>1<|||>eaficonta
Servers\eaficonta\eaficonta|facturas_alquileres\Sort<|||>1<|||>1_idArrendatario|1_idArrendatario|0_numFacturaAlquiler|
Servers\eaficonta\QueryHistory\5<|||>1<|||>2020-10-01 13:30:25|eaficonta|219|SELECT *,b.email as mail,arrendadores.email as correoArrendador,b.nombre as nombre,concat(month(fechaFacAlquiler),"-",year(fechaFacAlquiler)) as fcha,c.nif as nifArrendador,c.direccion as dirArrendador,c.cp as cpArrendador,c.poblacion as poblArrendador,c.provincia as proArrendador,b.nif as nifArrendatario,b.direccion as dirArrendatario,b.cp as cpArrendatario,b.poblacion as poblArrendatario,b.provincia as proArrendatario,r.email as correoResponsable,b.email as correoArrendatario FROM facturas_alquileres<{{{><}}}>left join arrendadores on arrendadores.id=facturas_alquileres.idArrendador<{{{><}}}>left join arrendatarios b on b.id=arrendadores.arrendatarioid<{{{><}}}>left join clientes c on c.id=arrendadores.clienteid<{{{><}}}>left join responsables r on r.id=arrendadores.responsableid<{{{><}}}>where idFacturaAlquiler=199
Servers\eaficonta\QueryHistory\1<|||>1<|||>2020-10-01 13:30:37|eaficonta|78|SELECT *,b.email as mail,arrendadores.email as correoArrendador,b.nombre as nombre,concat(month(fechaFacAlquiler),"-",year(fechaFacAlquiler)) as fcha,c.nif as nifArrendador,c.direccion as dirArrendador,c.cp as cpArrendador,c.poblacion as poblArrendador,c.provincia as proArrendador,b.nif as nifArrendatario,b.direccion as dirArrendatario,b.cp as cpArrendatario,b.poblacion as poblArrendatario,b.provincia as proArrendatario,r.email as correoResponsable,b.email as correoArrendatario FROM facturas_alquileres<{{{><}}}>left join arrendadores on arrendadores.id=facturas_alquileres.idArrendador<{{{><}}}>left join arrendatarios b on b.id=arrendadores.arrendatarioid<{{{><}}}>left join clientes c on c.id=arrendadores.clienteid<{{{><}}}>left join responsables r on r.id=arrendadores.responsableid<{{{><}}}>where idFacturaAlquiler=182<{{{><}}}>
Servers\eaficonta\QueryHistory\2<|||>1<|||>2020-10-01 13:30:43|eaficonta|78|SELECT *,b.email as mail,arrendadores.email as correoArrendador,b.nombre as nombre,concat(month(fechaFacAlquiler),"-",year(fechaFacAlquiler)) as fcha,c.nif as nifArrendador,c.direccion as dirArrendador,c.cp as cpArrendador,c.poblacion as poblArrendador,c.provincia as proArrendador,b.nif as nifArrendatario,b.direccion as dirArrendatario,b.cp as cpArrendatario,b.poblacion as poblArrendatario,b.provincia as proArrendatario,r.email as correoResponsable,b.email as correoArrendatario FROM facturas_alquileres<{{{><}}}>left join arrendadores on arrendadores.id=facturas_alquileres.idArrendador<{{{><}}}>left join arrendatarios b on b.id=arrendadores.arrendatarioid<{{{><}}}>left join clientes c on c.id=arrendadores.clienteid<{{{><}}}>left join responsables r on r.id=arrendadores.responsableid<{{{><}}}>where idFacturaAlquiler=181<{{{><}}}>
Servers\fs_innobed\SessionCreated<|||>1<|||>2020-07-23 09:15:37
Servers\fs_innobed\Host<|||>1<|||>dataleanmakers.net
Servers\fs_innobed\WindowsAuth<|||>3<|||>0
Servers\fs_innobed\CleartextPluginEnabled<|||>3<|||>0
Servers\fs_innobed\User<|||>1<|||>admin_fs_innobed
Servers\fs_innobed\Password<|||>1<|||>686B747075666D7A6670757576696C6B393738402B7
Servers\fs_innobed\LoginPrompt<|||>3<|||>0
Servers\fs_innobed\Port<|||>1<|||>3306
Servers\fs_innobed\NetType<|||>3<|||>0
Servers\fs_innobed\Compressed<|||>3<|||>0
Servers\fs_innobed\LocalTimeZone<|||>3<|||>0
Servers\fs_innobed\QueryTimeout<|||>3<|||>30
Servers\fs_innobed\KeepAlive<|||>3<|||>20
Servers\fs_innobed\FullTableStatus<|||>3<|||>1
Servers\fs_innobed\Databases<|||>1<|||>
Servers\fs_innobed\Library<|||>1<|||>libmariadb.dll
Servers\fs_innobed\Comment<|||>1<|||>
Servers\fs_innobed\StartupScriptFilename<|||>1<|||>
Servers\fs_innobed\TreeBackground<|||>3<|||>536870911
Servers\fs_innobed\SSHtunnelHost<|||>1<|||>
Servers\fs_innobed\SSHtunnelHostPort<|||>3<|||>22
Servers\fs_innobed\SSHtunnelUser<|||>1<|||>
Servers\fs_innobed\SSHtunnelPassword<|||>1<|||>4
Servers\fs_innobed\SSHtunnelTimeout<|||>3<|||>4
Servers\fs_innobed\SSHtunnelPrivateKey<|||>1<|||>
Servers\fs_innobed\SSHtunnelPort<|||>3<|||>3307
Servers\fs_innobed\SSL_Active<|||>3<|||>0
Servers\fs_innobed\SSL_Key<|||>1<|||>
Servers\fs_innobed\SSL_Cert<|||>1<|||>
Servers\fs_innobed\SSL_CA<|||>1<|||>
Servers\fs_innobed\SSL_Cipher<|||>1<|||>
Servers\fs_innobed\ServerVersionFull<|||>1<|||>10.1.26-MariaDB-0+deb9u1 - Debian 9.1
Servers\fs_innobed\ConnectCount<|||>3<|||>11
Servers\fs_innobed\ServerVersion<|||>3<|||>100126
Servers\fs_innobed\LastConnect<|||>1<|||>2020-09-10 15:20:35
Servers\fs_innobed\lastUsedDB<|||>1<|||>admin_fs_innobed
Servers\fs_innobed\admin_fs_innobed|clientes\Filter<|||>1<|||>`cifnif` LIKE '%43166%' OR `codagente` LIKE '%43166%' OR `codcliente` LIKE '%43166%' OR `codgrupo` LIKE '%43166%' OR `codpago` LIKE '%43166%' OR `codproveedor` LIKE '%43166%'<{{{><}}}> OR `codretencion` LIKE '%43166%' OR `codserie` LIKE '%43166%' OR `codsubcuenta` LIKE '%43166%' OR `codtarifa` LIKE '%43166%' OR `debaja` LIKE '%43166%'<{{{><}}}> OR `diaspago` LIKE '%43166%' OR `email` LIKE '%43166%' OR `fax` LIKE '%43166%' OR CAST(`fechabaja` AS CHAR) LIKE '%43166%' OR CAST(`fechaalta` AS CHAR) LIKE '%43166%'<{{{><}}}> OR `idcontactofact` LIKE '%43166%' OR `idcontactoenv` LIKE '%43166%' OR `nombre` LIKE '%43166%' OR `observaciones` LIKE '%43166%' OR `personafisica` LIKE '%43166%'<{{{><}}}> OR `razonsocial` LIKE '%43166%' OR `regimeniva` LIKE '%43166%' OR `riesgoalcanzado` LIKE '%43166%' OR `riesgomax` LIKE '%43166%' OR `telefono1` LIKE '%43166%'<{{{><}}}> OR `telefono2` LIKE '%43166%' OR `tipoidfiscal` LIKE '%43166%' OR `web` LIKE '%43166%' OR `direccioncliente` LIKE '%43166%' OR `poblacioncliente` LIKE '%43166%'<{{{><}}}> OR `provinciacliente` LIKE '%43166%' OR `personacontacto` LIKE '%43166%' OR `age` LIKE '%43166%' OR `cpcliente` LIKE '%43166%' OR `banco` LIKE '%43166%'<{{{><}}}> OR `entidad` LIKE '%43166%' OR `oficina` LIKE '%43166%' OR `dco` LIKE '%43166%' OR `cuenta` LIKE '%43166%' OR `fpa` LIKE '%43166%' OR `swfcliente` LIKE '%43166%'<{{{><}}}> OR `swicliente` LIKE '%43166%' OR `infocontacto` LIKE '%43166%'<{{{><}}}>
Servers\fs_innobed\admin_fs_innobed|clientes\RecentFilters\1<|||>1<|||>`cifnif` LIKE '%43166%' OR `codagente` LIKE '%43166%' OR `codcliente` LIKE '%43166%' OR `codgrupo` LIKE '%43166%' OR `codpago` LIKE '%43166%' OR `codproveedor` LIKE '%43166%'<{{{><}}}> OR `codretencion` LIKE '%43166%' OR `codserie` LIKE '%43166%' OR `codsubcuenta` LIKE '%43166%' OR `codtarifa` LIKE '%43166%' OR `debaja` LIKE '%43166%'<{{{><}}}> OR `diaspago` LIKE '%43166%' OR `email` LIKE '%43166%' OR `fax` LIKE '%43166%' OR CAST(`fechabaja` AS CHAR) LIKE '%43166%' OR CAST(`fechaalta` AS CHAR) LIKE '%43166%'<{{{><}}}> OR `idcontactofact` LIKE '%43166%' OR `idcontactoenv` LIKE '%43166%' OR `nombre` LIKE '%43166%' OR `observaciones` LIKE '%43166%' OR `personafisica` LIKE '%43166%'<{{{><}}}> OR `razonsocial` LIKE '%43166%' OR `regimeniva` LIKE '%43166%' OR `riesgoalcanzado` LIKE '%43166%' OR `riesgomax` LIKE '%43166%' OR `telefono1` LIKE '%43166%'<{{{><}}}> OR `telefono2` LIKE '%43166%' OR `tipoidfiscal` LIKE '%43166%' OR `web` LIKE '%43166%' OR `direccioncliente` LIKE '%43166%' OR `poblacioncliente` LIKE '%43166%'<{{{><}}}> OR `provinciacliente` LIKE '%43166%' OR `personacontacto` LIKE '%43166%' OR `age` LIKE '%43166%' OR `cpcliente` LIKE '%43166%' OR `banco` LIKE '%43166%'<{{{><}}}> OR `entidad` LIKE '%43166%' OR `oficina` LIKE '%43166%' OR `dco` LIKE '%43166%' OR `cuenta` LIKE '%43166%' OR `fpa` LIKE '%43166%' OR `swfcliente` LIKE '%43166%'<{{{><}}}> OR `swicliente` LIKE '%43166%' OR `infocontacto` LIKE '%43166%'
Servers\fs_innobed\admin_fs_innobed|contactos\RecentFilters\1<|||>1<|||>`aceptaprivacidad` LIKE '%43166%' OR `admitemarketing` LIKE '%43166%' OR `apellidos` LIKE '%43166%' OR `apartado` LIKE '%43166%' OR `cargo` LIKE '%43166%'<{{{><}}}> OR `cifnif` LIKE '%43166%' OR `ciudad` LIKE '%43166%' OR `codagente` LIKE '%43166%' OR `codcliente` LIKE '%43166%' OR `codpais` LIKE '%43166%' OR `codpostal` LIKE '%43166%'<{{{><}}}> OR `codproveedor` LIKE '%43166%' OR `descripcion` LIKE '%43166%' OR `direccion` LIKE '%43166%' OR `email` LIKE '%43166%' OR `empresa` LIKE '%43166%'<{{{><}}}> OR CAST(`fechaalta` AS CHAR) LIKE '%43166%' OR `habilitado` LIKE '%43166%' OR `idcontacto` LIKE '%43166%' OR CAST(`lastactivity` AS CHAR) LIKE '%43166%'<{{{><}}}> OR `lastip` LIKE '%43166%' OR `level` LIKE '%43166%' OR `logkey` LIKE '%43166%' OR `nombre` LIKE '%43166%' OR `observaciones` LIKE '%43166%' OR `password` LIKE '%43166%'<{{{><}}}> OR `personafisica` LIKE '%43166%' OR `provincia` LIKE '%43166%' OR `puntos` LIKE '%43166%' OR `telefono1` LIKE '%43166%' OR `telefono2` LIKE '%43166%'<{{{><}}}> OR `tipoidfiscal` LIKE '%43166%' OR `verificado` LIKE '%43166%' OR `poblacion` LIKE '%43166%' OR `cp` LIKE '%43166%' OR `personacontacto` LIKE '%43166%'
Servers\fs_innobed\admin_fs_innobed|lineaspedidoscli\Sort<|||>1<|||>1_ffabricacion|
Servers\fs_innobed\QueryHistory\44<|||>1<|||>2020-08-21 13:56:33|admin_fs_innobed|828|SELECT * FROM<{{{><}}}>familias<{{{><}}}>LEFT JOIN lineasproduccion ON familias.idlinea=lineasproduccion.idlinea<{{{><}}}>LEFT JOIN productos ON productos.codfamilia=familias.codfamilia<{{{><}}}>LEFT JOIN lineaspedidoscli ON lineaspedidoscli.idproducto=productos.idproducto<{{{><}}}>LEFT JOIN pedidoscli ON pedidoscli.idpedido=lineaspedidoscli.idpedido
Servers\fs_innobed\QueryHistory\45<|||>1<|||>2020-08-24 10:26:44|admin_fs_innobed|1610|SELECT * FROM<{{{><}}}>familias<{{{><}}}>LEFT JOIN lineasproduccion ON familias.idlinea=lineasproduccion.idlinea<{{{><}}}>LEFT JOIN productos ON productos.codfamilia=familias.codfamilia<{{{><}}}>LEFT JOIN lineaspedidoscli ON lineaspedidoscli.idproducto=productos.idproducto<{{{><}}}>LEFT JOIN pedidoscli ON pedidoscli.idpedido=lineaspedidoscli.idpedido<{{{><}}}>LEFT JOIN clientes ON clientes.codcliente=pedidoscli.codcliente and clientes.enproduccion=1
Servers\fs_innobed\QueryHistory\1<|||>1<|||>2020-08-24 10:34:53|admin_fs_innobed|500|SELECT * FROM<{{{><}}}>familias<{{{><}}}>LEFT JOIN lineasproduccion ON familias.idlinea=lineasproduccion.idlinea<{{{><}}}>LEFT JOIN productos ON productos.codfamilia=familias.codfamilia<{{{><}}}>LEFT JOIN lineaspedidoscli ON lineaspedidoscli.idproducto=productos.idproducto<{{{><}}}>LEFT JOIN pedidoscli ON pedidoscli.idpedido=lineaspedidoscli.idpedido<{{{><}}}>LEFT JOIN clientes ON clientes.codcliente=pedidoscli.codcliente 
Servers\fs_innobed\QueryHistory\2<|||>1<|||>2020-09-02 13:07:23|admin_fs_innobed|156|SELECT * FROM lineaspedidoscli <{{{><}}}>LEFT JOIN pedidoscli ON pedidoscli.idpedido=lineaspedidoscli.idpedido<{{{><}}}>
Servers\fs_innobed\QueryHistory\3<|||>1<|||>2020-09-02 13:09:46|admin_fs_innobed|172|SELECT *,SUM(lineaspedidoscli.udsfabricadas),SUM(lineaspedidoscli.cantidad) FROM lineaspedidoscli <{{{><}}}>LEFT JOIN pedidoscli ON pedidoscli.idpedido=lineaspedidoscli.idpedido<{{{><}}}>
Servers\fs_innobed\QueryHistory\4<|||>1<|||>2020-09-02 13:09:56|admin_fs_innobed|15|SELECT idlinea,SUM(lineaspedidoscli.udsfabricadas),SUM(lineaspedidoscli.cantidad) FROM lineaspedidoscli <{{{><}}}>LEFT JOIN pedidoscli ON pedidoscli.idpedido=lineaspedidoscli.idpedido<{{{><}}}>
Servers\fs_innobed\QueryHistory\5<|||>1<|||>2020-09-02 13:10:28|admin_fs_innobed|32|SELECT idlinea,SUM(lineaspedidoscli.udsfabricadas),SUM(lineaspedidoscli.cantidad) FROM lineaspedidoscli <{{{><}}}>LEFT JOIN pedidoscli ON pedidoscli.idpedido=lineaspedidoscli.idpedido<{{{><}}}>GROUP BY pedidoscli.idpedido<{{{><}}}>
Servers\fs_innobed\QueryHistory\6<|||>1<|||>2020-09-03 11:07:04|admin_fs_innobed|16|SELECT<{{{><}}}>lpc.idlinea,<{{{><}}}>lpc.idpedido,<{{{><}}}>lpc.idproducto,<{{{><}}}>lpc.cantidad,<{{{><}}}>lpc.udsfabricadas,<{{{><}}}>lpc.fentrega,<{{{><}}}>lpc.ffabricacion<{{{><}}}>FROM<{{{><}}}>lineaspedidoscli lpc
Servers\fs_innobed\QueryHistory\7<|||>1<|||>2020-09-03 12:10:58|admin_fs_innobed|31|SELECT<{{{><}}}>lpc.idlinea,<{{{><}}}>lpc.idpedido,<{{{><}}}>lpc.idproducto,<{{{><}}}>lpc.cantidad,<{{{><}}}>lpc.udsfabricadas,<{{{><}}}>lpc.fentrega,<{{{><}}}>lpc.ffabricacion,<{{{><}}}>p.codfamilia,<{{{><}}}>p.unidadeshora,<{{{><}}}>f.idlinea,<{{{><}}}>lpn.horasdedicadas<{{{><}}}>FROM<{{{><}}}>lineaspedidoscli lpc<{{{><}}}>LEFT JOIN productos p ON p.idproducto=lpc.idproducto<{{{><}}}>LEFT JOIN familias f ON f.codfamilia=p.codfamilia<{{{><}}}>LEFT JOIN lineasproduccion lpn ON lpn.idlinea=f.idlinea
Servers\fs_innobed\QueryHistory\8<|||>1<|||>2020-09-03 12:16:17|admin_fs_innobed|31|SELECT<{{{><}}}>lpc.idlinea,<{{{><}}}>lpc.idpedido,<{{{><}}}>lpc.idproducto,<{{{><}}}>lpc.cantidad,<{{{><}}}>lpc.udsfabricadas,<{{{><}}}>lpc.fentrega,<{{{><}}}>lpc.ffabricacion,<{{{><}}}>p.codfamilia,<{{{><}}}>p.unidadeshora,<{{{><}}}>f.idlinea,<{{{><}}}>lpn.horasdedicadas,<{{{><}}}>lpc.cantidad/p.unidadeshora AS tiempoNecesario<{{{><}}}>FROM<{{{><}}}>lineaspedidoscli lpc<{{{><}}}>LEFT JOIN productos p ON p.idproducto=lpc.idproducto<{{{><}}}>LEFT JOIN familias f ON f.codfamilia=p.codfamilia<{{{><}}}>LEFT JOIN lineasproduccion lpn ON lpn.idlinea=f.idlinea
Servers\fs_innobed\QueryHistory\9<|||>1<|||>2020-09-03 12:23:46|admin_fs_innobed|94|SELECT<{{{><}}}>lpc.idlinea,<{{{><}}}>lpc.idpedido,<{{{><}}}>lpc.idproducto,<{{{><}}}>lpc.cantidad,<{{{><}}}>lpc.udsfabricadas,<{{{><}}}>lpc.fentrega,<{{{><}}}>lpc.ffabricacion,<{{{><}}}>p.codfamilia,<{{{><}}}>p.unidadeshora,<{{{><}}}>f.idlinea,<{{{><}}}>lpn.horasdedicadas,<{{{><}}}>(lpc.cantidad/p.unidadeshora)*60 AS tiempoNecesario<{{{><}}}>FROM<{{{><}}}>lineaspedidoscli lpc<{{{><}}}>LEFT JOIN productos p ON p.idproducto=lpc.idproducto<{{{><}}}>LEFT JOIN familias f ON f.codfamilia=p.codfamilia<{{{><}}}>LEFT JOIN lineasproduccion lpn ON lpn.idlinea=f.idlinea
Servers\fs_innobed\QueryHistory\10<|||>1<|||>2020-09-03 12:23:58|admin_fs_innobed|15|SELECT<{{{><}}}>lpc.idlinea,<{{{><}}}>lpc.idpedido,<{{{><}}}>lpc.idproducto,<{{{><}}}>lpc.cantidad,<{{{><}}}>lpc.udsfabricadas,<{{{><}}}>lpc.fentrega,<{{{><}}}>lpc.ffabricacion,<{{{><}}}>p.codfamilia,<{{{><}}}>p.unidadeshora,<{{{><}}}>f.idlinea,<{{{><}}}>lpn.horasdedicadas,<{{{><}}}>(lpc.cantidad/p.unidadeshora)*60*60 AS tiempoNecesario<{{{><}}}>FROM<{{{><}}}>lineaspedidoscli lpc<{{{><}}}>LEFT JOIN productos p ON p.idproducto=lpc.idproducto<{{{><}}}>LEFT JOIN familias f ON f.codfamilia=p.codfamilia<{{{><}}}>LEFT JOIN lineasproduccion lpn ON lpn.idlinea=f.idlinea
Servers\fs_innobed\QueryHistory\11<|||>1<|||>2020-09-03 12:25:05|admin_fs_innobed|32|SELECT<{{{><}}}>lpc.idlinea,<{{{><}}}>lpc.idpedido,<{{{><}}}>lpc.idproducto,<{{{><}}}>lpc.cantidad,<{{{><}}}>lpc.udsfabricadas,<{{{><}}}>lpc.fentrega,<{{{><}}}>lpc.ffabricacion,<{{{><}}}>p.codfamilia,<{{{><}}}>p.unidadeshora,<{{{><}}}>f.idlinea,<{{{><}}}>lpn.horasdedicadas,<{{{><}}}>(lpn.horasdedicadas)*60*60 AS segundosdedicados,<{{{><}}}>(lpc.cantidad/p.unidadeshora)*60*60 AS tiempoNecesario<{{{><}}}>FROM<{{{><}}}>lineaspedidoscli lpc<{{{><}}}>LEFT JOIN productos p ON p.idproducto=lpc.idproducto<{{{><}}}>LEFT JOIN familias f ON f.codfamilia=p.codfamilia<{{{><}}}>LEFT JOIN lineasproduccion lpn ON lpn.idlinea=f.idlinea
Servers\fs_innobed\QueryHistory\12<|||>1<|||>2020-09-03 12:29:19|admin_fs_innobed|31|SELECT<{{{><}}}>lpc.idlinea,<{{{><}}}>lpc.idpedido,<{{{><}}}>lpc.idproducto,<{{{><}}}>lpc.cantidad,<{{{><}}}>lpc.udsfabricadas,<{{{><}}}>lpc.fentrega,<{{{><}}}>lpc.ffabricacion,<{{{><}}}>p.codfamilia,<{{{><}}}>p.unidadeshora,<{{{><}}}>f.idlinea,<{{{><}}}>lpn.horasdedicadas,<{{{><}}}>(lpn.horasdedicadas)*60*60 AS segundosdedicados,<{{{><}}}>(lpc.cantidad/p.unidadeshora)*60*60 AS tiempoNecesario<{{{><}}}>FROM<{{{><}}}>lineaspedidoscli lpc<{{{><}}}>LEFT JOIN productos p ON p.idproducto=lpc.idproducto<{{{><}}}>LEFT JOIN familias f ON f.codfamilia=p.codfamilia<{{{><}}}>LEFT JOIN lineasproduccion lpn ON lpn.idlinea=f.idlinea<{{{><}}}>WHERE <{{{><}}}>lpc.idproducto IS NOT null
Servers\fs_innobed\QueryHistory\13<|||>1<|||>2020-09-03 12:30:56|admin_fs_innobed|16|SELECT<{{{><}}}>lpc.idlinea,<{{{><}}}>lpc.idpedido,<{{{><}}}>lpc.idproducto,<{{{><}}}>lpc.cantidad,<{{{><}}}>lpc.udsfabricadas,<{{{><}}}>lpc.fentrega,<{{{><}}}>lpc.ffabricacion,<{{{><}}}>p.codfamilia,<{{{><}}}>p.unidadeshora,<{{{><}}}>f.idlinea,<{{{><}}}>lpn.horasdedicadas,<{{{><}}}>lpc.cantidad-ifnull(lpc.udsfabricadas,0) AS pendientes,<{{{><}}}>(lpn.horasdedicadas)*60*60 AS segundosdedicados,<{{{><}}}>(lpc.cantidad/p.unidadeshora)*60*60 AS tiempoNecesario<{{{><}}}>FROM<{{{><}}}>lineaspedidoscli lpc<{{{><}}}>LEFT JOIN productos p ON p.idproducto=lpc.idproducto<{{{><}}}>LEFT JOIN familias f ON f.codfamilia=p.codfamilia<{{{><}}}>LEFT JOIN lineasproduccion lpn ON lpn.idlinea=f.idlinea<{{{><}}}>WHERE <{{{><}}}>lpc.idproducto IS NOT null
Servers\fs_innobed\QueryHistory\14<|||>1<|||>2020-09-03 12:37:26|admin_fs_innobed|15|SELECT<{{{><}}}>lpc.idlinea,<{{{><}}}>lpc.idpedido,<{{{><}}}>lpc.idproducto,<{{{><}}}>lpc.cantidad,<{{{><}}}>lpc.udsfabricadas,<{{{><}}}>lpc.fentrega,<{{{><}}}>lpc.ffabricacion,<{{{><}}}>p.codfamilia,<{{{><}}}>p.unidadeshora,<{{{><}}}>f.idlinea,<{{{><}}}>lpn.horasdedicadas,<{{{><}}}>lpc.cantidad-ifnull(lpc.udsfabricadas,0) AS pendientes,<{{{><}}}>(lpn.horasdedicadas)*60*60 AS segundosdedicados,<{{{><}}}>(lpc.cantidad/p.unidadeshora)*60*60 AS tiempoNecesario<{{{><}}}>FROM<{{{><}}}>lineaspedidoscli lpc<{{{><}}}>LEFT JOIN productos p ON p.idproducto=lpc.idproducto<{{{><}}}>LEFT JOIN familias f ON f.codfamilia=p.codfamilia<{{{><}}}>LEFT JOIN lineasproduccion lpn ON lpn.idlinea=f.idlinea<{{{><}}}>WHERE <{{{><}}}>lpc.idproducto IS NOT NULL<{{{><}}}>HAVING pendientes>0
Servers\fs_innobed\QueryHistory\15<|||>1<|||>2020-09-03 19:28:28|admin_fs_innobed|16|SELECT<{{{><}}}>MIN(pc.fecha) AS fechaPedido,<{{{><}}}>lpc.cantidad-ifnull(lpc.udsfabricadas,0) AS pendientes<{{{><}}}>FROM<{{{><}}}>lineaspedidoscli lpc<{{{><}}}>LEFT JOIN pedidoscli pc ON pc.idpedido=lpc.idpedido<{{{><}}}>LEFT JOIN productos p ON p.idproducto=lpc.idproducto<{{{><}}}>LEFT JOIN familias f ON f.codfamilia=p.codfamilia<{{{><}}}>LEFT JOIN lineasproduccion lpn ON lpn.idlinea=f.idlinea<{{{><}}}>WHERE <{{{><}}}>lpc.idproducto IS NOT NULL<{{{><}}}>GROUP BY f.idlinea<{{{><}}}>HAVING pendientes>0<{{{><}}}>
Servers\fs_innobed\QueryHistory\16<|||>1<|||>2020-09-03 19:29:09|admin_fs_innobed|31|SELECT<{{{><}}}>MIN(pc.fecha) AS fechaPedido,<{{{><}}}>lpc.cantidad-ifnull(lpc.udsfabricadas,0) AS pendientes<{{{><}}}>FROM<{{{><}}}>lineaspedidoscli lpc<{{{><}}}>LEFT JOIN pedidoscli pc ON pc.idpedido=lpc.idpedido<{{{><}}}>LEFT JOIN productos p ON p.idproducto=lpc.idproducto<{{{><}}}>LEFT JOIN familias f ON f.codfamilia=p.codfamilia<{{{><}}}>LEFT JOIN lineasproduccion lpn ON lpn.idlinea=f.idlinea<{{{><}}}>WHERE <{{{><}}}>lpc.idproducto IS NOT NULL<{{{><}}}>GROUP BY f.idlinea<{{{><}}}>HAVING pendientes>0<{{{><}}}><{{{><}}}>
Servers\fs_innobed\QueryHistory\17<|||>1<|||>2020-09-03 19:30:19|admin_fs_innobed|15|SELECT<{{{><}}}>MIN(pc.fecha) AS fechaPedido,<{{{><}}}>lpc.cantidad-ifnull(lpc.udsfabricadas,0) AS pendientes<{{{><}}}>FROM<{{{><}}}>pedidoscli pc<{{{><}}}>LEFT JOIN lineaspedidoscli lpc ON pc.idpedido=lpc.idpedido<{{{><}}}>LEFT JOIN productos p ON p.idproducto=lpc.idproducto<{{{><}}}>LEFT JOIN familias f ON f.codfamilia=p.codfamilia<{{{><}}}>LEFT JOIN lineasproduccion lpn ON lpn.idlinea=f.idlinea<{{{><}}}>WHERE <{{{><}}}>lpc.idproducto IS NOT NULL<{{{><}}}>GROUP BY f.idlinea<{{{><}}}>HAVING pendientes>0<{{{><}}}><{{{><}}}>
Servers\fs_innobed\QueryHistory\18<|||>1<|||>2020-09-03 19:30:39|admin_fs_innobed|16|SELECT<{{{><}}}>MIN(pc.fecha) AS fechaPedido,<{{{><}}}>lpc.cantidad-ifnull(lpc.udsfabricadas,0) AS pendientes<{{{><}}}>FROM<{{{><}}}>pedidoscli pc<{{{><}}}>LEFT JOIN lineaspedidoscli lpc ON pc.idpedido=lpc.idpedido<{{{><}}}>LEFT JOIN productos p ON p.idproducto=lpc.idproducto<{{{><}}}>LEFT JOIN familias f ON f.codfamilia=p.codfamilia<{{{><}}}>LEFT JOIN lineasproduccion lpn ON lpn.idlinea=f.idlinea<{{{><}}}>WHERE <{{{><}}}>lpc.idproducto IS NOT NULL<{{{><}}}><{{{><}}}><{{{><}}}>
Servers\fs_innobed\QueryHistory\19<|||>1<|||>2020-09-03 19:31:17|admin_fs_innobed|15|SELECT<{{{><}}}>MIN(pc.fecha) AS fechaPedido,<{{{><}}}>lpc.cantidad-ifnull(lpc.udsfabricadas,0) AS pendientes<{{{><}}}>FROM<{{{><}}}>pedidoscli pc<{{{><}}}>LEFT JOIN lineaspedidoscli lpc ON pc.idpedido=lpc.idpedido<{{{><}}}>LEFT JOIN productos p ON p.idproducto=lpc.idproducto<{{{><}}}>LEFT JOIN familias f ON f.codfamilia=p.codfamilia<{{{><}}}>LEFT JOIN lineasproduccion lpn ON lpn.idlinea=f.idlinea<{{{><}}}>WHERE <{{{><}}}>lpc.idproducto IS NOT NULL<{{{><}}}>GROUP BY f.idlinea,lpc.idpedido<{{{><}}}>HAVING pendientes>0<{{{><}}}><{{{><}}}>
Servers\fs_innobed\QueryHistory\20<|||>1<|||>2020-09-03 19:31:47|admin_fs_innobed|16|SELECT<{{{><}}}>f.idlinea AS lineaProduccion,<{{{><}}}>MIN(pc.fecha) AS fechaPedido,<{{{><}}}>lpc.cantidad-ifnull(lpc.udsfabricadas,0) AS pendientes<{{{><}}}>FROM<{{{><}}}>pedidoscli pc<{{{><}}}>LEFT JOIN lineaspedidoscli lpc ON pc.idpedido=lpc.idpedido<{{{><}}}>LEFT JOIN productos p ON p.idproducto=lpc.idproducto<{{{><}}}>LEFT JOIN familias f ON f.codfamilia=p.codfamilia<{{{><}}}>LEFT JOIN lineasproduccion lpn ON lpn.idlinea=f.idlinea<{{{><}}}>WHERE <{{{><}}}>lpc.idproducto IS NOT NULL<{{{><}}}>GROUP BY f.idlinea,lpc.idpedido<{{{><}}}>HAVING pendientes>0<{{{><}}}><{{{><}}}>
Servers\fs_innobed\QueryHistory\21<|||>1<|||>2020-09-03 19:32:18|admin_fs_innobed|16|SELECT<{{{><}}}>f.idlinea AS lineaProduccion,<{{{><}}}>MIN(pc.fecha) AS fechaPedido,<{{{><}}}>lpc.cantidad-ifnull(lpc.udsfabricadas,0) AS pendientes<{{{><}}}>FROM<{{{><}}}>pedidoscli pc<{{{><}}}>LEFT JOIN lineaspedidoscli lpc ON pc.idpedido=lpc.idpedido<{{{><}}}>LEFT JOIN productos p ON p.idproducto=lpc.idproducto<{{{><}}}>LEFT JOIN familias f ON f.codfamilia=p.codfamilia<{{{><}}}>LEFT JOIN lineasproduccion lpn ON lpn.idlinea=f.idlinea<{{{><}}}>WHERE <{{{><}}}>lpc.idproducto IS NOT NULL<{{{><}}}>GROUP BY f.idlinea,lpc.idpedido,pc.fecha<{{{><}}}>HAVING pendientes>0<{{{><}}}><{{{><}}}>
Servers\fs_innobed\QueryHistory\22<|||>1<|||>2020-09-03 19:32:30|admin_fs_innobed|31|SELECT<{{{><}}}>f.idlinea AS lineaProduccion,<{{{><}}}>MIN(pc.fecha) AS fechaPedido,<{{{><}}}>lpc.cantidad-ifnull(lpc.udsfabricadas,0) AS pendientes<{{{><}}}>FROM<{{{><}}}>pedidoscli pc<{{{><}}}>LEFT JOIN lineaspedidoscli lpc ON pc.idpedido=lpc.idpedido<{{{><}}}>LEFT JOIN productos p ON p.idproducto=lpc.idproducto<{{{><}}}>LEFT JOIN familias f ON f.codfamilia=p.codfamilia<{{{><}}}>LEFT JOIN lineasproduccion lpn ON lpn.idlinea=f.idlinea<{{{><}}}>WHERE <{{{><}}}>lpc.idproducto IS NOT NULL<{{{><}}}>GROUP BY f.idlinea,pc.fecha<{{{><}}}>HAVING pendientes>0<{{{><}}}><{{{><}}}>
Servers\fs_innobed\QueryHistory\23<|||>1<|||>2020-09-03 19:32:43|admin_fs_innobed|31|SELECT<{{{><}}}>f.idlinea AS lineaProduccion,<{{{><}}}>MIN(pc.fecha) AS fechaPedido,<{{{><}}}>lpc.cantidad-ifnull(lpc.udsfabricadas,0) AS pendientes<{{{><}}}>FROM<{{{><}}}>pedidoscli pc<{{{><}}}>LEFT JOIN lineaspedidoscli lpc ON pc.idpedido=lpc.idpedido<{{{><}}}>LEFT JOIN productos p ON p.idproducto=lpc.idproducto<{{{><}}}>LEFT JOIN familias f ON f.codfamilia=p.codfamilia<{{{><}}}>LEFT JOIN lineasproduccion lpn ON lpn.idlinea=f.idlinea<{{{><}}}>WHERE <{{{><}}}>lpc.idproducto IS NOT NULL<{{{><}}}>GROUP BY pc.fecha<{{{><}}}>HAVING pendientes>0<{{{><}}}><{{{><}}}>
Servers\fs_innobed\QueryHistory\25<|||>1<|||>2020-09-03 19:33:16|admin_fs_innobed|16|SELECT<{{{><}}}>f.idlinea AS lineaProduccion,<{{{><}}}>MIN(pc.fecha) AS fechaPedido,<{{{><}}}>lpc.cantidad-ifnull(lpc.udsfabricadas,0) AS pendientes<{{{><}}}>FROM<{{{><}}}>pedidoscli pc<{{{><}}}>LEFT JOIN lineaspedidoscli lpc ON pc.idpedido=lpc.idpedido<{{{><}}}>LEFT JOIN productos p ON p.idproducto=lpc.idproducto<{{{><}}}>LEFT JOIN familias f ON f.codfamilia=p.codfamilia<{{{><}}}>LEFT JOIN lineasproduccion lpn ON lpn.idlinea=f.idlinea<{{{><}}}>WHERE <{{{><}}}>lpc.idproducto IS NOT NULL<{{{><}}}>GROUP BY f.idlinea,pc.idpedido<{{{><}}}>HAVING pendientes>0<{{{><}}}><{{{><}}}>
Servers\fs_innobed\QueryHistory\26<|||>1<|||>2020-09-03 19:34:29|admin_fs_innobed|16|SELECT<{{{><}}}>pc.idpedido,<{{{><}}}>f.idlinea AS lineaProduccion,<{{{><}}}>MIN(pc.fecha) AS fechaPedido,<{{{><}}}>lpc.cantidad-ifnull(lpc.udsfabricadas,0) AS pendientes<{{{><}}}>FROM<{{{><}}}>pedidoscli pc<{{{><}}}>LEFT JOIN lineaspedidoscli lpc ON pc.idpedido=lpc.idpedido<{{{><}}}>LEFT JOIN productos p ON p.idproducto=lpc.idproducto<{{{><}}}>LEFT JOIN familias f ON f.codfamilia=p.codfamilia<{{{><}}}>LEFT JOIN lineasproduccion lpn ON lpn.idlinea=f.idlinea<{{{><}}}>WHERE <{{{><}}}>lpc.idproducto IS NOT NULL<{{{><}}}>GROUP BY f.idlinea,pc.idpedido<{{{><}}}>HAVING pendientes>0<{{{><}}}><{{{><}}}>
Servers\fs_innobed\QueryHistory\27<|||>1<|||>2020-09-03 19:35:12|admin_fs_innobed|16|SELECT<{{{><}}}>f.idlinea AS lineaProduccion,<{{{><}}}>MIN(pc.fecha) AS fechaPedido,<{{{><}}}>lpc.cantidad-ifnull(lpc.udsfabricadas,0) AS pendientes<{{{><}}}>FROM<{{{><}}}>pedidoscli pc<{{{><}}}>LEFT JOIN lineaspedidoscli lpc ON pc.idpedido=lpc.idpedido<{{{><}}}>LEFT JOIN productos p ON p.idproducto=lpc.idproducto<{{{><}}}>LEFT JOIN familias f ON f.codfamilia=p.codfamilia<{{{><}}}>LEFT JOIN lineasproduccion lpn ON lpn.idlinea=f.idlinea<{{{><}}}>WHERE <{{{><}}}>lpc.idproducto IS NOT NULL<{{{><}}}>GROUP BY f.idlinea<{{{><}}}>HAVING pendientes>0<{{{><}}}><{{{><}}}>
Servers\fs_innobed\QueryHistory\28<|||>1<|||>2020-09-03 19:36:46|admin_fs_innobed|16|SELECT idlinea FROM lineasproduccion GROUP BY idlinea
Servers\fs_innobed\QueryHistory\29<|||>1<|||>2020-09-03 19:40:44|admin_fs_innobed|297|CREATE VIEW produccionespendientes AS<{{{><}}}>(SELECT<{{{><}}}>lpc.idpedido,<{{{><}}}>lpc.idproducto,<{{{><}}}>lpc.cantidad,<{{{><}}}>lpc.udsfabricadas,<{{{><}}}>lpc.fentrega,<{{{><}}}>lpc.ffabricacion,<{{{><}}}>p.codfamilia,<{{{><}}}>p.unidadeshora,<{{{><}}}>f.idlinea,<{{{><}}}>lpn.horasdedicadas,<{{{><}}}>lpc.cantidad-ifnull(lpc.udsfabricadas,0) AS pendientes,<{{{><}}}>(lpn.horasdedicadas)*60*60 AS segundosdedicados,<{{{><}}}>(lpc.cantidad/p.unidadeshora)*60*60 AS tiempoNecesario<{{{><}}}>FROM<{{{><}}}>lineaspedidoscli lpc<{{{><}}}>LEFT JOIN productos p ON p.idproducto=lpc.idproducto<{{{><}}}>LEFT JOIN familias f ON f.codfamilia=p.codfamilia<{{{><}}}>LEFT JOIN lineasproduccion lpn ON lpn.idlinea=f.idlinea<{{{><}}}>WHERE <{{{><}}}>lpc.idproducto IS NOT NULL<{{{><}}}>HAVING pendientes>0)
Servers\fs_innobed\QueryHistory\30<|||>1<|||>2020-09-03 19:46:46|admin_fs_innobed|15|SELECT<{{{><}}}>lpc.idpedido,<{{{><}}}>lpc.idproducto,<{{{><}}}>lpc.cantidad,<{{{><}}}>lpc.udsfabricadas,<{{{><}}}>lpc.fentrega,<{{{><}}}>lpc.ffabricacion,<{{{><}}}>p.codfamilia,<{{{><}}}>p.unidadeshora,<{{{><}}}>f.idlinea,<{{{><}}}>lpn.horasdedicadas,<{{{><}}}>lpc.cantidad-ifnull(lpc.udsfabricadas,0) AS pendientes,<{{{><}}}>(lpn.horasdedicadas)*60*60 AS segundosdedicados,<{{{><}}}>(lpc.cantidad/p.unidadeshora)*60*60 AS tiempoNecesario<{{{><}}}>FROM<{{{><}}}>lineaspedidoscli lpc<{{{><}}}>LEFT JOIN pedidoscli pc ON pc.idpedido=lpc.idpedido<{{{><}}}>LEFT JOIN productos p ON p.idproducto=lpc.idproducto<{{{><}}}>LEFT JOIN familias f ON f.codfamilia=p.codfamilia<{{{><}}}>LEFT JOIN lineasproduccion lpn ON lpn.idlinea=f.idlinea<{{{><}}}>WHERE <{{{><}}}>lpc.idproducto IS NOT NULL<{{{><}}}>HAVING pendientes>0
Servers\fs_innobed\QueryHistory\32<|||>1<|||>2020-09-03 19:48:14|admin_fs_innobed|46|CREATE VIEW produccionpendiente AS <{{{><}}}>(SELECT<{{{><}}}>pc.fecha,<{{{><}}}>lpc.idpedido,<{{{><}}}>lpc.idproducto,<{{{><}}}>lpc.cantidad,<{{{><}}}>lpc.udsfabricadas,<{{{><}}}>lpc.fentrega,<{{{><}}}>lpc.ffabricacion,<{{{><}}}>p.codfamilia,<{{{><}}}>p.unidadeshora,<{{{><}}}>f.idlinea,<{{{><}}}>lpn.horasdedicadas,<{{{><}}}>lpc.cantidad-ifnull(lpc.udsfabricadas,0) AS pendientes,<{{{><}}}>(lpn.horasdedicadas)*60*60 AS segundosdedicados,<{{{><}}}>(lpc.cantidad/p.unidadeshora)*60*60 AS tiempoNecesario<{{{><}}}>FROM<{{{><}}}>lineaspedidoscli lpc<{{{><}}}>LEFT JOIN pedidoscli pc ON pc.idpedido=lpc.idpedido<{{{><}}}>LEFT JOIN productos p ON p.idproducto=lpc.idproducto<{{{><}}}>LEFT JOIN familias f ON f.codfamilia=p.codfamilia<{{{><}}}>LEFT JOIN lineasproduccion lpn ON lpn.idlinea=f.idlinea<{{{><}}}>WHERE <{{{><}}}>lpc.idproducto IS NOT NULL<{{{><}}}>HAVING pendientes>0)
Servers\fs_innobed\QueryHistory\34<|||>1<|||>2020-09-03 19:52:55|admin_fs_innobed|15|SELECT lp.idlinea,<{{{><}}}>(SELECT MIN(fecha) FROM produccionpendiente pd WHERE pd.idlinea=lp.idlinea) AS fechaMinima<{{{><}}}>FROM lineasproduccion lp GROUP BY lp.idlinea
Servers\fs_innobed\QueryHistory\33<|||>1<|||>2020-09-03 20:04:20|admin_fs_innobed|16|SELECT<{{{><}}}>f.idlinea AS lineaProduccion,<{{{><}}}>MIN(pc.fecha) AS fechaPedido,<{{{><}}}>lpc.cantidad-ifnull(lpc.udsfabricadas,0) AS pendientes<{{{><}}}>FROM<{{{><}}}>pedidoscli pc<{{{><}}}>LEFT JOIN lineaspedidoscli lpc ON pc.idpedido=lpc.idpedido<{{{><}}}>LEFT JOIN productos p ON p.idproducto=lpc.idproducto<{{{><}}}>LEFT JOIN familias f ON f.codfamilia=p.codfamilia<{{{><}}}>LEFT JOIN lineasproduccion lpn ON lpn.idlinea=f.idlinea<{{{><}}}>WHERE <{{{><}}}>lpc.idproducto IS NOT NULL<{{{><}}}>GROUP BY lpn.idlinea<{{{><}}}>HAVING pendientes>0<{{{><}}}><{{{><}}}>
Servers\fs_innobed\QueryHistory\24<|||>1<|||>2020-09-03 20:04:42|admin_fs_innobed|16|SELECT<{{{><}}}>pc.fecha,<{{{><}}}>lpc.idpedido,<{{{><}}}>lpc.idproducto,<{{{><}}}>lpc.cantidad,<{{{><}}}>lpc.udsfabricadas,<{{{><}}}>lpc.fentrega,<{{{><}}}>lpc.ffabricacion,<{{{><}}}>p.codfamilia,<{{{><}}}>p.unidadeshora,<{{{><}}}>f.idlinea,<{{{><}}}>lpn.horasdedicadas,<{{{><}}}>lpc.cantidad-ifnull(lpc.udsfabricadas,0) AS pendientes,<{{{><}}}>(lpn.horasdedicadas)*60*60 AS segundosdedicados,<{{{><}}}>(lpc.cantidad/p.unidadeshora)*60*60 AS tiempoNecesario<{{{><}}}>FROM<{{{><}}}>lineaspedidoscli lpc<{{{><}}}>LEFT JOIN pedidoscli pc ON pc.idpedido=lpc.idpedido<{{{><}}}>LEFT JOIN productos p ON p.idproducto=lpc.idproducto<{{{><}}}>LEFT JOIN familias f ON f.codfamilia=p.codfamilia<{{{><}}}>LEFT JOIN lineasproduccion lpn ON lpn.idlinea=f.idlinea<{{{><}}}>WHERE <{{{><}}}>lpc.idproducto IS NOT NULL<{{{><}}}>HAVING pendientes>0
Servers\fs_innobed\QueryHistory\31<|||>1<|||>2020-09-03 20:10:24|admin_fs_innobed|32|SELECT lp.idlinea,<{{{><}}}>(SELECT MIN(fecha) FROM produccionpendiente pd WHERE pd.idlinea=lp.idlinea) AS fechaMinima,<{{{><}}}>horasdedicadas*60*60 AS segundosdedicados<{{{><}}}>FROM lineasproduccion lp GROUP BY lp.idlinea
Servers\fs_innobed\QueryHistory\35<|||>1<|||>2020-09-03 20:19:49|admin_fs_innobed|16|SELECT<{{{><}}}>pc.fecha,<{{{><}}}>lpc.idpedido,<{{{><}}}>lpc.idlinea AS lineapedido,<{{{><}}}>lpc.idproducto,<{{{><}}}>lpc.cantidad,<{{{><}}}>lpc.udsfabricadas,<{{{><}}}>lpc.fentrega,<{{{><}}}>lpc.ffabricacion,<{{{><}}}>p.codfamilia,<{{{><}}}>p.unidadeshora,<{{{><}}}>f.idlinea,<{{{><}}}>lpn.horasdedicadas,<{{{><}}}>lpc.cantidad-ifnull(lpc.udsfabricadas,0) AS pendientes,<{{{><}}}>(lpn.horasdedicadas)*60*60 AS segundosdedicados,<{{{><}}}>(lpc.cantidad/p.unidadeshora)*60*60 AS tiempoNecesario<{{{><}}}>FROM<{{{><}}}>lineaspedidoscli lpc<{{{><}}}>LEFT JOIN pedidoscli pc ON pc.idpedido=lpc.idpedido<{{{><}}}>LEFT JOIN productos p ON p.idproducto=lpc.idproducto<{{{><}}}>LEFT JOIN familias f ON f.codfamilia=p.codfamilia<{{{><}}}>LEFT JOIN lineasproduccion lpn ON lpn.idlinea=f.idlinea<{{{><}}}>WHERE <{{{><}}}>lpc.idproducto IS NOT NULL<{{{><}}}>HAVING pendientes>0
Servers\fs_innobed\QueryHistory\37<|||>1<|||>2020-09-04 09:57:38|admin_fs_innobed|32|SELECT * FROM produccionpendiente
Servers\fs_innobed\QueryHistory\36<|||>1<|||>2020-09-04 11:39:27|admin_fs_innobed|16|SELECT MIN(ffabricacion),MAX(ffabricacion),MAX(fcarga) FROM lineaspedidoscli GROUP BY idpedido
Servers\fs_innobed\QueryHistory\38<|||>1<|||>2020-09-04 11:40:48|admin_fs_innobed|31|SELECT MIN(ffabricacion) AS inicio,MAX(ffabricacion) AS fin,MAX(fcarga) AS carga FROM lineaspedidoscli GROUP BY idpedido
Servers\fs_innobed\QueryHistory\39<|||>1<|||>2020-09-04 11:40:59|admin_fs_innobed|15|SELECT idpedido,MIN(ffabricacion) AS inicio,MAX(ffabricacion) AS fin,MAX(fcarga) AS carga FROM lineaspedidoscli GROUP BY idpedido
Servers\fs_innobed\QueryHistory\40<|||>1<|||>2020-09-04 13:30:00|admin_fs_innobed|16|SELECT * FROM lineasproduccion
Servers\fs_innobed\QueryHistory\41<|||>1<|||>2020-09-04 13:31:15|admin_fs_innobed|31|SELECT * FROM lineasproduccion lp<{{{><}}}>LEFT JOIN produccionpendiente pp ON pp.idlinea=lp.idlinea<{{{><}}}>GROUP BY pp.idlinea 
Servers\fs_innobed\QueryHistory\42<|||>1<|||>2020-09-04 13:31:58|admin_fs_innobed|15|SELECT * FROM produccionpendiente pp<{{{><}}}>LEFT JOIN lineasproduccion lp ON pp.idlinea=lp.idlinea<{{{><}}}>GROUP BY pp.idlinea <{{{><}}}>
Servers\fs_innobed\QueryHistory\43<|||>1<|||>2020-09-04 13:33:14|admin_fs_innobed|31|SELECT lp.linea,lp.horasdedicadas,lp.descripcion,lp.fechacreacion FROM produccionpendiente pp<{{{><}}}>LEFT JOIN lineasproduccion lp ON pp.idlinea=lp.idlinea<{{{><}}}>GROUP BY pp.idlinea <{{{><}}}>
Servers\fs_innobed\QueryHistory\46<|||>1<|||>2020-09-04 13:33:33|admin_fs_innobed|31|SELECT lp.idlinea,lp.linea,lp.horasdedicadas,lp.descripcion,lp.fechacreacion FROM produccionpendiente pp<{{{><}}}>LEFT JOIN lineasproduccion lp ON pp.idlinea=lp.idlinea<{{{><}}}>GROUP BY pp.idlinea <{{{><}}}>
Servers\fs_innobed\QueryHistory\47<|||>1<|||>2020-09-04 13:36:11|admin_fs_innobed|15|SELECT ifnull(lp.idlinea,0),ifnull(lp.linea,'Sin Linea Asignada'),ifnull(lp.horasdedicadas,8),ifnull(lp.descripcion,'Referencias sin linea de producción asignada.'),ifnull(lp.fechacreacion,curdate()) FROM produccionpendiente pp<{{{><}}}>LEFT JOIN lineasproduccion lp ON pp.idlinea=lp.idlinea<{{{><}}}>GROUP BY pp.idlinea <{{{><}}}>
Servers\fs_innobed\QueryHistory\48<|||>1<|||>2020-09-04 13:37:19|admin_fs_innobed|31|SELECT <{{{><}}}>ifnull(lp.idlinea,0) AS idlinea,<{{{><}}}>ifnull(lp.linea,'Sin Linea Asignada') AS linea,<{{{><}}}>ifnull(lp.horasdedicadas,8) AS horasdedicadas,<{{{><}}}>ifnull(lp.descripcion,'Referencias sin linea de producción asignada.') AS descripcion,<{{{><}}}>ifnull(lp.fechacreacion,CURDATE()) AS fechacreacion<{{{><}}}>FROM produccionpendiente pp<{{{><}}}>LEFT JOIN lineasproduccion lp ON pp.idlinea=lp.idlinea<{{{><}}}>GROUP BY pp.idlinea <{{{><}}}>
Servers\fs_innobed\QueryHistory\49<|||>1<|||>2020-09-04 13:59:35|admin_fs_innobed|31|SELECT lp.idlinea,<{{{><}}}>        (SELECT MIN(fecha) FROM produccionpendiente pd WHERE pd.idlinea=lp.idlinea) AS fechaMinima,<{{{><}}}>        horasdedicadas*60*60 AS segundosdedicados<{{{><}}}>        FROM lineasproduccion lp GROUP BY lp.idlinea
Servers\fs_innobed\QueryHistory\50<|||>1<|||>2020-09-04 14:00:54|admin_fs_innobed|31|SELECT lp.idlinea,<{{{><}}}>        (SELECT MIN(fecha) FROM produccionpendiente pd WHERE pd.idlinea=lp.idlinea) AS fechaMinima,<{{{><}}}>        lp.horasdedicadas*60*60 AS segundosdedicados<{{{><}}}>        FROM produccionpendiente pp <{{{><}}}>			LEFT JOIN lineasproduccion lp ON pp.idlinea=lp.idlinea		  <{{{><}}}>		  GROUP BY lp.idlinea
Servers\fs_innobed\QueryHistory\51<|||>1<|||>2020-09-04 14:02:01|admin_fs_innobed|31|SELECT ifnull(lp.idlinea,0) AS idlinea,<{{{><}}}>        (SELECT MIN(fecha) FROM produccionpendiente pd WHERE pd.idlinea=lp.idlinea) AS fechaMinima,<{{{><}}}>        lp.horasdedicadas*60*60 AS segundosdedicados<{{{><}}}>        FROM produccionpendiente pp <{{{><}}}>			LEFT JOIN lineasproduccion lp ON pp.idlinea=lp.idlinea		  <{{{><}}}>		  GROUP BY lp.idlinea
Servers\fs_innobed\QueryHistory\52<|||>1<|||>2020-09-04 14:02:40|admin_fs_innobed|32|SELECT ifnull(lp.idlinea,0) AS idlinea,<{{{><}}}>        IFNULL((SELECT MIN(fecha) FROM produccionpendiente pd WHERE pd.idlinea=lp.idlinea),CURDATE()) AS fechaMinima,<{{{><}}}>        lp.horasdedicadas*60*60 AS segundosdedicados<{{{><}}}>        FROM produccionpendiente pp <{{{><}}}>			LEFT JOIN lineasproduccion lp ON pp.idlinea=lp.idlinea		  <{{{><}}}>		  GROUP BY lp.idlinea
Servers\fs_innobed\QueryHistory\53<|||>1<|||>2020-09-04 14:03:04|admin_fs_innobed|31|SELECT ifnull(lp.idlinea,0) AS idlinea,<{{{><}}}>        IFNULL((SELECT MIN(fecha) FROM produccionpendiente pd WHERE pd.idlinea=lp.idlinea),CURDATE()) AS fechaMinima,<{{{><}}}>        ifnull(lp.horasdedicadas*60*60,8*60*60) AS segundosdedicados<{{{><}}}>        FROM produccionpendiente pp <{{{><}}}>			LEFT JOIN lineasproduccion lp ON pp.idlinea=lp.idlinea		  <{{{><}}}>		  GROUP BY lp.idlinea
Servers\fs_innobed\QueryHistory\55<|||>1<|||>2020-09-05 12:31:49|admin_fs_innobed|93|UPDATE familias SET idlinea=1 WHERE idlinea=0
Servers\fs_innobed\QueryHistory\56<|||>1<|||>2020-09-05 14:24:43|admin_fs_innobed|16|SELECT <{{{><}}}>        idpedido,<{{{><}}}>        MIN(ffabricacion) AS inicio,<{{{><}}}>        MAX(ffabricacion) AS fin,<{{{><}}}>        MAX(fentrega) AS entrega <{{{><}}}>        FROM lineaspedidoscli GROUP BY idpedido
Servers\fs_innobed\QueryHistory\54<|||>1<|||>2020-09-05 14:26:51|admin_fs_innobed|15|SELECT <{{{><}}}>        idpedido,<{{{><}}}>        (select MIN(ffabricacion) FROM lineaspedidoscli lpc WHERE lpc.idpedido=idpedido) AS inicio,<{{{><}}}>        (select MAX(ffabricacion) FROM lineaspedidoscli lpc WHERE lpc.idpedido=idpedido)  AS fin,<{{{><}}}>        MAX(fentrega) AS entrega <{{{><}}}>        FROM lineaspedidoscli GROUP BY idpedido
Servers\fs_innobed\QueryHistory\57<|||>1<|||>2020-09-05 14:27:24|admin_fs_innobed|31|SELECT <{{{><}}}>        idpedido,<{{{><}}}>        (select MIN(ffabricacion) FROM lineaspedidoscli lpc WHERE lpc.idpedido=idpedido) AS inicio,<{{{><}}}>        (select MAX(ffabricacion) FROM lineaspedidoscli lpc WHERE lpc.idpedido=idpedido)  AS fin,<{{{><}}}>        (select MAX(fentrega) FROM lineaspedidoscli lpc WHERE lpc.idpedido=idpedido) AS entrega <{{{><}}}>        FROM lineaspedidoscli GROUP BY idpedido
Servers\fs_innobed\QueryHistory\58<|||>1<|||>2020-09-05 14:28:37|admin_fs_innobed|47|SELECT MIN(ffabricacion) FROM lineaspedidoscli GROUP BY idpedido
Servers\fs_innobed\QueryHistory\59<|||>1<|||>2020-09-05 14:28:50|admin_fs_innobed|31|SELECT idpedido,MIN(ffabricacion) FROM lineaspedidoscli GROUP BY idpedido
Servers\fs_innobed\QueryHistory\60<|||>1<|||>2020-09-05 14:29:53|admin_fs_innobed|47|SELECT idpedido,MIN(ffabricacion) FROM lineaspedidoscli GROUP BY idpedido;<{{{><}}}>SELECT idpedido,MAX(ffabricacion) FROM lineaspedidoscli GROUP BY idpedido;<{{{><}}}>
Servers\fs_innobed\QueryHistory\61<|||>1<|||>2020-09-05 14:30:48|admin_fs_innobed|63|SELECT idpedido,MIN(ffabricacion),MAX(ffabricacion) FROM lineaspedidoscli GROUP BY idpedido;<{{{><}}}>SELECT idpedido,MAX(ffabricacion) FROM lineaspedidoscli GROUP BY idpedido;<{{{><}}}>
Servers\fs_innobed\QueryHistory\62<|||>1<|||>2020-09-05 14:31:41|admin_fs_innobed|31|SELECT idpedido,MIN(ffabricacion),MAX(ffabricacion),MAX(fentrega) FROM lineaspedidoscli GROUP BY idpedido;<{{{><}}}>
Servers\fs_innobed\QueryHistory\63<|||>1<|||>2020-09-05 14:32:20|admin_fs_innobed|16|SELECT idpedido,MIN(ffabricacion) AS inicio,MAX(ffabricacion) AS fin,MAX(fentrega) AS entrega FROM lineaspedidoscli GROUP BY idpedido;<{{{><}}}>
Servers\fs_innobed\QueryHistory\64<|||>1<|||>2020-09-05 14:32:42|admin_fs_innobed|94|SELECT idpedido,MIN(ffabricacion) AS inicio,MAX(ffabricacion) AS fin,MAX(fentrega) AS entrega FROM lineaspedidoscli GROUP BY idpedido;<{{{><}}}>SELECT <{{{><}}}>        idpedido,<{{{><}}}>        MIN(ffabricacion) AS inicio,<{{{><}}}>        MAX(ffabricacion) AS fin,<{{{><}}}>        MAX(fentrega) AS entrega <{{{><}}}>        FROM lineaspedidoscli GROUP BY idpedido;<{{{><}}}>
Servers\localhost\SessionCreated<|||>1<|||>2020-07-30 13:14:49
Servers\localhost\Host<|||>1<|||>127.0.0.1
Servers\localhost\WindowsAuth<|||>3<|||>0
Servers\localhost\CleartextPluginEnabled<|||>3<|||>0
Servers\localhost\User<|||>1<|||>root
Servers\localhost\Password<|||>1<|||>2
Servers\localhost\LoginPrompt<|||>3<|||>0
Servers\localhost\Port<|||>1<|||>3306
Servers\localhost\NetType<|||>3<|||>0
Servers\localhost\Compressed<|||>3<|||>0
Servers\localhost\LocalTimeZone<|||>3<|||>0
Servers\localhost\QueryTimeout<|||>3<|||>30
Servers\localhost\KeepAlive<|||>3<|||>20
Servers\localhost\FullTableStatus<|||>3<|||>1
Servers\localhost\Databases<|||>1<|||>
Servers\localhost\Library<|||>1<|||>libmariadb.dll
Servers\localhost\Comment<|||>1<|||>
Servers\localhost\StartupScriptFilename<|||>1<|||>
Servers\localhost\TreeBackground<|||>3<|||>536870911
Servers\localhost\SSHtunnelHost<|||>1<|||>
Servers\localhost\SSHtunnelHostPort<|||>3<|||>22
Servers\localhost\SSHtunnelUser<|||>1<|||>
Servers\localhost\SSHtunnelPassword<|||>1<|||>5
Servers\localhost\SSHtunnelTimeout<|||>3<|||>4
Servers\localhost\SSHtunnelPrivateKey<|||>1<|||>
Servers\localhost\SSHtunnelPort<|||>3<|||>3307
Servers\localhost\SSL_Active<|||>3<|||>0
Servers\localhost\SSL_Key<|||>1<|||>
Servers\localhost\SSL_Cert<|||>1<|||>
Servers\localhost\SSL_CA<|||>1<|||>
Servers\localhost\SSL_Cipher<|||>1<|||>
Servers\localhost\ServerVersionFull<|||>1<|||>10.4.17-MariaDB - mariadb.org binary distribution
Servers\localhost\ConnectCount<|||>3<|||>10
Servers\localhost\ServerVersion<|||>3<|||>100417
Servers\localhost\LastConnect<|||>1<|||>2021-01-29 09:37:14
Servers\localhost\RefusedCount<|||>3<|||>6
Servers\localhost\lastUsedDB<|||>1<|||>
Servers\localhost\QueryHistory\1<|||>1<|||>2021-01-20 12:08:50|paquete_crm|0|INSERT INTO `clientes` (`idCliente`, `fechaAlta`, `nombre`, `apellidos`, `dni`, `domicilio`, `codigo_postal`, `poblacion`, `provincia`, `telefono`, `movil`, `email`, `especialidad`, `cliente_potencial`, `cliente_perdido`, `cliente_archivado`, `empresa`, `cif_empresa`, `direccion_empresa`, `cp_empresa`, `poblacion_empresa`, `provincia_empresa`, `telefono_empresa`, `email_empresa`, `detalles`, `capital_empresa`, `web`, `rgpd`, `origenes`, `estado`, `fase`, `asignado_a`) VALUES<{{{><}}}>	(1, '2020-12-11 00:00:00', 'Sin asignar', '', '', '', '', '', '', '', '', '', '', 0, 0, 0, '', '', '', '', '', '', '', '', '', 0, '', 0, 1, 51, 1, NULL);
Servers\serrauto\SessionCreated<|||>1<|||>2020-08-03 12:15:27
Servers\serrauto\Host<|||>1<|||>dataleanmakers.net
Servers\serrauto\WindowsAuth<|||>3<|||>0
Servers\serrauto\CleartextPluginEnabled<|||>3<|||>0
Servers\serrauto\User<|||>1<|||>serrauto
Servers\serrauto\Password<|||>1<|||>5C6E7B7B6A7E7D783B393A422D9
Servers\serrauto\LoginPrompt<|||>3<|||>0
Servers\serrauto\Port<|||>1<|||>3306
Servers\serrauto\NetType<|||>3<|||>0
Servers\serrauto\Compressed<|||>3<|||>0
Servers\serrauto\LocalTimeZone<|||>3<|||>0
Servers\serrauto\QueryTimeout<|||>3<|||>30
Servers\serrauto\KeepAlive<|||>3<|||>20
Servers\serrauto\FullTableStatus<|||>3<|||>1
Servers\serrauto\Databases<|||>1<|||>
Servers\serrauto\Library<|||>1<|||>libmariadb.dll
Servers\serrauto\Comment<|||>1<|||>
Servers\serrauto\StartupScriptFilename<|||>1<|||>
Servers\serrauto\TreeBackground<|||>3<|||>536870911
Servers\serrauto\SSHtunnelHost<|||>1<|||>
Servers\serrauto\SSHtunnelHostPort<|||>3<|||>22
Servers\serrauto\SSHtunnelUser<|||>1<|||>
Servers\serrauto\SSHtunnelPassword<|||>1<|||>8
Servers\serrauto\SSHtunnelTimeout<|||>3<|||>4
Servers\serrauto\SSHtunnelPrivateKey<|||>1<|||>
Servers\serrauto\SSHtunnelPort<|||>3<|||>3307
Servers\serrauto\SSL_Active<|||>3<|||>0
Servers\serrauto\SSL_Key<|||>1<|||>
Servers\serrauto\SSL_Cert<|||>1<|||>
Servers\serrauto\SSL_CA<|||>1<|||>
Servers\serrauto\SSL_Cipher<|||>1<|||>
Servers\serrauto\ServerVersionFull<|||>1<|||>10.1.26-MariaDB-0+deb9u1 - Debian 9.1
Servers\serrauto\ConnectCount<|||>3<|||>9
Servers\serrauto\ServerVersion<|||>3<|||>100126
Servers\serrauto\LastConnect<|||>1<|||>2020-11-20 10:35:58
Servers\serrauto\lastUsedDB<|||>1<|||>admin_serrauto
Servers\serrauto\RefusedCount<|||>3<|||>5
Servers\serrauto\QueryHistory\6<|||>1<|||>2020-10-22 13:24:33|admin_serrauto|16|SELECT a.idAccion, a.idUsuario, a.idCliente, a.idTipoAccion, a.idEstadoAccion, a.idEntradaLead, a.idEntradaLeadPV, a.accion, a.fechaCreacion, a.fechaPlanificadaDesde, a.fechaPlanificadaHasta, a.fechaFinalizada, CONCAT(SUBSTRING(CONCAT(clientes.nombre, clientes.apellido1), 1, 12), "/", SUBSTRING(tipos_acciones.tipoAccion, 1, 4) ) as titulo, usuarios.usuario, tipos_acciones.tipoAccion, estados_acciones.estadoAccion FROM acciones a INNER JOIN clientes ON a.idCliente = clientes.idCliente INNER JOIN usuarios ON a.idUsuario = usuarios.idUsuario INNER JOIN tipos_acciones ON a.idTipoAccion = tipos_acciones.idTipoAccion INNER JOIN estados_acciones ON a.idEstadoAccion = estados_acciones.idEstadoAccion LEFT JOIN entradas_de_leads ON a.idEntradaLead = entradas_de_leads.idEntradaLead LEFT JOIN entradas_de_leads_pv ON a.idEntradaLeadPV = entradas_de_leads_pv.idEntradaLead WHERE 1=1 and ( a.idUsuario= 78 ) and ( a.idEstadoAccion= 1 OR a.idEstadoAccion= 2 ) and ( a.idEntradaLead is NULL OR a.idEntradaLeadPV is NULL) GROUP BY idAccion
Servers\serrauto\QueryHistory\1<|||>1<|||>2020-10-22 13:26:12|admin_serrauto|578|SELECT <{{{><}}}>a.idAccion, a.idUsuario, a.idCliente, a.idTipoAccion, a.idEstadoAccion, a.idEntradaLead, a.idEntradaLeadPV, a.accion, a.fechaCreacion, a.fechaPlanificadaDesde, a.fechaPlanificadaHasta, a.fechaFinalizada, CONCAT(SUBSTRING(CONCAT(clientes.nombre, clientes.apellido1), 1, 12), "/", SUBSTRING(tipos_acciones.tipoAccion, 1, 4) ) as titulo, usuarios.usuario, tipos_acciones.tipoAccion, estados_acciones.estadoAccion <{{{><}}}>FROM acciones a <{{{><}}}>INNER JOIN clientes ON a.idCliente = clientes.idCliente <{{{><}}}>INNER JOIN usuarios ON a.idUsuario = usuarios.idUsuario <{{{><}}}>INNER JOIN tipos_acciones ON a.idTipoAccion = tipos_acciones.idTipoAccion <{{{><}}}>INNER JOIN estados_acciones ON a.idEstadoAccion = estados_acciones.idEstadoAccion <{{{><}}}>LEFT JOIN entradas_de_leads ON a.idEntradaLead = entradas_de_leads.idEntradaLead <{{{><}}}>LEFT JOIN entradas_de_leads_pv ON a.idEntradaLeadPV = entradas_de_leads_pv.idEntradaLead <{{{><}}}>WHERE 1=1 <{{{><}}}>and ( a.idEstadoAccion= 1 OR a.idEstadoAccion= 2 ) <{{{><}}}>and ( a.idEntradaLead is NULL OR a.idEntradaLeadPV is NULL) <{{{><}}}>GROUP BY idAccion
Servers\serrauto\QueryHistory\2<|||>1<|||>2020-10-22 13:26:26|admin_serrauto|16|SELECT <{{{><}}}>a.idAccion, a.idUsuario, a.idCliente, a.idTipoAccion, a.idEstadoAccion, a.idEntradaLead, a.idEntradaLeadPV, a.accion, a.fechaCreacion, a.fechaPlanificadaDesde, a.fechaPlanificadaHasta, a.fechaFinalizada, CONCAT(SUBSTRING(CONCAT(clientes.nombre, clientes.apellido1), 1, 12), "/", SUBSTRING(tipos_acciones.tipoAccion, 1, 4) ) as titulo, usuarios.usuario, tipos_acciones.tipoAccion, estados_acciones.estadoAccion <{{{><}}}>FROM acciones a <{{{><}}}>INNER JOIN clientes ON a.idCliente = clientes.idCliente <{{{><}}}>INNER JOIN usuarios ON a.idUsuario = usuarios.idUsuario <{{{><}}}>INNER JOIN tipos_acciones ON a.idTipoAccion = tipos_acciones.idTipoAccion <{{{><}}}>INNER JOIN estados_acciones ON a.idEstadoAccion = estados_acciones.idEstadoAccion <{{{><}}}>LEFT JOIN entradas_de_leads ON a.idEntradaLead = entradas_de_leads.idEntradaLead <{{{><}}}>LEFT JOIN entradas_de_leads_pv ON a.idEntradaLeadPV = entradas_de_leads_pv.idEntradaLead <{{{><}}}>WHERE 1=1 <{{{><}}}>and ( a.idUsuario= 78 ) <{{{><}}}>and ( a.idEstadoAccion= 1 OR a.idEstadoAccion= 2 ) <{{{><}}}>and ( a.idEntradaLead is NULL OR a.idEntradaLeadPV is NULL) <{{{><}}}>GROUP BY idAccion
Servers\serrauto cliente\SessionCreated<|||>1<|||>2020-08-03 16:36:04
Servers\serrauto cliente\Host<|||>1<|||>192.168.100.4
Servers\serrauto cliente\WindowsAuth<|||>3<|||>0
Servers\serrauto cliente\CleartextPluginEnabled<|||>3<|||>0
Servers\serrauto cliente\User<|||>1<|||>root
Servers\serrauto cliente\Password<|||>1<|||>756E33383E35352B4C58465
Servers\serrauto cliente\LoginPrompt<|||>3<|||>0
Servers\serrauto cliente\Port<|||>1<|||>3306
Servers\serrauto cliente\NetType<|||>3<|||>0
Servers\serrauto cliente\Compressed<|||>3<|||>0
Servers\serrauto cliente\LocalTimeZone<|||>3<|||>0
Servers\serrauto cliente\QueryTimeout<|||>3<|||>30
Servers\serrauto cliente\KeepAlive<|||>3<|||>20
Servers\serrauto cliente\FullTableStatus<|||>3<|||>1
Servers\serrauto cliente\Databases<|||>1<|||>
Servers\serrauto cliente\Library<|||>1<|||>libmariadb.dll
Servers\serrauto cliente\Comment<|||>1<|||>
Servers\serrauto cliente\StartupScriptFilename<|||>1<|||>
Servers\serrauto cliente\TreeBackground<|||>3<|||>536870911
Servers\serrauto cliente\SSHtunnelHost<|||>1<|||>
Servers\serrauto cliente\SSHtunnelHostPort<|||>3<|||>22
Servers\serrauto cliente\SSHtunnelUser<|||>1<|||>
Servers\serrauto cliente\SSHtunnelPassword<|||>1<|||>4
Servers\serrauto cliente\SSHtunnelTimeout<|||>3<|||>4
Servers\serrauto cliente\SSHtunnelPrivateKey<|||>1<|||>
Servers\serrauto cliente\SSHtunnelPort<|||>3<|||>3307
Servers\serrauto cliente\SSL_Active<|||>3<|||>0
Servers\serrauto cliente\SSL_Key<|||>1<|||>
Servers\serrauto cliente\SSL_Cert<|||>1<|||>
Servers\serrauto cliente\SSL_CA<|||>1<|||>
Servers\serrauto cliente\SSL_Cipher<|||>1<|||>
Servers\serrauto cliente\RefusedCount<|||>3<|||>12
Servers\serrauto cliente\ServerVersionFull<|||>1<|||>5.6.50 - MySQL Community Server (GPL)
Servers\serrauto cliente\ConnectCount<|||>3<|||>13
Servers\serrauto cliente\ServerVersion<|||>3<|||>50650
Servers\serrauto cliente\LastConnect<|||>1<|||>2020-11-20 11:45:19
Servers\serrauto cliente\lastUsedDB<|||>1<|||>autoline_serrauto
Servers\serrauto cliente\autoline_serrauto|clientes_campanas\Sort<|||>1<|||>0_idCampana|1_estadoCampana|
Servers\serrauto cliente\autoline_serrauto|SO_RegistrosDeCabecera\RecentFilters\1<|||>1<|||>`Empresa` LIKE '%106980%' OR `WIPNO` LIKE '%106980%' OR `CUSTORD` LIKE '%106980%' OR CAST(`CREATED` AS CHAR) LIKE '%106980%'<{{{><}}}> OR `REGNO` LIKE '%106980%' OR `VSBNO` LIKE '%106980%' OR `ACCOUNT` LIKE '%106980%' OR `SALUTATN` LIKE '%106980%' OR `SALTYPE` LIKE '%106980%'<{{{><}}}> OR `CUSTNAME` LIKE '%106980%' OR `CUSADDR` LIKE '%106980%' OR `CUSADDR001` LIKE '%106980%' OR `CUSADDR002` LIKE '%106980%'<{{{><}}}> OR `CUSADDR003` LIKE '%106980%' OR `CUSADDR004` LIKE '%106980%' OR `CUSADDR005` LIKE '%106980%' OR `MODEL` LIKE '%106980%'<{{{><}}}> OR `RTSCOUNT` LIKE '%106980%' OR `CHASSIS` LIKE '%106980%' OR `ENGINE` LIKE '%106980%' OR `DEPT` LIKE '%106980%' OR CAST(`DATEREG` AS CHAR) LIKE '%106980%'<{{{><}}}> OR `MILEAGE` LIKE '%106980%' OR `FRANCODE` LIKE '%106980%' OR CAST(`DATEIN` AS CHAR) LIKE '%106980%' OR `TIMEIN` LIKE '%106980%'<{{{><}}}> OR CAST(`DATEOUT` AS CHAR) LIKE '%106980%' OR `TIMEOUT` LIKE '%106980%' OR `PHONE` LIKE '%106980%' OR `DISCTYPE` LIKE '%106980%'<{{{><}}}> OR `INVNO` LIKE '%106980%' OR `SALESMEN` LIKE '%106980%' OR `COMPNO` LIKE '%106980%' OR CAST(`UPDATED` AS CHAR) LIKE '%106980%'<{{{><}}}> OR `TERM` LIKE '%106980%' OR `MAGICV` LIKE '%106980%' OR `JOBNO` LIKE '%106980%' OR `SOLDBY` LIKE '%106980%' OR `WIPLABOR` LIKE '%106980%'<{{{><}}}> OR CAST(`WDATEIN` AS CHAR) LIKE '%106980%' OR `WTIMEIN` LIKE '%106980%' OR CAST(`WDATEOUT` AS CHAR) LIKE '%106980%' OR `WTIMEOUT` LIKE '%106980%'<{{{><}}}> OR `CUSTCONT` LIKE '%106980%' OR `MAGICT` LIKE '%106980%' OR `MAGICC` LIKE '%106980%' OR CAST(`DATEDEL` AS CHAR) LIKE '%106980%'<{{{><}}}> OR `MODELCOD` LIKE '%106980%' OR `INVABLE` LIKE '%106980%' OR `TEXT` LIKE '%106980%' OR `TEXT001` LIKE '%106980%' OR `TEXT002` LIKE '%106980%'<{{{><}}}> OR `TEXT003` LIKE '%106980%' OR `TEXT004` LIKE '%106980%' OR CAST(`WLSTARTD` AS CHAR) LIKE '%106980%' OR `WLSTARTT` LIKE '%106980%'<{{{><}}}> OR CAST(`WLENDD` AS CHAR) LIKE '%106980%' OR `WLENDT` LIKE '%106980%' OR `MILEAGE2` LIKE '%106980%' OR `PREVSERV` LIKE '%106980%'<{{{><}}}> OR `ADDTYPE` LIKE '%106980%' OR `ESTIMATE` LIKE '%106980%' OR `SOCIALID` LIKE '%106980%' OR `OPCREATE` LIKE '%106980%' OR `OPBOOKIN` LIKE '%106980%'<{{{><}}}> OR `OPINVOIC` LIKE '%106980%' OR `OPBOOKOU` LIKE '%106980%' OR `SERVCODE` LIKE '%106980%' OR `SERVCODE001` LIKE '%106980%'<{{{><}}}> OR `SERTEXT` LIKE '%106980%' OR `SERTEXT001` LIKE '%106980%'
Servers\serrauto cliente\gruposerranoautomocion|clientes\Filter<|||>1<|||>`idCliente` LIKE '%2%' OR CAST(`fechaAlta` AS CHAR) LIKE '%2%' OR `sexo` LIKE '%2%' OR `nombre` LIKE '%2%' OR `apellido1` LIKE '%2%' OR `apellido2` LIKE '%2%' OR `nacionalidad` LIKE '%2%'<{{{><}}}> OR CAST(`fechaNacimiento` AS CHAR) LIKE '%2%' OR CAST(`fechaCarnet` AS CHAR) LIKE '%2%' OR `dni` LIKE '%2%' OR `nacionalidadDni` LIKE '%2%' OR `telefonoMovil` LIKE '%2%' OR `ppalTelefonoMovil` LIKE '%2%'<{{{><}}}> OR `telefonoCasa` LIKE '%2%' OR `ppalTelefonoCasa` LIKE '%2%' OR `telefonoTrabajo` LIKE '%2%' OR `ppalTelefonoTrabajo` LIKE '%2%' OR `telefonoEmpresa` LIKE '%2%' OR `ppalTelefonoEmpresa` LIKE '%2%'<{{{><}}}> OR `fax` LIKE '%2%' OR `ppalFax` LIKE '%2%' OR `emailPersonal` LIKE '%2%' OR `ppalEmailPersonal` LIKE '%2%' OR `emailTrabajo` LIKE '%2%' OR `ppalEmailTrabajo` LIKE '%2%' OR `cuentaBancaria` LIKE '%2%'<{{{><}}}> OR `rgpd` LIKE '%2%'<{{{><}}}>
Servers\serrauto cliente\gruposerranoautomocion|clientes\RecentFilters\1<|||>1<|||>`idCliente` LIKE '%2%' OR CAST(`fechaAlta` AS CHAR) LIKE '%2%' OR `sexo` LIKE '%2%' OR `nombre` LIKE '%2%' OR `apellido1` LIKE '%2%' OR `apellido2` LIKE '%2%' OR `nacionalidad` LIKE '%2%'<{{{><}}}> OR CAST(`fechaNacimiento` AS CHAR) LIKE '%2%' OR CAST(`fechaCarnet` AS CHAR) LIKE '%2%' OR `dni` LIKE '%2%' OR `nacionalidadDni` LIKE '%2%' OR `telefonoMovil` LIKE '%2%' OR `ppalTelefonoMovil` LIKE '%2%'<{{{><}}}> OR `telefonoCasa` LIKE '%2%' OR `ppalTelefonoCasa` LIKE '%2%' OR `telefonoTrabajo` LIKE '%2%' OR `ppalTelefonoTrabajo` LIKE '%2%' OR `telefonoEmpresa` LIKE '%2%' OR `ppalTelefonoEmpresa` LIKE '%2%'<{{{><}}}> OR `fax` LIKE '%2%' OR `ppalFax` LIKE '%2%' OR `emailPersonal` LIKE '%2%' OR `ppalEmailPersonal` LIKE '%2%' OR `emailTrabajo` LIKE '%2%' OR `ppalEmailTrabajo` LIKE '%2%' OR `cuentaBancaria` LIKE '%2%'<{{{><}}}> OR `rgpd` LIKE '%2%'
Servers\serrauto cliente\gruposerranoautomocion|clientes\RecentFilters\2<|||>1<|||>`idCliente` LIKE '% insert%' OR CAST(`fechaAlta` AS CHAR) LIKE '% insert%' OR `sexo` LIKE '% insert%' OR `nombre` LIKE '% insert%' OR `apellido1` LIKE '% insert%' OR `apellido2` LIKE '% insert%'<{{{><}}}> OR `nacionalidad` LIKE '% insert%' OR CAST(`fechaNacimiento` AS CHAR) LIKE '% insert%' OR CAST(`fechaCarnet` AS CHAR) LIKE '% insert%' OR `dni` LIKE '% insert%' OR `nacionalidadDni` LIKE '% insert%'<{{{><}}}> OR `telefonoMovil` LIKE '% insert%' OR `ppalTelefonoMovil` LIKE '% insert%' OR `telefonoCasa` LIKE '% insert%' OR `ppalTelefonoCasa` LIKE '% insert%' OR `telefonoTrabajo` LIKE '% insert%'<{{{><}}}> OR `ppalTelefonoTrabajo` LIKE '% insert%' OR `telefonoEmpresa` LIKE '% insert%' OR `ppalTelefonoEmpresa` LIKE '% insert%' OR `fax` LIKE '% insert%' OR `ppalFax` LIKE '% insert%'<{{{><}}}> OR `emailPersonal` LIKE '% insert%' OR `ppalEmailPersonal` LIKE '% insert%' OR `emailTrabajo` LIKE '% insert%' OR `ppalEmailTrabajo` LIKE '% insert%' OR `cuentaBancaria` LIKE '% insert%'<{{{><}}}> OR `rgpd` LIKE '% insert%'
Servers\serrauto cliente\gruposerranoautomocion|clientes\RecentFilters\3<|||>1<|||>`idCliente` LIKE '%prueba insert%' OR CAST(`fechaAlta` AS CHAR) LIKE '%prueba insert%' OR `sexo` LIKE '%prueba insert%' OR `nombre` LIKE '%prueba insert%' OR `apellido1` LIKE '%prueba insert%'<{{{><}}}> OR `apellido2` LIKE '%prueba insert%' OR `nacionalidad` LIKE '%prueba insert%' OR CAST(`fechaNacimiento` AS CHAR) LIKE '%prueba insert%' OR CAST(`fechaCarnet` AS CHAR) LIKE '%prueba insert%'<{{{><}}}> OR `dni` LIKE '%prueba insert%' OR `nacionalidadDni` LIKE '%prueba insert%' OR `telefonoMovil` LIKE '%prueba insert%' OR `ppalTelefonoMovil` LIKE '%prueba insert%' OR `telefonoCasa` LIKE '%prueba insert%'<{{{><}}}> OR `ppalTelefonoCasa` LIKE '%prueba insert%' OR `telefonoTrabajo` LIKE '%prueba insert%' OR `ppalTelefonoTrabajo` LIKE '%prueba insert%' OR `telefonoEmpresa` LIKE '%prueba insert%'<{{{><}}}> OR `ppalTelefonoEmpresa` LIKE '%prueba insert%' OR `fax` LIKE '%prueba insert%' OR `ppalFax` LIKE '%prueba insert%' OR `emailPersonal` LIKE '%prueba insert%' OR `ppalEmailPersonal` LIKE '%prueba insert%'<{{{><}}}> OR `emailTrabajo` LIKE '%prueba insert%' OR `ppalEmailTrabajo` LIKE '%prueba insert%' OR `cuentaBancaria` LIKE '%prueba insert%' OR `rgpd` LIKE '%prueba insert%'
Servers\serrauto cliente\QueryHistory\125<|||>1<|||>2020-11-09 14:08:22|autoline_serrauto|5188|SELECT *<{{{><}}}>	 FROM vista_registrosCliente rc<{{{><}}}>	 left JOIN vista_registrosVehiculo rv ON rv.MAGIC=rc.MAGIC <{{{><}}}>	 left JOIN vista_registrosCabecera rcb ON rcb.MAGICT=rc.MAGIC<{{{><}}}>	 left JOIN sucursales ON sucursales.Id=rcb.Empresa  where (LEFT(SOCIALID,1) REGEXP '^-?[0-9]+$') AND (RIGHT(SOCIALID,1) not REGEXP '^-?[0-9]+$')  <{{{><}}}>	 and rv.FRAN IN('A','K','S','V') AND (rv.MILEAGE >="50000" OR rcb.MILEAGE >="50000") AND (rv.MILEAGE <="70000" OR rcb.MILEAGE <="70000") AND MODELYR="2010"   ORDER BY LASTWORK DESC LIMIT 3000
Servers\serrauto cliente\QueryHistory\1<|||>1<|||>2020-11-09 14:16:30|autoline_serrauto|6047|SELECT *<{{{><}}}>	 FROM vista_registrosCliente rc<{{{><}}}>	 left JOIN vista_registrosVehiculo rv ON rv.MAGIC=rc.MAGIC <{{{><}}}>	 left JOIN vista_registrosCabecera rcb ON rcb.MAGICT=rc.MAGIC<{{{><}}}>	 left JOIN sucursales ON sucursales.Id=rcb.Empresa  where (LEFT(SOCIALID,1) REGEXP '^-?[0-9]+$') AND (RIGHT(SOCIALID,1) not REGEXP '^-?[0-9]+$')  <{{{><}}}>	               ORDER BY LASTWORK DESC LIMIT 3000
Servers\serrauto cliente\QueryHistory\2<|||>1<|||>2020-11-09 14:17:43|autoline_serrauto|47938|SELECT *<{{{><}}}>	 FROM vista_registrosCliente rc<{{{><}}}>	 left JOIN vista_registrosVehiculo rv ON rv.MAGIC=rc.MAGIC <{{{><}}}>	 left JOIN vista_registrosCabecera rcb ON rcb.MAGICT=rc.MAGIC<{{{><}}}>	 left JOIN sucursales ON sucursales.Id=rcb.Empresa   <{{{><}}}>	               ORDER BY LASTWORK DESC LIMIT 3000
Servers\serrauto cliente\QueryHistory\3<|||>1<|||>2020-11-09 14:20:58|autoline_serrauto|45203|SELECT *<{{{><}}}>	 FROM vista_registrosCliente rc<{{{><}}}>	 left JOIN vista_registrosVehiculo rv ON rv.MAGIC=rc.MAGIC <{{{><}}}>	 left JOIN vista_registrosCabecera rcb ON rcb.MAGICT=rc.MAGIC<{{{><}}}>	 left JOIN sucursales ON sucursales.Id=rcb.Empresa  where (LEFT(DNI,1) REGEXP '^-?[0-9]+$') AND (RIGHT(DNI,1) not REGEXP '^-?[0-9]+$')  <{{{><}}}>	               ORDER BY LASTWORK DESC LIMIT 3000
Servers\serrauto cliente\QueryHistory\4<|||>1<|||>2020-11-09 15:34:21|autoline_serrauto|20078|SELECT *<{{{><}}}>	 FROM vista_registrosCliente rc<{{{><}}}>	 left JOIN vista_registrosVehiculo rv ON rv.MAGIC=rc.MAGIC <{{{><}}}>	 left JOIN vista_registrosCabecera rcb ON rcb.MAGICT=rc.MAGIC<{{{><}}}>	 left JOIN sucursales ON sucursales.Id=rcb.Empresa  where (LEFT(DNI,1) REGEXP '^-?[0-9]+$') AND (RIGHT(DNI,1) not REGEXP '^-?[0-9]+$')  <{{{><}}}>	 and rv.FRAN IN('A','K','S')               ORDER BY LASTWORK DESC LIMIT 3000;
Servers\serrauto cliente\QueryHistory\5<|||>1<|||>2020-11-11 09:07:08|autoline_serrauto|3063|SELECT *<{{{><}}}>	 FROM vista_registrosCliente rc<{{{><}}}>	 left JOIN vista_registrosVehiculo rv ON rv.MAGIC=rc.MAGIC <{{{><}}}>	 left JOIN vista_registrosCabecera rcb ON rcb.MAGICT=rc.MAGIC<{{{><}}}>	 left JOIN sucursales ON sucursales.Id=rcb.Empresa  where (LEFT(DNI,1) REGEXP '^-?[0-9]+$') AND (RIGHT(DNI,1) not REGEXP '^-?[0-9]+$')  <{{{><}}}>	 and rv.FRAN IN('K') ORDER BY LASTWORK DESC
Servers\serrauto cliente\QueryHistory\7<|||>1<|||>2020-11-11 09:07:32|autoline_serrauto|3203|SELECT *<{{{><}}}>	 FROM vista_registrosCliente rc<{{{><}}}>	 left JOIN vista_registrosVehiculo rv ON rv.MAGIC=rc.MAGIC <{{{><}}}>	 left JOIN vista_registrosCabecera rcb ON rcb.MAGICT=rc.MAGIC<{{{><}}}>	 left JOIN sucursales ON sucursales.Id=rcb.Empresa  where  rv.FRAN IN('K') ORDER BY LASTWORK DESC
Servers\serrauto cliente\QueryHistory\8<|||>1<|||>2020-11-11 09:07:58|autoline_serrauto|3703|SELECT *<{{{><}}}>	 FROM vista_registrosCliente rc<{{{><}}}>	 left JOIN vista_registrosVehiculo rv ON rv.MAGIC=rc.MAGIC <{{{><}}}>	 left JOIN vista_registrosCabecera rcb ON rcb.MAGICT=rc.MAGIC<{{{><}}}>	 left JOIN sucursales ON sucursales.Id=rcb.Empresa  ORDER BY LASTWORK DESC
Servers\serrauto cliente\QueryHistory\9<|||>1<|||>2020-11-11 09:09:24|autoline_serrauto|3110|SELECT *<{{{><}}}>	 FROM vista_registrosCliente rc<{{{><}}}>	 left JOIN vista_registrosVehiculo rv ON rv.MAGIC=rc.MAGIC <{{{><}}}>	 left JOIN vista_registrosCabecera rcb ON rcb.MAGICT=rc.MAGIC<{{{><}}}>	 left JOIN sucursales ON sucursales.Id=rcb.Empresa  where (LEFT(DNI,1) REGEXP '^-?[0-9]+$') AND (RIGHT(DNI,1) not REGEXP '^-?[0-9]+$')  <{{{><}}}>	 and rv.FRAN IN('K')               ORDER BY LASTWORK DESC LIMIT 3000
Servers\serrauto cliente\QueryHistory\10<|||>1<|||>2020-11-11 09:18:40|autoline_serrauto|109|SELECT *<{{{><}}}>	 FROM vista_registrosCabecera
Servers\serrauto cliente\QueryHistory\11<|||>1<|||>2020-11-11 09:19:51|autoline_serrauto|125|SELECT *<{{{><}}}>	 FROM vista_registrosCliente
Servers\serrauto cliente\QueryHistory\12<|||>1<|||>2020-11-11 09:20:22|autoline_serrauto|9766|SELECT *<{{{><}}}>	 FROM vista_registrosVehiculo
Servers\serrauto cliente\QueryHistory\13<|||>1<|||>2020-11-11 09:21:17|autoline_serrauto|3750|SELECT *<{{{><}}}>	 FROM vista_registrosCliente rc<{{{><}}}>	 left JOIN vista_registrosVehiculo rv ON rv.MAGIC=rc.MAGIC <{{{><}}}>	 left JOIN vista_registrosCabecera rcb ON rcb.MAGICT=rc.MAGIC<{{{><}}}>	 left JOIN sucursales ON sucursales.Id=rcb.Empresa  where (LEFT(DNI,1) REGEXP '^-?[0-9]+$') AND (RIGHT(DNI,1) not REGEXP '^-?[0-9]+$')  <{{{><}}}>	 and rv.FRAN IN('K')               ORDER BY LASTWORK DESC
Servers\serrauto cliente\QueryHistory\6<|||>1<|||>2020-11-11 09:21:37|autoline_serrauto|4172|SELECT *<{{{><}}}>	 FROM vista_registrosCliente rc<{{{><}}}>	 left JOIN vista_registrosVehiculo rv ON rv.MAGIC=rc.MAGIC <{{{><}}}>	 left JOIN vista_registrosCabecera rcb ON rcb.MAGICT=rc.MAGIC<{{{><}}}>	 left JOIN sucursales ON sucursales.Id=rcb.Empresa  
Servers\serrauto cliente\QueryHistory\14<|||>1<|||>2020-11-11 09:21:57|autoline_serrauto|3875|SELECT *<{{{><}}}>	 FROM vista_registrosCliente rc<{{{><}}}>	 left JOIN vista_registrosVehiculo rv ON rv.MAGIC=rc.MAGIC <{{{><}}}>	 left JOIN vista_registrosCabecera rcb ON rcb.MAGICT=rc.MAGIC
Servers\serrauto cliente\QueryHistory\15<|||>1<|||>2020-11-11 09:22:07|autoline_serrauto|3094|SELECT *<{{{><}}}>	 FROM vista_registrosCliente rc<{{{><}}}>	 left JOIN vista_registrosVehiculo rv ON rv.MAGIC=rc.MAGIC 
Servers\serrauto cliente\QueryHistory\16<|||>1<|||>2020-11-20 10:50:51|autoline_serrauto|1109|SELECT MAGIC,PHONE,PHONE001,PHONE002,PHONE003 FROM MK_RegsCliente
Servers\serrauto cliente\QueryHistory\17<|||>1<|||>2020-11-20 10:51:11|autoline_serrauto|1203|SELECT MAGIC,PHONE,PHONE001,PHONE002,PHONE003 FROM MK_RegsCliente ORDER BY MAGIC ASC
Servers\serrauto cliente\QueryHistory\18<|||>1<|||>2020-11-20 11:04:14|autoline_serrauto|2469|SELECT MAGIC,PHONE,PHONE001,PHONE002,PHONE003 FROM MK_RegsCliente ORDER BY MAGIC ASC;<{{{><}}}><{{{><}}}>SELECT MAGIC AS idCLiente, PHONE AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC AS idCLiente, PHONE001 AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente;
Servers\serrauto cliente\QueryHistory\19<|||>1<|||>2020-11-20 11:05:14|autoline_serrauto|5375|SELECT MAGIC,PHONE,PHONE001,PHONE002,PHONE003 FROM MK_RegsCliente ORDER BY MAGIC ASC;<{{{><}}}><{{{><}}}>SELECT MAGIC AS idCLiente, PHONE AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC AS idCLiente, PHONE001 AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC AS idCLiente, PHONE002 AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC AS idCLiente, PHONE003 AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente;
Servers\serrauto cliente\QueryHistory\20<|||>1<|||>2020-11-20 11:16:21|autoline_serrauto|15030|SELECT MAGIC,PHONE,PHONE001,PHONE002,PHONE003 FROM MK_RegsCliente ORDER BY MAGIC ASC;<{{{><}}}><{{{><}}}>SELECT *<{{{><}}}>FROM (    <{{{><}}}>SELECT MAGIC, PHONE AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, PHONE001 AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, PHONE002 AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, PHONE003 AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente) telefonos_MK_RegsCliente<{{{><}}}>ORDER BY MAGIC ASC;
Servers\serrauto cliente\QueryHistory\21<|||>1<|||>2020-11-20 11:18:06|autoline_serrauto|23031|SELECT MAGIC,PHONE,PHONE001,PHONE002,PHONE003 FROM MK_RegsCliente ORDER BY MAGIC ASC;<{{{><}}}><{{{><}}}>SELECT *<{{{><}}}>FROM (    <{{{><}}}>SELECT MAGIC, PHONE AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, PHONE001 AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, PHONE002 AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, PHONE003 AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente) telefonos_MK_RegsCliente WHERE Telefono IS NOT null<{{{><}}}>ORDER BY MAGIC ASC;
Servers\serrauto cliente\QueryHistory\22<|||>1<|||>2020-11-20 11:19:24|autoline_serrauto|16016|SELECT MAGIC,PHONE,PHONE001,PHONE002,PHONE003 FROM MK_RegsCliente ORDER BY MAGIC ASC;<{{{><}}}><{{{><}}}>SELECT *<{{{><}}}>FROM (    <{{{><}}}>SELECT MAGIC, PHONE AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, PHONE001 AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, PHONE002 AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, PHONE003 AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente) telefonos_MK_RegsCliente WHERE Telefono!=''<{{{><}}}>ORDER BY MAGIC ASC;
Servers\serrauto cliente\QueryHistory\23<|||>1<|||>2020-11-20 11:31:27|autoline_serrauto|14047|/*SELECT MAGIC,PHONE,PHONE001,PHONE002,PHONE003 FROM MK_RegsCliente ORDER BY MAGIC ASC;*/<{{{><}}}><{{{><}}}>SELECT *<{{{><}}}>FROM (    <{{{><}}}>SELECT MAGIC, PHONE AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, PHONE001 AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, PHONE002 AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, PHONE003 AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente) <{{{><}}}>telefonos_MK_RegsCliente<{{{><}}}>ORDER BY MAGIC ASC;
Servers\serrauto cliente\QueryHistory\24<|||>1<|||>2020-11-20 11:31:56|autoline_serrauto|6015|/*SELECT MAGIC,PHONE,PHONE001,PHONE002,PHONE003 FROM MK_RegsCliente ORDER BY MAGIC ASC;*/<{{{><}}}><{{{><}}}>SELECT *<{{{><}}}>FROM (    <{{{><}}}>SELECT MAGIC, PHONE AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, PHONE001 AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, PHONE002 AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, PHONE003 AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente) <{{{><}}}>telefonos_MK_RegsCliente WHERE Telefono!=''<{{{><}}}>ORDER BY MAGIC ASC;
Servers\serrauto cliente\QueryHistory\25<|||>1<|||>2020-11-20 11:32:24|autoline_serrauto|6016|/*SELECT MAGIC,PHONE,PHONE001,PHONE002,PHONE003 FROM MK_RegsCliente ORDER BY MAGIC ASC;*/<{{{><}}}><{{{><}}}>SELECT *<{{{><}}}>FROM (    <{{{><}}}>SELECT MAGIC, PHONE AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, PHONE001 AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, PHONE002 AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, PHONE003 AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente) <{{{><}}}>telefonos_MK_RegsCliente WHERE Telefono!='' AND MAGIC =2<{{{><}}}>ORDER BY MAGIC ASC;
Servers\serrauto cliente\QueryHistory\26<|||>1<|||>2020-11-20 11:32:58|autoline_serrauto|17063|/*SELECT MAGIC,PHONE,PHONE001,PHONE002,PHONE003 FROM MK_RegsCliente ORDER BY MAGIC ASC;*/<{{{><}}}><{{{><}}}>SELECT *<{{{><}}}>FROM (    <{{{><}}}>SELECT MAGIC, PHONE AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, PHONE001 AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, PHONE002 AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, PHONE003 AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente) <{{{><}}}>telefonos_MK_RegsCliente WHERE Telefono!='' <{{{><}}}>ORDER BY MAGIC ASC;
Servers\serrauto cliente\QueryHistory\27<|||>1<|||>2020-11-20 11:39:47|autoline_serrauto|16047|/*SELECT MAGIC,PHONE,PHONE001,PHONE002,PHONE003 FROM MK_RegsCliente ORDER BY MAGIC ASC;*/<{{{><}}}><{{{><}}}>SELECT *<{{{><}}}>FROM (    <{{{><}}}>SELECT MAGIC, if(LOCATE('0034',PHONE)>0,'PHONEcon',PHONE) AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, PHONE001 AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, PHONE002 AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, PHONE003 AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente) <{{{><}}}>telefonos_MK_RegsCliente WHERE Telefono!='' <{{{><}}}>ORDER BY MAGIC ASC;
Servers\serrauto cliente\QueryHistory\28<|||>1<|||>2020-11-20 11:42:29|autoline_serrauto|16047|/*SELECT MAGIC,PHONE,PHONE001,PHONE002,PHONE003 FROM MK_RegsCliente ORDER BY MAGIC ASC;*/<{{{><}}}><{{{><}}}>SELECT *<{{{><}}}>FROM (    <{{{><}}}>SELECT MAGIC, if(LOCATE('0034',PHONE)>0,SUBSTRING('0034PHONE' FROM 1 FOR 4),PHONE) AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, if(LOCATE('0034',PHONE001)>0,SUBSTRING('0034PHONE' FROM 1 FOR 4),PHONE001) AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, if(LOCATE('0034',PHONE002)>0,SUBSTRING('0034PHONE' FROM 1 FOR 4),PHONE002) AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, if(LOCATE('0034',PHONE003)>0,SUBSTRING('0034PHONE' FROM 1 FOR 4),PHONE003) AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente) <{{{><}}}>telefonos_MK_RegsCliente WHERE Telefono!='' <{{{><}}}>ORDER BY MAGIC ASC;
Servers\serrauto cliente\QueryHistory\29<|||>1<|||>2020-11-20 11:46:33|autoline_serrauto|24062|/*SELECT MAGIC,PHONE,PHONE001,PHONE002,PHONE003 FROM MK_RegsCliente ORDER BY MAGIC ASC;*/<{{{><}}}><{{{><}}}>SELECT *<{{{><}}}>FROM (    <{{{><}}}>SELECT MAGIC, if(LOCATE('0034',PHONE)>0,SUBSTRING('0034PHONE' FROM 4),PHONE) AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, if(LOCATE('0034',PHONE001)>0,SUBSTRING('0034PHONE' FROM 4),PHONE001) AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, if(LOCATE('0034',PHONE002)>0,SUBSTRING('0034PHONE' FROM 4),PHONE002) AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, if(LOCATE('0034',PHONE003)>0,SUBSTRING('0034PHONE' FROM 4),PHONE003) AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente) <{{{><}}}>telefonos_MK_RegsCliente WHERE Telefono!='' <{{{><}}}>ORDER BY MAGIC ASC;
Servers\serrauto cliente\QueryHistory\30<|||>1<|||>2020-11-20 11:47:22|autoline_serrauto|13047|/*SELECT MAGIC,PHONE,PHONE001,PHONE002,PHONE003 FROM MK_RegsCliente ORDER BY MAGIC ASC;*/<{{{><}}}><{{{><}}}>SELECT *<{{{><}}}>FROM (    <{{{><}}}>SELECT MAGIC, if(LOCATE('0034',PHONE)>0,SUBSTRING('0034PHONE' FROM 5),PHONE) AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, if(LOCATE('0034',PHONE001)>0,SUBSTRING('0034PHONE' FROM 5),PHONE001) AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, if(LOCATE('0034',PHONE002)>0,SUBSTRING('0034PHONE' FROM 5),PHONE002) AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, if(LOCATE('0034',PHONE003)>0,SUBSTRING('0034PHONE' FROM 5),PHONE003) AS Telefono, 'tipo' as Tipo FROM MK_RegsCliente) <{{{><}}}>telefonos_MK_RegsCliente WHERE Telefono!='' <{{{><}}}>ORDER BY MAGIC ASC;
Servers\serrauto cliente\QueryHistory\31<|||>1<|||>2020-11-20 11:57:41|autoline_serrauto|14047|/*SELECT MAGIC,PHONE,PHONE001,PHONE002,PHONE003 FROM MK_RegsCliente ORDER BY MAGIC ASC;*/<{{{><}}}><{{{><}}}>SELECT *<{{{><}}}>FROM (    <{{{><}}}>SELECT MAGIC, if(LOCATE('0034',PHONE)>0,SUBSTRING(PHONE FROM 5),PHONE) AS Telefono, if(LOCATE('0034',PHONE003)>0,SUBSTRING(PHONE003 FROM 5),PHONE003) as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, if(LOCATE('0034',PHONE001)>0,SUBSTRING(PHONE001 FROM 5),PHONE001) AS Telefono, if(LOCATE('0034',PHONE003)>0,SUBSTRING(PHONE003 FROM 5),PHONE003) as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, if(LOCATE('0034',PHONE002)>0,SUBSTRING(PHONE002 FROM 5),PHONE002) AS Telefono, if(LOCATE('0034',PHONE003)>0,SUBSTRING(PHONE003 FROM 5),PHONE003) as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, if(LOCATE('0034',PHONE003)>0,SUBSTRING(PHONE003 FROM 5),PHONE003) AS Telefono, <{{{><}}}>if(SUBSTRING((if(LOCATE('0034',PHONE003)>0,SUBSTRING(PHONE003 FROM 5),PHONE003))  ,1 , 1)=9,'Fijo','Movil') as Tipo FROM MK_RegsCliente) <{{{><}}}>telefonos_MK_RegsCliente WHERE Telefono!='' <{{{><}}}>ORDER BY MAGIC ASC;
Servers\serrauto cliente\QueryHistory\32<|||>1<|||>2020-11-20 11:59:42|autoline_serrauto|5704|/*SELECT MAGIC,PHONE,PHONE001,PHONE002,PHONE003 FROM MK_RegsCliente ORDER BY MAGIC ASC;*/<{{{><}}}><{{{><}}}>SELECT *<{{{><}}}>FROM (    <{{{><}}}>SELECT MAGIC, if(LOCATE('0034',PHONE)>0,SUBSTRING(PHONE FROM 5),PHONE) AS Telefono,<{{{><}}}>if(SUBSTRING((if(LOCATE('0034',PHONE)>0,SUBSTRING(PHONE FROM 5),PHONE))  ,1 , 1)=9,'Fijo','Movil') as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, if(LOCATE('0034',PHONE001)>0,SUBSTRING(PHONE001 FROM 5),PHONE001) AS Telefono,<{{{><}}}>if(SUBSTRING((if(LOCATE('0034',PHONE001)>0,SUBSTRING(PHONE001 FROM 5),PHONE001))  ,1 , 1)=9,'Fijo','Movil') as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, if(LOCATE('0034',PHONE002)>0,SUBSTRING(PHONE002 FROM 5),PHONE002) AS Telefono,<{{{><}}}>if(SUBSTRING((if(LOCATE('0034',PHONE002)>0,SUBSTRING(PHONE002 FROM 5),PHONE002))  ,1 , 1)=9,'Fijo','Movil') as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, if(LOCATE('0034',PHONE003)>0,SUBSTRING(PHONE003 FROM 5),PHONE003) AS Telefono, <{{{><}}}>if(SUBSTRING((if(LOCATE('0034',PHONE003)>0,SUBSTRING(PHONE003 FROM 5),PHONE003))  ,1 , 1)=9,'Fijo','Movil') as Tipo FROM MK_RegsCliente) <{{{><}}}>telefonos_MK_RegsCliente WHERE Telefono!='' <{{{><}}}>ORDER BY MAGIC ASC;
Servers\serrauto cliente\QueryHistory\33<|||>1<|||>2020-11-20 12:01:07|autoline_serrauto|14047|/*SELECT MAGIC,PHONE,PHONE001,PHONE002,PHONE003 FROM MK_RegsCliente ORDER BY MAGIC ASC;*/<{{{><}}}><{{{><}}}>SELECT *<{{{><}}}>FROM (    <{{{><}}}>SELECT MAGIC, if(LOCATE('00',PHONE)>0,SUBSTRING(PHONE FROM 5),PHONE) AS Telefono,<{{{><}}}>if(SUBSTRING((if(LOCATE('00',PHONE)>0,SUBSTRING(PHONE FROM 5),PHONE))  ,1 , 1)=9,'Fijo','Movil') as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, if(LOCATE('00',PHONE001)>0,SUBSTRING(PHONE001 FROM 5),PHONE001) AS Telefono,<{{{><}}}>if(SUBSTRING((if(LOCATE('00',PHONE001)>0,SUBSTRING(PHONE001 FROM 5),PHONE001))  ,1 , 1)=9,'Fijo','Movil') as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, if(LOCATE('00',PHONE002)>0,SUBSTRING(PHONE002 FROM 5),PHONE002) AS Telefono,<{{{><}}}>if(SUBSTRING((if(LOCATE('00',PHONE002)>0,SUBSTRING(PHONE002 FROM 5),PHONE002))  ,1 , 1)=9,'Fijo','Movil') as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, if(LOCATE('00',PHONE003)>0,SUBSTRING(PHONE003 FROM 5),PHONE003) AS Telefono, <{{{><}}}>if(SUBSTRING((if(LOCATE('00',PHONE003)>0,SUBSTRING(PHONE003 FROM 5),PHONE003))  ,1 , 1)=9,'Fijo','Movil') as Tipo FROM MK_RegsCliente) <{{{><}}}>telefonos_MK_RegsCliente WHERE Telefono!='' <{{{><}}}>ORDER BY MAGIC ASC;
Servers\serrauto cliente\QueryHistory\34<|||>1<|||>2020-11-20 12:01:42|autoline_serrauto|7015|/*SELECT MAGIC,PHONE,PHONE001,PHONE002,PHONE003 FROM MK_RegsCliente ORDER BY MAGIC ASC;*/<{{{><}}}><{{{><}}}>SELECT *<{{{><}}}>FROM (    <{{{><}}}>SELECT MAGIC, if(LOCATE('003',PHONE)>0,SUBSTRING(PHONE FROM 5),PHONE) AS Telefono,<{{{><}}}>if(SUBSTRING((if(LOCATE('003',PHONE)>0,SUBSTRING(PHONE FROM 5),PHONE))  ,1 , 1)=9,'Fijo','Movil') as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, if(LOCATE('003',PHONE001)>0,SUBSTRING(PHONE001 FROM 5),PHONE001) AS Telefono,<{{{><}}}>if(SUBSTRING((if(LOCATE('003',PHONE001)>0,SUBSTRING(PHONE001 FROM 5),PHONE001))  ,1 , 1)=9,'Fijo','Movil') as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, if(LOCATE('003',PHONE002)>0,SUBSTRING(PHONE002 FROM 5),PHONE002) AS Telefono,<{{{><}}}>if(SUBSTRING((if(LOCATE('003',PHONE002)>0,SUBSTRING(PHONE002 FROM 5),PHONE002))  ,1 , 1)=9,'Fijo','Movil') as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, if(LOCATE('003',PHONE003)>0,SUBSTRING(PHONE003 FROM 5),PHONE003) AS Telefono, <{{{><}}}>if(SUBSTRING((if(LOCATE('003',PHONE003)>0,SUBSTRING(PHONE003 FROM 5),PHONE003))  ,1 , 1)=9,'Fijo','Movil') as Tipo FROM MK_RegsCliente) <{{{><}}}>telefonos_MK_RegsCliente WHERE Telefono!='' <{{{><}}}>ORDER BY MAGIC ASC;
Servers\serrauto cliente\QueryHistory\35<|||>1<|||>2020-11-20 12:03:24|autoline_serrauto|10328|/*SELECT MAGIC,PHONE,PHONE001,PHONE002,PHONE003 FROM MK_RegsCliente ORDER BY MAGIC ASC;*/<{{{><}}}><{{{><}}}>SELECT *<{{{><}}}>FROM (    <{{{><}}}>SELECT MAGIC, SUBSTRING(if(LOCATE('003',PHONE)>0,SUBSTRING(PHONE FROM 5),PHONE),1,6) AS Telefono,<{{{><}}}>if(SUBSTRING((if(LOCATE('003',PHONE)>0,SUBSTRING(PHONE FROM 5),PHONE))  ,1 , 1)=9,'Fijo','Movil') as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, SUBSTRING(if(LOCATE('003',PHONE001)>0,SUBSTRING(PHONE001 FROM 5),PHONE001),1,6) AS Telefono,<{{{><}}}>if(SUBSTRING((if(LOCATE('003',PHONE001)>0,SUBSTRING(PHONE001 FROM 5),PHONE001))  ,1 , 1)=9,'Fijo','Movil') as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, SUBSTRING(if(LOCATE('003',PHONE002)>0,SUBSTRING(PHONE002 FROM 5),PHONE002),1,6) AS Telefono,<{{{><}}}>if(SUBSTRING((if(LOCATE('003',PHONE002)>0,SUBSTRING(PHONE002 FROM 5),PHONE002))  ,1 , 1)=9,'Fijo','Movil') as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, SUBSTRING(if(LOCATE('003',PHONE003)>0,SUBSTRING(PHONE003 FROM 5),PHONE003),1,6) AS Telefono, <{{{><}}}>if(SUBSTRING((if(LOCATE('003',PHONE003)>0,SUBSTRING(PHONE003 FROM 5),PHONE003))  ,1 , 1)=9,'Fijo','Movil') as Tipo FROM MK_RegsCliente) <{{{><}}}>telefonos_MK_RegsCliente WHERE Telefono!='' <{{{><}}}>ORDER BY MAGIC ASC;
Servers\serrauto cliente\QueryHistory\36<|||>1<|||>2020-11-20 12:04:11|autoline_serrauto|13047|/*SELECT MAGIC,PHONE,PHONE001,PHONE002,PHONE003 FROM MK_RegsCliente ORDER BY MAGIC ASC;*/<{{{><}}}><{{{><}}}>SELECT *<{{{><}}}>FROM (    <{{{><}}}>SELECT MAGIC, SUBSTRING(if(LOCATE('003',PHONE)>0,SUBSTRING(PHONE FROM 5),PHONE),1,9) AS Telefono,<{{{><}}}>if(SUBSTRING((if(LOCATE('003',PHONE)>0,SUBSTRING(PHONE FROM 5),PHONE))  ,1 , 1)=9,'Fijo','Movil') as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, SUBSTRING(if(LOCATE('003',PHONE001)>0,SUBSTRING(PHONE001 FROM 5),PHONE001),1,9) AS Telefono,<{{{><}}}>if(SUBSTRING((if(LOCATE('003',PHONE001)>0,SUBSTRING(PHONE001 FROM 5),PHONE001))  ,1 , 1)=9,'Fijo','Movil') as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, SUBSTRING(if(LOCATE('003',PHONE002)>0,SUBSTRING(PHONE002 FROM 5),PHONE002),1,9) AS Telefono,<{{{><}}}>if(SUBSTRING((if(LOCATE('003',PHONE002)>0,SUBSTRING(PHONE002 FROM 5),PHONE002))  ,1 , 1)=9,'Fijo','Movil') as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, SUBSTRING(if(LOCATE('003',PHONE003)>0,SUBSTRING(PHONE003 FROM 5),PHONE003),1,9) AS Telefono, <{{{><}}}>if(SUBSTRING((if(LOCATE('003',PHONE003)>0,SUBSTRING(PHONE003 FROM 5),PHONE003))  ,1 , 1)=9,'Fijo','Movil') as Tipo FROM MK_RegsCliente) <{{{><}}}>telefonos_MK_RegsCliente WHERE Telefono!='' <{{{><}}}>ORDER BY MAGIC ASC;
Servers\serrauto cliente\QueryHistory\37<|||>1<|||>2020-11-20 12:05:28|autoline_serrauto|11032|/*SELECT MAGIC,PHONE,PHONE001,PHONE002,PHONE003 FROM MK_RegsCliente ORDER BY MAGIC ASC;*/<{{{><}}}><{{{><}}}>SELECT *<{{{><}}}>FROM (    <{{{><}}}>SELECT MAGIC, SUBSTRING(if(LOCATE('003',PHONE)>0,SUBSTRING(PHONE FROM 5),PHONE),1,9) AS Telefono,<{{{><}}}>if(SUBSTRING((if(LOCATE('0034',PHONE)>0,SUBSTRING(PHONE FROM 5),PHONE))  ,1 , 1)=9,'Fijo','Movil') as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, SUBSTRING(if(LOCATE('003',PHONE001)>0,SUBSTRING(PHONE001 FROM 5),PHONE001),1,9) AS Telefono,<{{{><}}}>if(SUBSTRING((if(LOCATE('0034',PHONE001)>0,SUBSTRING(PHONE001 FROM 5),PHONE001))  ,1 , 1)=9,'Fijo','Movil') as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, SUBSTRING(if(LOCATE('003',PHONE002)>0,SUBSTRING(PHONE002 FROM 5),PHONE002),1,9) AS Telefono,<{{{><}}}>if(SUBSTRING((if(LOCATE('0034',PHONE002)>0,SUBSTRING(PHONE002 FROM 5),PHONE002))  ,1 , 1)=9,'Fijo','Movil') as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, SUBSTRING(if(LOCATE('003',PHONE003)>0,SUBSTRING(PHONE003 FROM 5),PHONE003),1,9) AS Telefono, <{{{><}}}>if(SUBSTRING((if(LOCATE('0034',PHONE003)>0,SUBSTRING(PHONE003 FROM 5),PHONE003))  ,1 , 1)=9,'Fijo','Movil') as Tipo FROM MK_RegsCliente) <{{{><}}}>telefonos_MK_RegsCliente WHERE Telefono!='' <{{{><}}}>ORDER BY MAGIC ASC;
Servers\serrauto cliente\QueryHistory\38<|||>1<|||>2020-11-20 12:07:54|autoline_serrauto|4110|/*SELECT MAGIC,PHONE,PHONE001,PHONE002,PHONE003 FROM MK_RegsCliente ORDER BY MAGIC ASC;*/<{{{><}}}><{{{><}}}>SELECT *<{{{><}}}>FROM (    <{{{><}}}>SELECT MAGIC, SUBSTRING(if(LOCATE('00',SUBSTRING(PHONE,1,2))>0,SUBSTRING(PHONE FROM 5),PHONE),1,9) AS Telefono,<{{{><}}}>if(SUBSTRING((if(LOCATE('00',SUBSTRING(PHONE,1,2))>0,SUBSTRING(PHONE FROM 5),PHONE))  ,1 , 1)=9,'Fijo','Movil') as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, SUBSTRING(if(LOCATE('00',SUBSTRING(PHONE001,1,2))>0,SUBSTRING(PHONE001 FROM 5),PHONE001),1,9) AS Telefono,<{{{><}}}>if(SUBSTRING((if(LOCATE('00',SUBSTRING(PHONE001,1,2))>0,SUBSTRING(PHONE001 FROM 5),PHONE001))  ,1 , 1)=9,'Fijo','Movil') as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, SUBSTRING(if(LOCATE('00',SUBSTRING(PHONE002,1,2))>0,SUBSTRING(PHONE002 FROM 5),PHONE002),1,9) AS Telefono,<{{{><}}}>if(SUBSTRING((if(LOCATE('00',SUBSTRING(PHONE002,1,2))>0,SUBSTRING(PHONE002 FROM 5),PHONE002))  ,1 , 1)=9,'Fijo','Movil') as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, SUBSTRING(if(LOCATE('00',SUBSTRING(PHONE003,1,2))>0,SUBSTRING(PHONE003 FROM 5),PHONE003),1,9) AS Telefono, <{{{><}}}>if(SUBSTRING((if(LOCATE('00',SUBSTRING(PHONE003,1,2))>0,SUBSTRING(PHONE003 FROM 5),PHONE003))  ,1 , 1)=9,'Fijo','Movil') as Tipo FROM MK_RegsCliente) <{{{><}}}>telefonos_MK_RegsCliente WHERE Telefono!='' <{{{><}}}>ORDER BY MAGIC ASC;
Servers\serrauto cliente\QueryHistory\39<|||>1<|||>2020-11-20 12:10:28|autoline_serrauto|8359|/*SELECT MAGIC,PHONE,PHONE001,PHONE002,PHONE003 FROM MK_RegsCliente ORDER BY MAGIC ASC;*/<{{{><}}}><{{{><}}}>SELECT *<{{{><}}}>FROM (    <{{{><}}}>SELECT MAGIC, SUBSTRING(if(LOCATE('00',SUBSTRING(PHONE,1,2))>0,SUBSTRING(PHONE FROM 5),PHONE),1,9) AS Telefono,<{{{><}}}>if(SUBSTRING((if(LOCATE('00',SUBSTRING(PHONE,1,2))>0,SUBSTRING(PHONE FROM 5),PHONE))  ,1 , 1)=9,'Fijo','Movil') as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, SUBSTRING(if(LOCATE('00',SUBSTRING(PHONE001,1,2))>0,SUBSTRING(PHONE001 FROM 5),PHONE001),1,9) AS Telefono,<{{{><}}}>if(SUBSTRING((if(LOCATE('00',SUBSTRING(PHONE001,1,2))>0,SUBSTRING(PHONE001 FROM 5),PHONE001))  ,1 , 1)=9,'Fijo','Movil') as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, SUBSTRING(if(LOCATE('00',SUBSTRING(PHONE002,1,2))>0,SUBSTRING(PHONE002 FROM 5),PHONE002),1,9) AS Telefono,<{{{><}}}>if(SUBSTRING((if(LOCATE('00',SUBSTRING(PHONE002,1,2))>0,SUBSTRING(PHONE002 FROM 5),PHONE002))  ,1 , 1)=9,'Fijo','Movil') as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, SUBSTRING(if(LOCATE('00',SUBSTRING(PHONE003,1,2))>0,SUBSTRING(PHONE003 FROM 5),PHONE003),1,9) AS Telefono, <{{{><}}}>if(SUBSTRING((if(LOCATE('00',SUBSTRING(PHONE003,1,2))>0,SUBSTRING(PHONE003 FROM 5),PHONE003))  ,1 , 1)=9,'Fijo','Movil') as Tipo FROM MK_RegsCliente) <{{{><}}}>telefonos_MK_RegsCliente WHERE Telefono!='' AND Telefono REGEXP '^[0-9]+$'<{{{><}}}>ORDER BY MAGIC ASC;
Servers\serrauto cliente\QueryHistory\40<|||>1<|||>2020-11-20 12:46:12|autoline_serrauto|31|CREATE VIEW telefonos AS <{{{><}}}>    <{{{><}}}>SELECT MAGIC, SUBSTRING(if(LOCATE('00',SUBSTRING(PHONE,1,2))>0,SUBSTRING(PHONE FROM 5),PHONE),1,9) AS Telefono,<{{{><}}}>if(SUBSTRING((if(LOCATE('00',SUBSTRING(PHONE,1,2))>0,SUBSTRING(PHONE FROM 5),PHONE))  ,1 , 1)=9,'Fijo','Movil') as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, SUBSTRING(if(LOCATE('00',SUBSTRING(PHONE001,1,2))>0,SUBSTRING(PHONE001 FROM 5),PHONE001),1,9) AS Telefono,<{{{><}}}>if(SUBSTRING((if(LOCATE('00',SUBSTRING(PHONE001,1,2))>0,SUBSTRING(PHONE001 FROM 5),PHONE001))  ,1 , 1)=9,'Fijo','Movil') as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, SUBSTRING(if(LOCATE('00',SUBSTRING(PHONE002,1,2))>0,SUBSTRING(PHONE002 FROM 5),PHONE002),1,9) AS Telefono,<{{{><}}}>if(SUBSTRING((if(LOCATE('00',SUBSTRING(PHONE002,1,2))>0,SUBSTRING(PHONE002 FROM 5),PHONE002))  ,1 , 1)=9,'Fijo','Movil') as Tipo FROM MK_RegsCliente<{{{><}}}>UNION<{{{><}}}>SELECT MAGIC, SUBSTRING(if(LOCATE('00',SUBSTRING(PHONE003,1,2))>0,SUBSTRING(PHONE003 FROM 5),PHONE003),1,9) AS Telefono, <{{{><}}}>if(SUBSTRING((if(LOCATE('00',SUBSTRING(PHONE003,1,2))>0,SUBSTRING(PHONE003 FROM 5),PHONE003))  ,1 , 1)=9,'Fijo','Movil') as Tipo FROM MK_RegsCliente;
Servers\serrauto cliente\QueryHistory\41<|||>1<|||>2020-11-20 12:47:06|autoline_serrauto|16|CREATE VIEW telefonos_MK_RegsCliente as <{{{><}}}>SELECT * from telefonos telefonos_MK_RegsCliente WHERE Telefono!='' AND Telefono REGEXP '^[0-9]+$'<{{{><}}}>ORDER BY MAGIC ASC ;
